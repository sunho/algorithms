/**************************************************************
# 문제 설명 
 [문제 3] 팰린드롬(Palindrome) 수 찾기 [20점]
(제한시간 1초, 부분점수 있음)
 
  팰린드롬(Palindrome)은 회문자라고도 하며 앞으로 읽으나 뒤로 읽으나 같은 내용이 되는 문자나 문장을 말한다. 거의 모든 0이상의 정수는 역순으로 된 수를 더하는 과정을 반복하면 어느 순간에는 팰린드롬인 수가 만들어진다. 
  예를 들어, 처음 수가 195일 경우, 아래와 같이 4번을 반복하여 더하면 팰린드롬 수가 만들어진다. 
   
           195 
591 
----- 
786 
687 
----- 
1473 
3741 
----- 
5214 
4125 
----- 
                     9339
   결과(팰린드롬 수)
   
  대부분의 0이상의 정수는 이런 몇 번의 반복으로 팰린드롬인 수를 만들 수 있지만 196만은 팰린드롬을 만들지 못하는 수이다. 왜 그런지는 아직 증명되지는 않았다.
  처음 수를 입력받아 몇 번 만에 팰린드롬인 수를 만들 수 있는지 그 횟수와 그 팰린드롬 수를 구하는 프로그램을 작성하시오.
   
 
# 입력 
 196을 제외한 0이상의 정수를 입력한다.
 (단, 입력숫자는 만들어지는 팰린드롬 수는 int범위를 넘기 때문에 64bit 정수형 변수를 사용하기 바랍니다.) - 조건 수정 2012. 11. 4
 
# 출력 
   출력내용은 반복한 횟수와 팰린드롬인 수를 출력한다.
 
# 입력 예시 
 195 
# 출력 예시 
 4 9339 
# 도움말 
  
# 출처 
 2007 교원프로그래밍경진대회 

*************************************************************/
#include <iostream>
using namespace std;

long long flip(long long n)
{
    long long n2=0;
    while(n!=0)
    {
        n2=(n2*10)+(n%10);
        n=n/10;
    }
    return n2;
}
bool pedro(long long n)
{
    return flip(n)==n;
}
int main()
{
    long long n;
    cin>>n;
    int total=0;
    while(!pedro(n))
    {
        total++;
        n+=flip(n);
    }
    cout<<total<<" "<<n;
}

/**************************************************************
	문제번호: 4018
	아이디: ksunhokim
	사용언어: C++
	결과: 정확한 풀이
	수행 시간:0 ms
	메모리 사용량:1696 kb
****************************************************************/

