/**************************************************************
# 문제 설명 
 주현이 엄마의 훈련강도는 점점 강해지고 있다.
이번에는 N개의 데이터를 차례대로 불러주고, M개의 질문을 하는데, 그 데이터를 몇 번째로 불렀는지를 묻고 있다. (정말 사악하다...)
하지만 이번에는어려울 것을 예상해서 데이터를 부를때 오름차순으로 부르기로 했다.
문제를 해결할 경우 주현이는 최신 장난감 "또봇 W 쉴드온"을 받을 수 있다.
주현이를 도와줄 수 있는 프로그램을 만드시오.
 
# 입력 
 첫째줄에 N이 입력된다. (1 <= N <= 1,000,000)
둘째 줄에 N개의 서로다른 숫자가 공백으로 구분되어 오름차순으로  입력된다. ( 데이터값의 범위 : 1 ~ 100,000,000)
셋째줄에 질문의 수 M이 입력된다. ( 1 <= M <= 100,000)
(단, 질문은 오름차순으로 묻지 않는다.)
넷째 줄에 M개의 질문이 입력된다
 
# 출력 
 M개의 질문에 대해 그 숫자가 있었으면 그 숫자의 위치를 출력, 없었으면 -1을 하나씩 차례대로 출력한다. 
# 입력 예시 
 5
2 23 55 87 100
4
5 2 100 55 
# 출력 예시 
 -1 1 5 3  
# 도움말 
  데이터가 정렬되어 있다면 이진 탐색을 활용하면 됩니다. 
# 출처 
 알고리즘(이진탐색) 

*************************************************************/
#include<cstdio>
#include<iostream>
struct tdata{
    int index;
    int data;
};
tdata ezin(int s,int *arr,int len){
    tdata g={-1,-1};
    int high=len,low=0,mid=(high+low)/2;
    for(;;){
        mid=(high+low)/2;
        if(s<arr[mid]){
            high=mid-1;
        }
        else if(s>arr[mid]){
            low = mid+1;
        }
        else if(s==arr[mid]){
            g.data=s;
            g.index=mid+1;
            break;
        }
        if(low==mid||mid==high){
            break;
        }
    }
    return g;
}
int main(){
    int len,len2;
    scanf("%d",&len);
    int arr[len];
    for(int i=0;i<len;i++){
            scanf("%d",&arr[i]);
    }
    //print(arr,len);
    scanf("%d",&len2);
    int s;
    for(int i=0;i<len2;i++){
        scanf("%d",&s);
        printf("%d ",ezin(s,arr,len).index);
    }
   // print(trap,len2);
}

/**************************************************************
	문제번호: 3002
	아이디: ksunhokim
	사용언어: C++
	결과: 정확한 풀이
	수행 시간:388 ms
	메모리 사용량:5476 kb
****************************************************************/

