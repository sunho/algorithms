/**************************************************************
# 문제 설명 
 콜라츠의 추측, 3n+1 문제, 우박수 문제라고 불리는 이 문제는 다음과 같다.

1, 어떤 자연수 n이 입력되면,
2. n이 홀수이면 3n+1을 하고,
3. n이 짝수이면 n/2를 한다.
4. 이 n이 1이 될때까지 2~3과정을 반복한다.

예를 들어 5는 5 → 16 → 8 → 4 → 2 → 1 이 된다.
여기서 5가 1이되기 위해 6개의 숫자를 나열하게 된다. 이것을 길이라고 하면 5의 길이는 6이된다.
시작수와 마지막 수가 입력되면 그 두 사이게 길이가 가장긴 우박수와 그 길이를 출력하시오.
 
# 입력 
 두 자연수 a, b가 공백으로 분리되어 입력된다. ( 1 <= a <= b <= 10,000,000 ) 
# 출력 
 a에서 b사이에 길이가 가장긴 우박수와 그 길이를 출력한다. 만약 가장 긴 수가 두 개이상인 경우, 작은 숫자를 출력하시오. 
# 입력 예시 
 1 10 
# 출력 예시 
 9 20 
# 도움말 
  
# 출처 
 유명한 문제 

*************************************************************/
#include <iostream>
using namespace std;
int memo[10000001];
long long total;
int rain(long long n)
{
    total++;
    if(n==1) return 1;
    if(n<=10000000)
        if(memo[n])
            return memo[n];
    if(n%2)
        return rain(n*3+1)+1;
    else
        return rain(n/2)+1;
}
int main()
{
    int a,b;
    int maxName=0,maxAmount=0;
    cin>>a>>b;
    for(int i=1;i<=10000;i++)
    {
        memo[i]=rain(i);
    }
    for(int i=a;i<=b;i++)
    {
        memo[i]=rain(i);
        if(maxAmount<memo[i]) maxName=i,maxAmount=memo[i];
    }
    cout<<maxName<<" "<<maxAmount<<endl;
}


/**************************************************************
	문제번호: 3733
	아이디: ksunhokim
	사용언어: C++
	결과: 정확한 풀이
	수행 시간:620 ms
	메모리 사용량:40760 kb
****************************************************************/

