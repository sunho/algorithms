/**************************************************************
# 문제 설명 
 버블 정렬이란 이웃하는 숫자들끼리 크기를 비교하여 자리를 바꾸는 정렬 기법이다.
버블 정렬은 구현이 쉬운 반면 속도가 빠른 편은 아니다.
그리고 가장 큰 단점으로 정렬이 이미 다 끝났는데도, 끝까지 대소비교를 하는 문제점이 있다.
예를 들어, 10 50 30 20 40 이 있고 오름차순으로 정렬한다면 총 4단계를 거치게되는데,
1단계 : 10 30 20 40 50
2단계 : 10 20 30 40 50  (정렬 완료)
3단계 : 10 20 30 40 50
4단계 : 10 20 30 40 50
4단계중 이미 2단계에서 정렬이 완료가 된다.
이 단계를 구하는것이 문제이다. 이 단계를 찾아 프로그램을 종료시키면 정렬속도를 향상 시킬수있다.
이 단계를 찾아 내는 프로그램을 작성하시오. 
# 입력 
 첫 줄에 데이터의 개수 n이 입력된다. (2 <= n <= 1,000)
둘째 줄에 n개의 데이터가 공백을 기준으로 입력된다.
 
# 출력 
 정렬이 끝나는 단계를 출력한다.
 
# 입력 예시 
 5
10 50 30 20 40 
# 출력 예시 
 2 
# 도움말 
  위키백과

거품 정렬(위키_영문)
거품 정렬(위키_한글)
 
# 출처 
 알고리즘(정렬) 

*************************************************************/
#include <iostream>

using namespace std;
int main()
{
    int arr[1000];
    int size;
    cin>>size;
    for(int i=0;i<size;i++)
    {
        cin>>arr[i];
    }
    int i;
    for(i=0;i<size-1;i++)
    {
        int isArr=0;
        for(int j=0;j<size-1-i;j++)
        {
            if(arr[j]>arr[j+1])
            {
                int temp=arr[j];
                arr[j]=arr[j+1];
                arr[j+1]=temp;
                isArr=1;
            }
        }
        if(isArr==0)
        {
            break;
        }
    }
    cout<<i;
}
/**************************************************************
	문제번호: 3011
	아이디: ksunhokim
	사용언어: C++
	결과: 정확한 풀이
	수행 시간:4 ms
	메모리 사용량:1696 kb
****************************************************************/

