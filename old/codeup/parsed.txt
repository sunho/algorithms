[{"Number":"4508","Time":"2017/01/11","Title":"회의 준비","Code":"/**************************************************************\n# 문제 설명 \n 문제3) 회의준비 (중등3, 고등3)\n\nKOI 준비를 위해 회의를 개최하려 한다. 주최측에서는 회의에 참석하는 사람의 수와 참석자들 사이의 관계를 따져 하나 이상의 위원회를 구성하려고 한다. 위원회를 구성하는 방식은 다음과 같다.\n\n1. 서로 알고 있는 사람은 반드시 같은 위원회에 속해야 한다.\n2. 효율적인 회의 진행을 위해 위원회의 수는 최대가 되어야 한다.\n\n이런 방식으로 위원회를 구성한 후에 각 위원회의 대표를 한 명씩 뽑아야 한다. 각 위원회의 대표만이 회의 시간 중 발언권을 가지며, 따라서 회의 참석자들이 자신의 의견을 말하기 위해서는 자신이 속한 위원회의 대표에게 자신의 의견을 전달해야 한다. 그런데 각 참석자는 자신이 알고 있는 사람에게만 의견을 전달할 수 있어 대표에게 의견을 전달하기 위해서는 때로 여러 사람을 거쳐야 한다. 대표에게 의견을 전달하는 경로가 여러 개 있를 경우에는 가장 적은 사람을 거치는 경로로 의견을 전달하며 이 때 거치는 사람의 수를 참석자의 의사전달시간이라고 한다.\n위원회에서 모든 참석자들의 의사전달시간 중 최대값이 최소가 되도록 대표를 정하는 프로그램을 작성하시오.\n예를 들어 1번, 2번, 3번 세 사람으로 구성되어 있는 위원회에서 1번과 2번, 2번과 3번이 서로 알고 있다고 하자. 1번이 대표가 되면 3번이 대표인 1번에게 의견을 전달하기 위해서 2번을 거쳐야만 한다. 반대로 3번이 대표가 되어도 1번이 대표인 3번에게 의견을 전달하려면 2번을 거쳐야만 한다. 하지만 2번이 대표가 되면 1번과 3번 둘 다 아무도 거치지 않고 대표에게 직접 의견을 전달 할 수 있다. 따라서 이와 같은 경우 2번이 대표가 되어야 한다.\n\n \n# 입력 \n 첫째 중에 회의에 참석하는 사람의 수 N이 주어진다. 참석자들은 1부터 N까지의 자연수로 표현되며 회의에 참석하는 인원은 100 이하이다.\n둘째 줄에는 서로 알고 있는 관계의 수 M이 주어진다.\n이어 M개의 각 줄에는 서로 아는 사이인 참석자를 나타내는 두개의 자연수가 주어진다.\n \n# 출력 \n 첫째 줄에는 구성되는 위원회의 수 K를 출력한다. 다음 K줄에는 각 위원회의 대표 번호를 작은 수부터 차례로 한 줄에 하나씩 출력한다. 한 위원회의 대표가 될 수 있는 사람이 둘 이상일 경우 그중 한 명만 출력하면 된다.\n \n# 입력 예시 \n 8\n7\n1 2\n2 3\n4 5\n5 6\n4 6\n6 7\n7 4 \n# 출력 예시 \n 3\n2\n4\n8\n \n# 도움말 \n ※ 스페셜져지 적용됨(2013. 06. 09) \n# 출처 \n 2004 지역본선 중등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cqueue\u003e\nusing namespace std;\ntypedef struct\n{\n    int mdis;\n    int dis;\n    int name;\n}vertex;\nint vertex_size;\nint table[101][101];\nvertex info[101];\nbool compare(const vertex\u0026 a,const vertex\u0026 b)\n{\n    return a.mdis\u003cb.mdis;\n}\nbool final_visit[101];\nvoid dfs(int n)\n{\n    final_visit[n]=1;\n    for(int i=1;i\u003c=vertex_size;i++)\n    {\n        if(table[n][i]\u0026\u0026!final_visit[i])\n        {\n            dfs(i);\n        }\n    }\n}\nint main()\n{\n    int connection_size;\n    cin\u003e\u003evertex_size;\n    cin\u003e\u003econnection_size;\n    for(int i=1;i\u003c=vertex_size;i++)\n    {\n        info[i].mdis=0;\n        info[i].name=i;\n    }\n    int a,b;\n    for(int i=1;i\u003c=connection_size;i++)\n    {\n        cin\u003e\u003ea\u003e\u003eb;\n        table[a][b]=1;\n        table[b][a]=1;\n    }\n    queue\u003cint\u003e qu;\n    for(int i=1;i\u003c=vertex_size;i++)\n    {\n        bool visit[101]={0};\n        qu.push(i);\n        visit[i]=1;\n        info[i].dis=0;\n        while(!qu.empty())\n        {\n            int here=qu.front();\n            qu.pop();\n            if(info[here].dis\u003einfo[i].mdis)\n                info[i].mdis=info[here].dis;\n            for(int j=1;j\u003c=vertex_size;j++)\n            {\n                if(table[here][j]\u0026\u0026!visit[j])\n                {\n                    visit[j]=1;\n                    info[j].dis=info[here].dis+1;\n                    qu.push(j);\n                }\n            }\n        }\n    }\n    vector\u003cint\u003e finals;\n    sort(info+1,info+vertex_size+1,compare);\n    for(int i=1;i\u003c=vertex_size;i++)\n    {\n        if(!final_visit[info[i].name])\n        {\n            finals.push_back(info[i].name);\n            dfs(info[i].name);\n        }\n    }\n    sort(finals.begin(),finals.end());\n    cout\u003c\u003cfinals.size()\u003c\u003cendl;\n    for(int i=0;i\u003cfinals.size();i++)\n    {\n        cout\u003c\u003cfinals[i]\u003c\u003cendl;\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4508\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:4 ms\n\t메모리 사용량:1760 kb\n****************************************************************/\n\n"},{"Number":"4484","Time":"2016/11/14","Title":"동전 바꿔주기","Code":"/**************************************************************\n# 문제 설명 \n 문제2)\n명보네 동네 가게의 현금 출납기에는 k 가지 동전이 각각 n1, n2, … , nk개 씩 들어있다. 가게 주인은 명보에게 T원의 지폐를 동전으로 바꿔 주려고 한다. 이때, 동전 교환 방법은 여러 가지가 있을 수 있다. 예를 들어, 10원 짜리, 5원 짜리, 1원 짜리 동전이 각각 2개, 3개, 5개씩 있을 때, 20원 짜리 지폐를 다음과 같은 4가지 방법으로 교환할 수 있다.\n20 = 10×2 \n20 = 10×1 + 5×2 \n20 = 10×1 + 5×1 + 1×5 \n20 = 5×3 + 1×5\n입력으로 지폐의 금액 T, 동전의 가지 수 k, 각 동전 하나의 금액 pi와 개수 ni가 주어질 때 (i=1, 2,…, k) 지폐를 동전으로 교환하는 방법의 가지 수를 계산하는 프로그램을 작성하시오. 방법 의 수는 231을 초과하지 않는 것으로 가정한다.\n \n# 입력 \n 첫째 줄에는 지폐의 금액 T(0＜T≤10,000), 둘째 줄에는 동전의 가지 수 k(0＜k≤100), 셋째 줄부터 마지막 줄까지는 각 줄에 동전의 금액 pi(0＜pi≤T)와 개수 ni(0＜ni≤1,000)가 주어진다. pi와 ni사이에는 빈칸이 하나씩 있다.\n \n# 출력 \n 첫째 줄에 동전 교환 방법의 가지 수를 출력한다. 방법이 없을 때는 0을 출력한다. \n# 입력 예시 \n 20\n3\n5 3\n10 2\n1 5 \n# 출력 예시 \n 4 \n# 도움말 \n  \n# 출처 \n 2002 KOI 중등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\n typedef struct{\n    int price,quantity;\n }coin;\n bool compare(const coin\u0026 a,const coin\u0026b)\n {\n     return a.price\u003cb.price;\n }\nint main()\n{\n    int goal;\n    coin coins[101];\n    int size;\n    cin\u003e\u003egoal;\n    cin\u003e\u003esize;\n    coins[0].price=0;\n    coins[0].quantity=0;\n    for(int i=1;i\u003c=size;i++)\n    {\n        cin\u003e\u003ecoins[i].price;\n        cin\u003e\u003ecoins[i].quantity;\n    }\n    sort(coins,coins+size,compare);\n\n    int DP[101][10001]={0};\n    DP[0][0]=1;\n    for(int i=1;i\u003c=size;i++)\n    {\n        DP[i][0]=1;\n        for(int j=1;j\u003c=goal;j++)\n        {\n            for(int z=0;z\u003c=coins[i].quantity;z++)\n            {\n                if(coins[i].price*z\u003ej) break;\n                DP[i][j]+=DP[i-1][j-coins[i].price*z];\n            }\n        }\n    }\n    cout\u003c\u003cDP[size][goal];\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4484\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:8 ms\n\t메모리 사용량:5528 kb\n****************************************************************/\n\n"},{"Number":"4028","Time":"2016/11/05","Title":"자리바꿈 소수","Code":"/**************************************************************\n# 문제 설명 \n [문제3] 자리바꿈 소수  (20점, 제한시간 1초)\n소수(prime number)는 1과 자신을 제외하고는 약수가 없는 수이다. 어떤 수에서 자리수의 위치를 바꾸었을 때 소수의 여부가 달라질 수 있다. 예를 들어, 23은 소수이지만, 십의 자리와 일의 자리의 수를 바꾸어 32가 되면 소수가 아니다.\n   \n입력되는 정수의 자리수를 바꾸어서 만들어질 수 있는 소수를 출력하는 프로그램을 작성하시오.\n   \n예를 들어, 113의 자리수를 바꾸면 113, 131, 311을 만들 수 있고(자신도 포함), 이들 중에서 소수는 113, 131, 311이다.\n \n# 입력 \n 1. 하나의 정수 n이 입력된다. (1≤n≤10,000)\n \n# 출력 \n 1. n의 자리수를 바꾸어서 만들어지는 모든 소수를 하나의 공백으로 분리하여 출력한다.\n2. 출력되는 수는 크기가 작은 수부터 큰 수의 순으로 출력한다.\n3. 같은 수가 중복되어 출력되면 안된다.\n4. 만들어지는 소수가 없으면 0을 출력한다.\n \n# 입력 예시 \n 1234 \n# 출력 예시 \n 1423 2143 2341 4231 \n# 도움말 \n  \n# 출처 \n 2009 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003csstream\u003e\n#include \u003cvector\u003e\n#include \u003cset\u003e\nusing namespace std;\nset\u003cint\u003e so;\nstring intToString(int n)\n{\n    stringstream s;\n    s \u003c\u003c n;\n    return s.str();\n}\nvoid makeN(vector\u003cint\u003e remain,string num)\n{\n    for(int i=0;i\u003cremain.size();i++)\n    {\n        vector\u003cint\u003e remain2=remain;\n        remain2.erase(remain2.begin()+i);\n        string num2=num+intToString(remain[i]);\n        makeN(remain2,num2);\n    }\n    if(remain.size()==0)\n    {\n        int num2;\n        stringstream(num)\u003e\u003enum2;\n        so.insert(num2);\n    }\n}\nbool isPrime(int n)\n{\n    for(int i=2;i*i\u003c=n;i++)\n    {\n        if(n%i==0)\n        {\n            return false;\n        }\n    }\n    return true;\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    vector\u003cint\u003e arr;\n    while(n!=0)\n    {\n        arr.push_back(n%10);\n        n/=10;\n    }\n    makeN(arr,\"\");\n    int d=0;\n    for(set\u003cint\u003e::iterator iter=so.begin();iter!=so.end();++iter)\n    {\n        if(isPrime(*iter))\n        {\n            cout\u003c\u003c*iter\u003c\u003c\" \";\n            d++;\n        }\n    }\n    if(d==0)\n    {\n        cout\u003c\u003c0;\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4028\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1744 kb\n****************************************************************/\n\n"},{"Number":"4463","Time":"2016/10/24","Title":"치즈","Code":"/**************************************************************\n# 문제 설명 \n 문제3) 치즈 (중등2)\n아래 \u003c그림 1\u003e과 같이 정사각형 칸들로 이루어진 사각형 모양의 판이 있고, 그 위에 얇은 치즈(회색 으로 표시된 부분)가 놓여 있다. 판의 가장자리(\u003c그림 1\u003e에서 네모칸에 엑스친 부분)에는 치즈가 놓여 있지 않으며 치즈에는 하나 이상의 구멍이 있을 수 있다.\n이 치즈를 공기 중에 놓으면 녹게 되는데 공기와 접촉된 칸은 한 시간이 지나면 녹아 없어진다. 치 즈의 구멍 속에는 공기가 없지만 구멍을 둘러싼 치즈가 녹아서 구멍이 열리면 구멍 속으로 공기가 들어 가게 된다. \u003c그림 1\u003e의 경우, 치즈의 구멍을 둘러싼 치즈는 녹지 않고 ‘c’로 표시된 부분만 한 시간 후 에 녹아 없어져서 \u003c그림 2\u003e와 같이 된다.\n\n다시 한 시간 후에는 \u003c그림 2\u003e에서 ‘c’로 표시된 부분이 녹아 없어져서 \u003c그림 3\u003e과 같이 된다.\n\n\u003c그림 3\u003e은 원래 치즈의 두 시간 후 모양을 나타내고 있으며, 남은 조각들은 한 시간이 더 지나면 모 두 녹아 없어진다. 그러므로 처음 치즈가 모두 녹아 없어지는 데는 세 시간이 걸린다. \u003c그림 3\u003e과 같이 치즈가 녹는 과정에서 여러 조각으로 나누어 질 수도 있다.\n입력으로 사각형 모양의 판의 크기와 한 조각의 치즈가 판 위에 주어졌을 때, 공기 중에서 치즈가 모 두 녹아 없어지는 데 걸리는 시간과 모두 녹기 한 시간 전에 남아있는 치즈조각이 놓여 있는 칸의 개수 를 구하는 프로그램을 작성하시오.\n \n# 입력 \n 첫째 줄에는 사각형 모양 판의 세로와 가로의 길이가 양의 정수로 주어진다.\n세로와 가로의 길이는 최대 100이다. 판의 각 가로줄의 모양이 윗 줄부터 차례로 입력 파일의 둘째 줄부터 마지막 줄까지 주어진다.\n치즈가 없는 칸은 0, 치즈가 있는 칸은 1로 주어 지며 각 숫자 사이에는 빈칸이 하나씩 있다. \n# 출력 \n 첫째 줄에는 치즈가 모두 녹아서 없어지는 데 걸리는 시간을 출 력하고,\n둘째 줄에는 모두 녹기 한 시간 전에 남아있는 치즈조각이 놓여 있는 칸의 개수를 출력한다. \n# 입력 예시 \n 13 12\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 1 1 0 0 0\n0 1 1 1 0 0 0 1 1 0 0 0\n0 1 1 1 1 1 1 0 0 0 0 0\n0 1 1 1 1 1 0 1 1 0 0 0\n0 1 1 1 1 0 0 1 1 0 0 0\n0 0 1 1 0 0 0 1 1 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0\n0 0 1 1 1 1 1 1 1 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 \n# 출력 예시 \n 3\n5\n \n# 도움말 \n  \n# 출처 \n 2000 KOI 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nbool visit[100][100];\nint map[100][100];\nint w,h;\nint total;\nbool quit;\nvoid resetVisit()\n{\n    for(int i=0;i\u003cw;i++)\n    {\n        for(int j=0;j\u003ch;j++)\n        {\n            visit[i][j]=false;\n        }\n    }\n}\nvoid removeBlock(int x,int y)\n{\n    if(visit[x][y]==0\u0026\u0026!quit\u0026\u0026\n        x\u003e=0\u0026\u0026x\u003cw\u0026\u0026y\u003e=0\u0026\u0026y\u003ch)\n    {\n        visit[x][y]=1;\n        if(map[x][y]==1)\n        {\n            map[x][y]=2;\n        }\n        if(map[x][y]==0)\n        {\n            removeBlock(x-1,y);\n            removeBlock(x+1,y);\n            removeBlock(x,y-1);\n            removeBlock(x,y+1);\n        }\n    }\n}\nint main()\n{\n    cin\u003e\u003ew\u003e\u003eh;\n    for(int i=0;i\u003cw;i++)\n    {\n        for(int j=0;j\u003ch;j++)\n        {\n            cin\u003e\u003emap[i][j];\n        }\n    }\n    while(!quit)\n    {\n        bool complete=true;\n        int d=0;\n        for(int i=0;i\u003cw;i++)\n        {\n            for(int j=0;j\u003ch;j++)\n            {\n                if(map[i][j]==2)\n                {\n                    d++;\n                    map[i][j]=0;\n                }\n                if(map[i][j]==1)\n                {\n                    complete=false;\n                }\n            }\n        }\n        if(complete==true)\n        {\n            cout\u003c\u003ctotal\u003c\u003cendl;\n            cout\u003c\u003cd;\n            return 0;\n        }\n        total++;\n        removeBlock(0,0);\n        resetVisit();\n    }\n}\n\n/**************************************************************\n\t문제번호: 4463\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1744 kb\n****************************************************************/\n\n"},{"Number":"4438","Time":"2016/10/24","Title":"미로 만들기","Code":"/**************************************************************\n# 문제 설명 \n 문제2)\nn×n 바둑판 모양으로 총 n2개의 방이 있다. 일부분은 검은 방이고 나머지는 모두 흰 방이다. 검은 방은 사면이 벽으로 싸여 있어 들어가 수 없다. 서로 붙어 있는 두 개의 흰 방 사이에는 문이 있어서 지나다닐 수 있다. 윗줄 맨 왼쪽 방은 시작방으로서 항상 흰 방이고, 아랫줄 맨 오른쪽 방은 끝방으로서 역시 흰 방이다.\n시작방에서 출발하여 길을 찾아서 끝방으로 가는 것이 목적인데, 아래 그림의 경우에는 시작방에서 끝 방으로 갈 수가 없다. 부득이 검은 방 몇 개를 흰 방으로 바꾸어야 하는데 되도록 적은 수의 방의 색을 바꾸고 싶다.\n아래 그림은 n=8인 경우의 한 예이다.\n\n위 그림에서는 두 개의 검은 방(예를 들어 (4,4)의 방과 (7,8)의 방)을 흰 방으로 바꾸면, 시작방에서 끝방으로 갈 수 있지만, 어느 검은 방 하나만을 흰 방으로 바꾸어서는 불가능하다. 검은 방에서 흰 방으로 바꾸어야 할 최소의 수를 구하는 프로그램을 작성하시오.\n단, 검은 방을 하나도 흰방으로 바꾸지 않아도 되는 경우는 0이 답이다.\n \n# 입력 \n 첫 줄에는 한 줄에 들어가는 방의 수 n(1≤n≤50)이 주어지고,\n다음 n개의 줄의 각 줄마다 0과 1이 이루어진 길이가 n인 수열이 주어진다.\n0은 검은 방, 1은 흰 방을 나타낸다. \n# 출력 \n 첫 줄에 흰 방으로 바꾸어야 할 최소의 검은 방의 수를 출력한다. \n# 입력 예시 \n 8\n11100110\n11010010\n10011010\n11101100\n01000111\n00110001\n11011000\n11000111 \n# 출력 예시 \n 2 \n# 도움말 \n  \n# 출처 \n 1997 KOI 고등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nbool visit[50][50];\nint map[50][50];\nint n;\nint total;\nbool quit;\nvoid resetVisit()\n{\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            visit[i][j]=false;\n        }\n    }\n}\nvoid printMap()\n{\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            if(map[i][j]) cout\u003c\u003c\"■\";\n            else cout\u003c\u003c\"□\";\n        }\n        cout\u003c\u003cendl;\n    }\n}\nvoid removeBlock(int x,int y)\n{\n    if(visit[x][y]==0\u0026\u0026!quit\u0026\u0026\n        x\u003e=0\u0026\u0026x\u003cn\u0026\u0026y\u003e=0\u0026\u0026y\u003cn)\n    {\n        visit[x][y]=1;\n        if(x==n-1\u0026\u0026y==n-1)\n        {\n            cout\u003c\u003ctotal;\n            quit=true;\n        }\n        if(map[x][y]==1)\n        {\n            map[x][y]=2;\n        }\n        if(map[x][y]==0)\n        {\n            removeBlock(x-1,y);\n            removeBlock(x+1,y);\n            removeBlock(x,y-1);\n            removeBlock(x,y+1);\n        }\n    }\n}\nvoid removeOne()\n{\n    removeBlock(0,0);\n    total++;\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            if(map[i][j]==2)\n            {\n                map[i][j]=0;\n            }\n        }\n    }\n}\nint main()\n{\n    cin\u003e\u003en;\n    char s[50];\n    for(int i=0;i\u003cn;i++)\n    {\n        cin\u003e\u003es;\n        for(int j=0;j\u003cn;j++)\n        {\n            map[i][j]=!(s[j]-'0');\n        }\n    }\n    while(!quit)\n    {\n        removeOne();\n        resetVisit();\n    }\n}\n\n/**************************************************************\n\t문제번호: 4438\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1708 kb\n****************************************************************/\n\n"},{"Number":"4018","Time":"2016/10/22","Title":"팰린드롬 수 찾기","Code":"/**************************************************************\n# 문제 설명 \n [문제 3] 팰린드롬(Palindrome) 수 찾기 [20점]\n(제한시간 1초, 부분점수 있음)\n \n  팰린드롬(Palindrome)은 회문자라고도 하며 앞으로 읽으나 뒤로 읽으나 같은 내용이 되는 문자나 문장을 말한다. 거의 모든 0이상의 정수는 역순으로 된 수를 더하는 과정을 반복하면 어느 순간에는 팰린드롬인 수가 만들어진다. \n  예를 들어, 처음 수가 195일 경우, 아래와 같이 4번을 반복하여 더하면 팰린드롬 수가 만들어진다. \n   \n           195 \n591 \n----- \n786 \n687 \n----- \n1473 \n3741 \n----- \n5214 \n4125 \n----- \n                     9339\n   결과(팰린드롬 수)\n   \n  대부분의 0이상의 정수는 이런 몇 번의 반복으로 팰린드롬인 수를 만들 수 있지만 196만은 팰린드롬을 만들지 못하는 수이다. 왜 그런지는 아직 증명되지는 않았다.\n  처음 수를 입력받아 몇 번 만에 팰린드롬인 수를 만들 수 있는지 그 횟수와 그 팰린드롬 수를 구하는 프로그램을 작성하시오.\n   \n \n# 입력 \n 196을 제외한 0이상의 정수를 입력한다.\n (단, 입력숫자는 만들어지는 팰린드롬 수는 int범위를 넘기 때문에 64bit 정수형 변수를 사용하기 바랍니다.) - 조건 수정 2012. 11. 4\n \n# 출력 \n   출력내용은 반복한 횟수와 팰린드롬인 수를 출력한다.\n \n# 입력 예시 \n 195 \n# 출력 예시 \n 4 9339 \n# 도움말 \n  \n# 출처 \n 2007 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nlong long flip(long long n)\n{\n    long long n2=0;\n    while(n!=0)\n    {\n        n2=(n2*10)+(n%10);\n        n=n/10;\n    }\n    return n2;\n}\nbool pedro(long long n)\n{\n    return flip(n)==n;\n}\nint main()\n{\n    long long n;\n    cin\u003e\u003en;\n    int total=0;\n    while(!pedro(n))\n    {\n        total++;\n        n+=flip(n);\n    }\n    cout\u003c\u003ctotal\u003c\u003c\" \"\u003c\u003cn;\n}\n\n/**************************************************************\n\t문제번호: 4018\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3215","Time":"2016/10/22","Title":"최단 경로 1","Code":"/**************************************************************\n# 문제 설명 \n 각 지점과 길이 있는 두 지점 사이의 거리가 주어질 때, 시작점과 끝점을 입력받아 두 지점 사이의 최단 경로를 찾는 프로그램을 작성하시오.\n예를 들어 그림에서 A와 D사이의 최단경로는 A-\u003eB-\u003eC-\u003eD D와 E사이의 최단경로는 D-\u003eG-\u003eE가 된다.\n \n# 입력 \n 첫 번째 줄에 지점의 개수 N과 두 지점을 잇는 거리의 개수 M이 주어진다.\n이어 M줄에는 두 지점과 그 두 지점 사이의 거리가 주어진다.\n마지막 줄에는 출발지점과 도착지점이 주어진다.\n지점의 이름은 A부터 시작하여 영문자 대문자이고 N은 26이하의 자연수이다. \n# 출력 \n 최단 거리를 출력한다. 단, 출발지점과 도착지점 사이의 경로가 없다면 -1을 출력한다.\n \n# 입력 예시 \n 7 10\nA B 2\nA E 5\nB E 6\nA F 9\nE G 2\nF G 1\nG D 4\nE D 7\nB C 3\nC D 5\nA D \n# 출력 예시 \n 10 \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\nstatic const int N=26;\nstatic const int M=100;\nstatic const int INF=99999;\nint capital2i(char c)\n{\n    return c-'A';\n}\nint main()\n{\n    int graph[N][N];\n    for(int i=0;i\u003cN;i++)for(int j=0;j\u003cN;j++)graph[i][j]=INF;\n    int n,m;\n    cin\u003e\u003en\u003e\u003em;\n    for(int i=0;i\u003cm;i++)\n    {\n        char a,b;\n        int d;\n        cin\u003e\u003ea\u003e\u003eb\u003e\u003ed;\n        graph[capital2i(a)][capital2i(b)]=d;\n        graph[capital2i(b)][capital2i(a)]=d;\n    }\n    char a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    int s,e;\n    s=capital2i(a);\n    e=capital2i(b);\n\n    int dist[N];\n    for(int i=0;i\u003cn;i++) dist[i]=INF;\n    int visit[N]={0};\n    dist[s]=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        int v,min=INF;\n        for(int j=0;j\u003cn;j++)\n        {\n            if(min\u003e=dist[j]\u0026\u0026visit[j]==0)\n            {\n                min=dist[j];\n                v=j;\n            }\n        }\n        visit[v]=1;\n        for(int j=0;j\u003cn;j++)\n        {\n            if(graph[v][j]+dist[v]\u003cdist[j])\n            {\n                dist[j]=graph[v][j]+dist[v];\n            }\n        }\n    }\n    if(dist[e]==INF) dist[e]=-1;\n    cout\u003c\u003cdist[e];\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3215\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"2625","Time":"2016/10/15","Title":"삼각화단 만들기 (Small)","Code":"/**************************************************************\n# 문제 설명 \n   주어진 화단 둘레의 길이를 이용하여 삼각형 모양의 화단을 만들려고 한다. 이 때 만들어진 삼각형 화단 둘레의 길이는 반드시 주어진 화단 둘레의 길이와 같아야 한다. 또한, 화단 둘레의 길이와 각 변의 길이는 자연수이다. \n  예를 들어, 만들고자 하는 화단 둘레의 길이가 9m라고 하면\n   \n한 변의 길이가 1m, 두 변의 길이가 4m인 화단,\n한 변의 길이가 2m, 다른 변의 길이가 3m, 나머지 변의 길이가 4m인 화단,\n세 변의 길이가 모두 3m인 3가지 경우의 화단을 만들 수 있다.\n   \n\n   \n  화단 둘레의 길이를 입력받아서 만들 수 있는 서로 다른 화단의 수를 구하는 프로그램을 작성하시오.\n \n# 입력 \n   화단의 길이 이 주어진다.(단, 3 \u003c= n \u003c= 100)\n \n# 출력 \n n으로 만들 수 있는 서로 다른 화단의 수를 출력한다.\n \n# 입력 예시 \n 9 \n# 출력 예시 \n 3 \n# 도움말 \n  \n# 출처 \n koistudy.net \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    int a=n/3;\n    int total=0;\n    for(int i=1;i\u003c=a;i++)\n    {\n        int b=(n-i)/2;\n        int c=n-(i+b);\n        int d=(i+b-c)/2;\n        int co;\n        if((i+b-c)%2)\n        {\n            co=d;\n        }\n        else\n        {\n            co=d-1;\n        }\n        int co2=b-i;\n        total+=min(co,co2)+1;\n    }\n    cout\u003c\u003ctotal;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 2625\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"2627","Time":"2016/10/15","Title":"삼각화단 만들기 (Adv)","Code":"/**************************************************************\n# 문제 설명 \n   주어진 화단 둘레의 길이를 이용하여 삼각형 모양의 화단을 만들려고 한다. 이 때 만들어진 삼각형 화단 둘레의 길이는 반드시 주어진 화단 둘레의 길이와 같아야 한다. 또한, 화단 둘레의 길이와 각 변의 길이는 자연수이다. \n  예를 들어, 만들고자 하는 화단 둘레의 길이가 9m라고 하면\n   \n한 변의 길이가 1m, 두 변의 길이가 4m인 화단,\n한 변의 길이가 2m, 다른 변의 길이가 3m, 나머지 변의 길이가 4m인 화단,\n세 변의 길이가 모두 3m인 3가지 경우의 화단을 만들 수 있다.\n   \n\n   \n  화단 둘레의 길이를 입력받아서 만들 수 있는 서로 다른 화단의 수를 구하는 프로그램을 작성하시오.\n \n# 입력 \n   화단의 길이 이 주어진다.(단, 3 \u003c= n \u003c= 100,000,000)\n \n# 출력 \n  출력내용은 입력받은 n으로 만들 수 있는 서로 다른 화단의 수를 출력한다.\n \n# 입력 예시 \n 9 \n# 출력 예시 \n 3 \n# 도움말 \n  \n# 출처 \n koistudy.net \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    int a=n/3;\n    long long total=0;\n    for(int i=1;i\u003c=a;i++)\n    {\n        int b=(n-i)/2;\n        int c=n-(i+b);\n\n        int d=(i+b-c)/2;\n        int co;\n        if((i+b-c)%2)\n            co=d;\n        else\n            co=d-1;\n\n        int co2=b-i;\n\n        total+=min(co,co2)+1;\n    }\n    cout\u003c\u003ctotal;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 2627\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:328 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"2627","Time":"2016/10/15","Title":"삼각화단 만들기 (Adv)","Code":"/**************************************************************\n# 문제 설명 \n   주어진 화단 둘레의 길이를 이용하여 삼각형 모양의 화단을 만들려고 한다. 이 때 만들어진 삼각형 화단 둘레의 길이는 반드시 주어진 화단 둘레의 길이와 같아야 한다. 또한, 화단 둘레의 길이와 각 변의 길이는 자연수이다. \n  예를 들어, 만들고자 하는 화단 둘레의 길이가 9m라고 하면\n   \n한 변의 길이가 1m, 두 변의 길이가 4m인 화단,\n한 변의 길이가 2m, 다른 변의 길이가 3m, 나머지 변의 길이가 4m인 화단,\n세 변의 길이가 모두 3m인 3가지 경우의 화단을 만들 수 있다.\n   \n\n   \n  화단 둘레의 길이를 입력받아서 만들 수 있는 서로 다른 화단의 수를 구하는 프로그램을 작성하시오.\n \n# 입력 \n   화단의 길이 이 주어진다.(단, 3 \u003c= n \u003c= 100,000,000)\n \n# 출력 \n  출력내용은 입력받은 n으로 만들 수 있는 서로 다른 화단의 수를 출력한다.\n \n# 입력 예시 \n 9 \n# 출력 예시 \n 3 \n# 도움말 \n  \n# 출처 \n koistudy.net \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    long long n;\n    cin\u003e\u003en;\n    long long a=n/3;\n    long long total=0;\n    for(long long i=1;i\u003c=a;i++)\n    {\n        long long b=(n-i)/2;\n        long long c=n-(i+b);\n\n        long long d=(i+b-c)/2;\n        long long co;\n        if((i+b-c)%2)\n            co=d;\n        else\n            co=d-1;\n\n        long long co2=b-i;\n\n        total+=min(co,co2)+1;\n    }\n    cout\u003c\u003ctotal;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 2627\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:328 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4017","Time":"2016/10/15","Title":"삼각화단 만들기 (Large)","Code":"/**************************************************************\n# 문제 설명 \n [문제 2] 삼각화단 만들기 [18점] \n(제한시간 1초, 부분점수 없음)\n   \n  주어진 화단 둘레의 길이를 이용하여 삼각형 모양의 화단을 만들려고 한다. 이 때 만들어진 삼각형 화단 둘레의 길이는 반드시 주어진 화단 둘레의 길이와 같아야 한다. 또한, 화단 둘레의 길이와 각 변의 길이는 자연수이다. \n  예를 들어, 만들고자 하는 화단 둘레의 길이가 9m라고 하면\n   \n한 변의 길이가 1m, 두 변의 길이가 4m인 화단,\n한 변의 길이가 2m, 다른 변의 길이가 3m, 나머지 변의 길이가 4m인 화단,\n세 변의 길이가 모두 3m인 3가지 경우의 화단을 만들 수 있다.\n   \n\n   \n  화단 둘레의 길이를 입력받아서 만들 수 있는 서로 다른 화단의 수를 구하는 프로그램을 작성하시오.\n \n# 입력 \n   화단의 길이 이 주어진다.(단, 1 \u003c= n \u003c= 50,000)\n \n# 출력 \n  출력내용은 입력받은 n으로 만들 수 있는 서로 다른 화단의 수를 출력한다.\n \n# 입력 예시 \n 9 \n# 출력 예시 \n 3 \n# 도움말 \n  \n# 출처 \n 2007 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    int a=n/3;\n    int total=0;\n    for(int i=1;i\u003c=a;i++)\n    {\n        int b=(n-i)/2;\n        int c=n-(i+b);\n        int d=(i+b-c)/2;\n        int co;\n        if((i+b-c)%2)\n        {\n            co=d;\n        }\n        else\n        {\n            co=d-1;\n        }\n        int co2=b-i;\n        total+=min(co,co2)+1;\n    }\n    cout\u003c\u003ctotal;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4017\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4020","Time":"2016/10/10","Title":"헬기로 짐 운송하기","Code":"/**************************************************************\n# 문제 설명 \n [문제 5] 헬기로 짐 운송하기 [24점] \n(제한시간 1초, 부분점수 있음)\n   \n  헬기로 출발지에서 목적지까지 원하는 짐을 운송하려고 한다. 하지만 거리에 따라 필요한 경우 경유지에 들러서 연료를 보충해야 한다. 경유지들은 출발지에서 도착지로 가는 경로에 있으며 1번부터 차례로 번호가 붙어 있다. 이 헬기는 한 번의 연료 보급으로 최대로 갈 수 있는 거리와 경유지마다 연료를 보충하는데 걸리는 시간이 정해져 있다. 우리의 목적은 경유지에서 연료를 넣는 시간을 최소화 하면서 물건을 운송할 수 있는 방법을 결정하는 것이다. 이를 해결할 수 있는 프로그램을 작성하시오.(출발점은 연료가 최대로 주유된 상태임.)\n  예를 들어, 아래의 그림과 같이 경유지가 5개 있고, 한 번 주유를 하면 최대 140km를 갈 수 있는 경우를 생각해 보자.\n   \n\n \n  헬기가 출발지에서 경유지 1, 3, 5번을 차례로 방문하여 도착지까지 갈 수도 있고, 경유지 2, 4번을 방문하여 갈 수도 있다. 이 때 1, 3, 5번을 방문하는 경우에는 16분(7+4+5)이 걸리는데 2, 4번을 방문하게 되면 21분(11+10)이 걸리게 되므로 1, 3, 5번을 방문하는 것이 주유 시간을 최소화 하게 된다.\n \n# 입력 \n   첫째 줄에는 주유를 하지 않고 갈 수 있는 최대 거리가 주어진다. \n둘째 줄에는 경유지의 수가 입력되는데 경유지의 수는 100이하이다. \n셋째 줄에는 인접한 경유지 사이의 거리(km)가 차례로 주어진다. \n넷째 줄에는 경유지별 주유 시간(분)이 차례로 주어진다. 모든 입력은 양의 정수이다.\n \n# 출력 \n   출력내용은 경유지에서 주유하는데 걸리는 총 주유 시간(분)과 방문한 경유지의 수를 출력한다.\n \n# 입력 예시 \n 140\n5\n60 50 40 100 30 100\n7 11 4 10 5 \n# 출력 예시 \n 16 3 \n# 도움말 \n  \n# 출처 \n 2007 교원프로그래밍경진대회 \n\n*************************************************************/\n#include\u003ciostream\u003e\n#include\u003cqueue\u003e\n#include\u003cstdio.h\u003e\nusing namespace std;\nstatic const int INF = 100000000;\nstatic const int N=102;\nint main()\n{\n    int dis[N];\n    int minu[N];\n    int siz;\n    int edis;\n    cin\u003e\u003eedis;\n    cin\u003e\u003esiz;\n    for(int i=1;i\u003c=siz+1;i++)\n    {\n        cin\u003e\u003edis[i];\n    }\n    for(int i=1;i\u003c=siz;i++)\n    {\n\n        cin\u003e\u003eminu[i];\n    }\n\n    int a[N][N];\n    for(int i=0;i\u003c=siz+1;i++)\n    {\n        for(int j=0;j\u003c=siz+1;j++)\n        {\n            a[i][j]=-1;\n        }\n    }\n    for(int i=0;i\u003c=siz+1;i++)\n    {\n        int tdis=0;\n        int j=i+1;\n        while(j\u003c=siz+1)\n        {\n            tdis+=dis[j];\n            if(tdis\u003c=edis)\n            {\n                a[i][j]=minu[j];\n            }\n            else\n            {\n                break;\n            }\n            j++;\n        }\n    }\n    int dist[N];\n    int visit[N];\n    int meat[N];\n    for(int i=0;i\u003c=siz+1;i++) dist[i]=INF;\n    for(int i=0;i\u003c=siz+1;i++) meat[i]=INF;\n    dist[0]=0;\n    meat[0]=0;\n    for(int i=0;i\u003c=siz+1;i++)\n    {\n        int min=INF;\n        int v;\n        for(int j=0;j\u003c=siz+1;j++)\n        {\n            if(visit[j]==0\u0026\u0026min\u003e=dist[j])\n            {\n                min=dist[j];v=j;\n            }\n        }\n        visit[v]=1;\n        for(int j=0;j\u003c=siz+1;j++)\n        {\n            if(!visit[j]\u0026\u0026a[v][j]!=-1\u0026\u0026dist[v]!=INF\u0026\u0026dist[v]+a[v][j]\u003c=dist[j]\u0026\u0026j!=v)\n            {\n                dist[j]=dist[v]+a[v][j];\n                if(j==siz+1)\n                {\n                    meat[j]=meat[v];\n                }\n                else\n                {\n                    meat[j]=meat[v]+1;\n                }\n            }\n        }\n    }\n    cout\u003c\u003cdist[siz+1]\u003c\u003c\" \"\u003c\u003cmeat[siz+1];\n}\n\n/**************************************************************\n\t문제번호: 4020\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4425","Time":"2016/09/26","Title":"잠수함 식별","Code":"/**************************************************************\n# 문제 설명 \n 문제2) 잠수함 식별 (중등2, 고등1)\n일반적으로 잠수함 엔진이 작동할 때에 나오는 소리는 잠수함의 종류에 따라서 다르다고 한다.\n우리는 물속에서 들리는 소리의 패턴을 듣고서 그 소리가 특정한 잠수함에서 나오는 소리인지 아닌지를 알아내려고 한다. 이 문제에서는 잠수함의 소리가 두 종류의 단위 소리의 연속으로 이루어져 있고, 그 단위 소리를 각각 0과 1로 표시한다.\n또, 한 특정한 소리의 반복은 ~로 표시한다. 예를 들어 x~는 x가 한번 이상 반복되는 모든 소리의 집합을 말하고, (xyz)~는 괄호 안에 있는 xyz로 표현된 소리가 한번 이상 반복되는 모든 소리의 집합을 말한다. 다음의 예를 보라.\n1~ = {1, 11, 111, 1111, ..., 1...1, ...}\n(01)~ = {01, 0101, 010101, 01010101. ...}\n(1001)~ = {1001, 10011001, ..., 100110011001...1001, ...}\n10~11 = {1011, 10011, 100011, ..., 1000...011, ...}\n(10~1)~ = {101, 1001, 10001, 100001, ...1011001, ...100110110001101, ...}\n그리고 (x|y)는 x또는 y중에서 아무거나 하나만을 선택해서 만든 소리의 집합, 즉 집합{x, y}를 의미한다. 예를 들면(1001|0101)은 집합으로 {1001, 0101}을 의미한다. 따라서 (0|1)~은 0과 1로 이루어진 모든 스트링의 집합, 즉 모든 소리의 집합을 말한다. 또 한 예를 보면 (100|11)~은 100과 11을 마음대로 섞어서 만들 수 있는 모든 소리의 집합을 의미한다. 즉 (100|11)~에 해당하는 스트링을 집합으로 나타내면 {100, 11, 10011, 100100100, 1110011, ...}이 된다. 우리가 식별하고자 하는 잠수함의 엔진소리의 패턴은 다음과 같다.\n(100~1~ | 01)~\n여기에 속하는 소리의 예를 들어보면, 1001, 01, 100001, 010101, 1000001110101, 1001110101, 0101010101, 10010110000001111101, 01010101011000111, 10000111001111, ...이다.\n다시 말해서 이것은 100~1~과 01을 임의로 섞어서 만들 수 있는 모든 스트링의 집합을 나타낸다.\n입력으로 0과 1로 구성된 스트링이 주어질 때, 이 스트링이 앞에서 기술된 잠수함의 엔진소리인지 아닌지를 판볖하는 프로그램을 작성하라.\n \n# 입력 \n 0과 1로 구성된 스트링이 1개 들어있다. 이때 각 스트링의 길이는 200개 이하로 제한된다. \n# 출력 \n 입력파일에 들어있는 스트링을 읽고, 이것이 잠수함의 엔진소리를 나타내는 스트링인지 아니면 그냥 물속의 잡음인지를 판정한 후, 잠수함의 엔진 소리에 해당하는 스트링이면 \"SUBMARINE\"을 출력하고, 그렇지 않으면 \"NOISE\"를 출력한다. \n# 입력 예시 \n 100000000001101 \n# 출력 예시 \n SUBMARINE\n \n# 도움말 \n  \n# 출처 \n 1996 KOI 중등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\nusing namespace std;\n\nint main()\n{\n    string str;\n    cin\u003e\u003estr;\n    for(int i=0;i\u003cstr.size();)\n    {\n        if(str.substr(i,3)==\"100\")\n        {\n            i+=3;\n            while(str.c_str()[i]=='0')\n            {\n                i++;\n            }\n            if(str.c_str()[i]!='1')\n            {\n                cout\u003c\u003c\"NOISE\";\n                return 0;\n            }\n            while(str.c_str()[i]=='1')\n            {\n                i++;\n            }\n            if(str.substr(i-1,3)==\"100\"\u0026\u0026str.c_str()[i-2]=='1')\n            {\n                i--;\n            }\n        }\n        else if(str.substr(i,2)==\"01\")\n        {\n            i+=2;\n        }\n        else\n        {\n            cout\u003c\u003c\"NOISE\";\n            return 0;\n        }\n    }\n    cout\u003c\u003c\"SUBMARINE\";\n}\n\n/**************************************************************\n\t문제번호: 4425\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4054","Time":"2016/09/24","Title":"백신 프로그램","Code":"/**************************************************************\n# 문제 설명 \n [문제4] 백신 프로그램 (22점, 제한시간 1초)\n모눈종이 모양의 컴퓨터 메모리가 있다. n은 행의 수이고 m은 열의 수이다.\n이 메모 리 공간에 바이러스가 감염되어 백신 프로그램으로 치료를 하려고 한다.\n아래 \u003c그림\u003e에서 하얀색 부분은 치료가 완료된 부분이고 그렇지 않은 부분은 아직 바이러스에 감염되어 있는 부분이다.\n이 바이러스를 치료하는 데 있어 바이러스의 4면 중 2면 이상이 치료된 부분과 접하면 1초 후에 치료가 가능하다.\n\u003c그림\u003e과 같이 바이 러스가 감염되어 있다면 V로 표시된 부분의 바이러스 격자는 1초 후에 치료가 되어 흰색으로 변한다.\n그리고 그 안쪽에 있던 바이러스들도 2면 이상이 치료된 부분과 접 촉되면 1초 후에 치료가 될 것이다.\n메모리의 맨 가장자리에는 바이러스가 감염될 수 없는 영역으로 가정한다.\n입력으로 주어진 바이러스가 모두 치료되는데 걸리는 최소 시간을 구하는 프로그램을 작성하시오.\n \n# 입력 \n 1. 첫째 줄에는 행과 열의 수를 나타내는 두 개의 정수 n, m이 주어진다. (단, 5 ≦ n ≦ 100, 5 ≦ m ≦ 100)\n2. 둘째 줄부터 n +1줄 까지는 메모리에 바이러스가 있는 부분은 1로 표시되고, 바이러스가 치료된 부분은 0으로 표시된다.\n3. 각 0과 1은 하나의 공백으로 분리되어 있다. \n# 출력 \n 첫 줄에는 주어진 바이러스가 모두 치료되는데 걸리는 최소 시간(초)을 정수로 출력한다. \n# 입력 예시 \n 8 9\n0 0 0 0 0 0 0 0 0\n0 0 0 1 1 0 1 1 0\n0 0 0 1 1 0 1 1 0\n0 1 1 1 1 1 1 1 0\n0 1 1 1 1 1 1 1 0\n0 1 1 1 0 1 1 0 0\n0 1 1 0 0 1 1 0 0\n0 0 0 0 0 0 0 0 0 \n# 출력 예시 \n 5 \n# 도움말 \n  \n# 출처 \n 2013 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint gido[102][102]={0};\nint dir[4][2]={{0,1},{0,-1},{1,0},{-1,0}};\nint sum(int x,int y)\n{\n    int su=0;\n    for(int i=0;i\u003c4;i++)\n    {\n        int dx=x+dir[i][0];\n        int dy=y+dir[i][1];\n        if(gido[dx][dy]==0) su++;\n    }\n    return su;\n}\nint main()\n{\n    int w,h;\n    cin\u003e\u003ew\u003e\u003eh;\n    for(int i=1;i\u003c=w;i++)\n    {\n        for(int j=1;j\u003c=h;j++)\n        {\n            cin\u003e\u003egido[i][j];\n        }\n    }\n    int time=0;\n    while(true)\n    {\n        int su=0;\n        for(int i=1;i\u003c=w;i++)\n        {\n            for(int j=1;j\u003c=h;j++)\n            {\n                if(gido[i][j]==1){\n                    su++;\n                    if(sum(i,j)\u003e=2)\n                    {\n                        gido[i][j]=2;\n                    }\n                };\n            }\n        }\n        if(su==0)break;\n        for(int i=1;i\u003c=w;i++)\n        {\n            for(int j=1;j\u003c=h;j++)\n            {\n                if(gido[i][j]==2) gido[i][j]=0;\n            }\n        }\n        time++;\n    }\n    cout\u003c\u003ctime;\n\n}\n\n/**************************************************************\n\t문제번호: 4054\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:16 ms\n\t메모리 사용량:1736 kb\n****************************************************************/\n\n"},{"Number":"4039","Time":"2016/09/24","Title":"놀이공원","Code":"/**************************************************************\n# 문제 설명 \n [문제4] 놀이공원 (22점, 제한시간 1초)\n어린이 놀이동산에 돌-블록이 타일처럼 배치되어 있는 마당이 있다. 이 마당은 아래 그림처럼 n×m 크기의 격자로 표시된다. 격자의 칸에 있는 값은 돌-블록의 높이이다. \n\n  \n이 마당의 입구는 (1,1) 위치이고, 출구는 (n,m) 위치이다. 이 마당에서 즐길 수 있는 놀이 중에는 입구에서 출구까지 길을 찾는 게임이 있다. 게임 참가자는 각 블록에서 동서남북으로 인접한 블록으로 점프하여 건너갈 수 있는데, 높이 차이가 1보다 큰 경우에는 건너갈 수 없다. 또한 출구를 제외하고는 마당 밖으로 나갈 수 없다. 위 예에서 출구인 (4,4) 블록까지 이동하기 위해서는 (1,1), (2,1), (3,1), (3,2), (2,2), (2,3), (3,3), (4,3), (4,4) 블록을 순서대로 지나가면 된다. 이 놀이는 입구에서 시작하여 출구로 나갈 때까지 밟고 지나간 블록의 개수가 작을수록 높은 점수를 얻게 된다.\n \n게임 참가자가 마당의 입구에서 시작하여 가장 작은 개수의 블록을 밟으면서 출구로 도착할 수 있는 길을 찾는 프로그램을 작성하시오.\n  \n \n# 입력 \n 1. 첫째 줄에 마당의 크기 n×m을 나타내는 두 개의 정수 n과 m이 차례대로 주어진다. (2≤n≤1,000, 2≤m≤1,000)\n2. 그 다음 n개의 줄에는 m개의 정수가 주어지는데, i+1번째 줄의 j-번째 정수는 i-번째 행 j-번째 열에 있는 블록의 높이를 나타낸다. 돌 블록의 높이는 1 이상 9이하이다.\n \n# 출력 \n 1. 게임 참가자가 출구까지 갈 수 없으면 첫 줄에 0을 출력한다.\n2. 만약 출구가 가는 길이 있으면, 가장 작은 개수의 블록으로 구성된 길을 찾아서 그 길을 구성하는 블록의 개수를 첫 줄에 출력한다.\n \n# 입력 예시 \n 4 4\n7 9 8 5\n6 3 2 4\n5 4 1 5\n2 6 1 1 \n# 출력 예시 \n 9 \n# 도움말 \n  \n# 출처 \n 2011 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cqueue\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\nusing namespace std;\n\ntypedef struct\n{\n    int x,y;\n}vec2;\nbool compare(int n,int n2)\n{\n    if(n==0||abs(n-n2)\u003e1) return false;\n    return true;\n}\nint main()\n{\n    int visit[1001][1001]={0};\n    int gido[1001][1001];\n    int w,h;\n    cin\u003e\u003ew\u003e\u003eh;\n    for(int i=1;i\u003c=w;i++)\n    {\n        for(int j=1;j\u003c=h;j++)\n        {\n            cin\u003e\u003egido[i][j];\n        }\n    }\n    visit[1][1]=1;\n    queue\u003cvec2\u003e qu;\n    qu.push({1,1});\n    vec2 dir[4]={{0,1},{1,0},{-1,0},{0,-1}};\n    while(!qu.empty())\n    {\n        vec2 thi=qu.front();\n        int x=thi.x;\n        int y=thi.y;\n        if(x==w\u0026\u0026y==h) break;\n        int thin=gido[x][y];\n        qu.pop();\n        for(int i=0;i\u003c4;i++)\n        {\n            int dx=x+dir[i].x;\n            int dy=y+dir[i].y;\n            if(dx==0||dx==w+1) continue;\n            if(dy==0||dy==h+1) continue;\n            if(compare(gido[dx][dy],thin)\u0026\u0026visit[dx][dy]==0)\n            {\n                visit[dx][dy]=visit[x][y]+1;\n                qu.push({dx,dy});\n            }\n        }\n    }\n    cout\u003c\u003cvisit[w][h];\n}\n\n/**************************************************************\n\t문제번호: 4039\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:416 ms\n\t메모리 사용량:9412 kb\n****************************************************************/\n\n"},{"Number":"4039","Time":"2016/09/24","Title":"놀이공원","Code":"/**************************************************************\n# 문제 설명 \n [문제4] 놀이공원 (22점, 제한시간 1초)\n어린이 놀이동산에 돌-블록이 타일처럼 배치되어 있는 마당이 있다. 이 마당은 아래 그림처럼 n×m 크기의 격자로 표시된다. 격자의 칸에 있는 값은 돌-블록의 높이이다. \n\n  \n이 마당의 입구는 (1,1) 위치이고, 출구는 (n,m) 위치이다. 이 마당에서 즐길 수 있는 놀이 중에는 입구에서 출구까지 길을 찾는 게임이 있다. 게임 참가자는 각 블록에서 동서남북으로 인접한 블록으로 점프하여 건너갈 수 있는데, 높이 차이가 1보다 큰 경우에는 건너갈 수 없다. 또한 출구를 제외하고는 마당 밖으로 나갈 수 없다. 위 예에서 출구인 (4,4) 블록까지 이동하기 위해서는 (1,1), (2,1), (3,1), (3,2), (2,2), (2,3), (3,3), (4,3), (4,4) 블록을 순서대로 지나가면 된다. 이 놀이는 입구에서 시작하여 출구로 나갈 때까지 밟고 지나간 블록의 개수가 작을수록 높은 점수를 얻게 된다.\n \n게임 참가자가 마당의 입구에서 시작하여 가장 작은 개수의 블록을 밟으면서 출구로 도착할 수 있는 길을 찾는 프로그램을 작성하시오.\n  \n \n# 입력 \n 1. 첫째 줄에 마당의 크기 n×m을 나타내는 두 개의 정수 n과 m이 차례대로 주어진다. (2≤n≤1,000, 2≤m≤1,000)\n2. 그 다음 n개의 줄에는 m개의 정수가 주어지는데, i+1번째 줄의 j-번째 정수는 i-번째 행 j-번째 열에 있는 블록의 높이를 나타낸다. 돌 블록의 높이는 1 이상 9이하이다.\n \n# 출력 \n 1. 게임 참가자가 출구까지 갈 수 없으면 첫 줄에 0을 출력한다.\n2. 만약 출구가 가는 길이 있으면, 가장 작은 개수의 블록으로 구성된 길을 찾아서 그 길을 구성하는 블록의 개수를 첫 줄에 출력한다.\n \n# 입력 예시 \n 4 4\n7 9 8 5\n6 3 2 4\n5 4 1 5\n2 6 1 1 \n# 출력 예시 \n 9 \n# 도움말 \n  \n# 출처 \n 2011 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cqueue\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\nusing namespace std;\n\ntypedef struct\n{\n    int x,y;\n}vec2;\nbool compare(int n,int n2)\n{\n    if(n==0||abs(n-n2)\u003e1) return false;\n    return true;\n}\nint main()\n{\n    int visit[1001][1001]={0};\n    int gido[1001][1001]={0};\n    int w,h;\n    cin\u003e\u003ew\u003e\u003eh;\n    for(int i=1;i\u003c=w;i++)\n    {\n        for(int j=1;j\u003c=h;j++)\n        {\n            scanf(\"%d\",\u0026gido[i][j]);\n        }\n    }\n    visit[1][1]=1;\n    queue\u003cvec2\u003e qu;\n    qu.push({1,1});\n    vec2 dir[4]={{0,1},{1,0},{-1,0},{0,-1}};\n    while(!qu.empty())\n    {\n        vec2 thi=qu.front();\n        int x=thi.x;\n        int y=thi.y;\n        if(x==w\u0026\u0026y==h) break;\n        int thin=gido[x][y];\n        qu.pop();\n        for(int i=0;i\u003c4;i++)\n        {\n            int dx=x+dir[i].x;\n            int dy=y+dir[i].y;\n            if(dx==0||dx==w+1) continue;\n            if(dy==0||dy==h+1) continue;\n            if(compare(gido[dx][dy],thin)\u0026\u0026visit[dx][dy]==0)\n            {\n                visit[dx][dy]=visit[x][y]+1;\n                qu.push({dx,dy});\n            }\n        }\n    }\n    cout\u003c\u003cvisit[w][h];\n}\n\n/**************************************************************\n\t문제번호: 4039\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:368 ms\n\t메모리 사용량:9416 kb\n****************************************************************/\n\n"},{"Number":"4039","Time":"2016/09/24","Title":"놀이공원","Code":"/**************************************************************\n# 문제 설명 \n [문제4] 놀이공원 (22점, 제한시간 1초)\n어린이 놀이동산에 돌-블록이 타일처럼 배치되어 있는 마당이 있다. 이 마당은 아래 그림처럼 n×m 크기의 격자로 표시된다. 격자의 칸에 있는 값은 돌-블록의 높이이다. \n\n  \n이 마당의 입구는 (1,1) 위치이고, 출구는 (n,m) 위치이다. 이 마당에서 즐길 수 있는 놀이 중에는 입구에서 출구까지 길을 찾는 게임이 있다. 게임 참가자는 각 블록에서 동서남북으로 인접한 블록으로 점프하여 건너갈 수 있는데, 높이 차이가 1보다 큰 경우에는 건너갈 수 없다. 또한 출구를 제외하고는 마당 밖으로 나갈 수 없다. 위 예에서 출구인 (4,4) 블록까지 이동하기 위해서는 (1,1), (2,1), (3,1), (3,2), (2,2), (2,3), (3,3), (4,3), (4,4) 블록을 순서대로 지나가면 된다. 이 놀이는 입구에서 시작하여 출구로 나갈 때까지 밟고 지나간 블록의 개수가 작을수록 높은 점수를 얻게 된다.\n \n게임 참가자가 마당의 입구에서 시작하여 가장 작은 개수의 블록을 밟으면서 출구로 도착할 수 있는 길을 찾는 프로그램을 작성하시오.\n  \n \n# 입력 \n 1. 첫째 줄에 마당의 크기 n×m을 나타내는 두 개의 정수 n과 m이 차례대로 주어진다. (2≤n≤1,000, 2≤m≤1,000)\n2. 그 다음 n개의 줄에는 m개의 정수가 주어지는데, i+1번째 줄의 j-번째 정수는 i-번째 행 j-번째 열에 있는 블록의 높이를 나타낸다. 돌 블록의 높이는 1 이상 9이하이다.\n \n# 출력 \n 1. 게임 참가자가 출구까지 갈 수 없으면 첫 줄에 0을 출력한다.\n2. 만약 출구가 가는 길이 있으면, 가장 작은 개수의 블록으로 구성된 길을 찾아서 그 길을 구성하는 블록의 개수를 첫 줄에 출력한다.\n \n# 입력 예시 \n 4 4\n7 9 8 5\n6 3 2 4\n5 4 1 5\n2 6 1 1 \n# 출력 예시 \n 9 \n# 도움말 \n  \n# 출처 \n 2011 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cqueue\u003e\n#include \u003cstdlib.h\u003e\nusing namespace std;\n\ntypedef struct\n{\n    int x,y;\n}vec2;\nbool compare(int n,int n2)\n{\n    if(n==0||abs(n-n2)\u003e1) return false;\n    return true;\n}\nint main()\n{\n    int visit[1001][1001]={0};\n    int gido[1001][1001]={0};\n    int w,h;\n    cin\u003e\u003ew\u003e\u003eh;\n    for(int i=1;i\u003c=w;i++)\n    {\n        for(int j=1;j\u003c=h;j++)\n        {\n            cin\u003e\u003egido[i][j];\n        }\n    }\n    visit[1][1]=1;\n    queue\u003cvec2\u003e qu;\n    qu.push({1,1});\n    vec2 dir[4]={{0,1},{1,0},{-1,0},{0,-1}};\n    while(!qu.empty())\n    {\n        vec2 thi=qu.front();\n        int x=thi.x;\n        int y=thi.y;\n        if(x==w\u0026\u0026y==h) break;\n        int thin=gido[x][y];\n        qu.pop();\n        for(int i=0;i\u003c4;i++)\n        {\n            int dx=x+dir[i].x;\n            int dy=y+dir[i].y;\n            if(dx==0||dx==w+1) continue;\n            if(dy==0||dy==h+1) continue;\n            if(compare(gido[dx][dy],thin)\u0026\u0026visit[dx][dy]==0)\n            {\n                visit[dx][dy]=visit[x][y]+1;\n                qu.push({dx,dy});\n            }\n        }\n    }\n    cout\u003c\u003cvisit[w][h];\n}\n\n/**************************************************************\n\t문제번호: 4039\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:376 ms\n\t메모리 사용량:9412 kb\n****************************************************************/\n\n"},{"Number":"3736","Time":"2016/09/19","Title":"LIS (Large)","Code":"/**************************************************************\n# 문제 설명 \n LIS(Longest Increasing subsequence)란 최장 증가 부분수열을 말한다.\n프로그래밍 문제를 풀 다 보면 이것을 응용하는 문제가 많이 출제되고 있고, 동적계획법의 대표적인 사용 예 중 하나이다.\n다음과 같은 원소의 개수가 8개(N)인 수열이 있을 때,\n1 3 2 9 7 8 5 10\nLIS = 1 2 7 8 10 으로 그 길이는 5이다.\n이번에는 데이터의 크기가 크므로 O(n^2)알고리즘으로는 해결할 수 없을 것이다. \n# 입력 \n 첫째줄에 수열의 원소개수 N이 입력된다.( 1 \u003c= N \u003c= 100,000 )\n둘째 줄에 N개의 원소가 순서대로 공백으로 구분되어 입력된다. ( 1 ~ 200,000 ) \n# 출력 \n 최장 증가 부분수열의 길이를 출력한다. \n# 입력 예시 \n 8\n1 3 2 9 7 8 5 10  \n# 출력 예시 \n 5 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main()\n{\n    int arr[100000];\n    int siz;\n    cin\u003e\u003esiz;\n    for(int i=0;i\u003csiz;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    int lis[100000];\n    int siz2=0;\n    lis[0]=arr[0];\n    for(int i=1;i\u003csiz;i++)\n    {\n        if(arr[i]\u003elis[siz2])\n        {\n            siz2++;\n            lis[siz2]=arr[i];\n            continue;\n        }\n        (*lower_bound(lis,lis+siz2+1,arr[i]))=arr[i];\n    }\n    cout\u003c\u003csiz2+1;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3736\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:96 ms\n\t메모리 사용량:2372 kb\n****************************************************************/\n\n"},{"Number":"3735","Time":"2016/09/19","Title":"LIS (Small)","Code":"/**************************************************************\n# 문제 설명 \n LIS(Longest Increasing subsequence)란 최장 증가 부분수열을 말한다.\n프로그래밍 문제를 풀 다 보면 이것을 응용하는 문제가 많이 출제되고 있고, 동적계획법의 대표적인 사용 예 중 하나이다.\n다음과 같은 원소의 개수가 8개(N)인 수열이 있을 때,\n1 3 2 9 7 8 5 10 \nLIS = 1 2 7 8 10 으로 그 길이는 5이다.\n\n \n# 입력 \n 첫째줄에 수열의 원소개수 N이 입력된다.( 1 \u003c= N \u003c= 1000 )\n둘째 줄에 N개의 원소가 순서대로 공백으로 구분되어 입력된다. ( 1 ~ 30,000 )\n \n# 출력 \n 최장 증가 부분수열의 길이를 출력한다.\n \n# 입력 예시 \n 8\n1 3 2 9 7 8 5 10  \n# 출력 예시 \n 5 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main()\n{\n    int arr[1000];\n    int siz;\n    cin\u003e\u003esiz;\n    for(int i=0;i\u003csiz;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    int lis[1000];\n    int siz2=0;\n    lis[0]=arr[0];\n    for(int i=1;i\u003csiz;i++)\n    {\n        if(arr[i]\u003elis[siz2])\n        {\n            siz2++;\n            lis[siz2]=arr[i];\n            continue;\n        }\n        (*lower_bound(lis,lis+siz2+1,arr[i]))=arr[i];\n    }\n    cout\u003c\u003csiz2+1;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3735\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1712 kb\n****************************************************************/\n\n"},{"Number":"4019","Time":"2016/09/12","Title":"동전 줍기","Code":"/**************************************************************\n# 문제 설명 \n [문제 4] 동전 줍기 [22점] \n(제한시간 1초, 부분점수 없음)\n  \n  길동이가 길을 걷고 있는데, 산신령이 나타나 길에 동전을 일렬로 놓으면서 “길동아, 네 마음껏 동전을 주워가라. 그런데 연속해서 3개의 동전을 줍지는 못한다.”고 하였다.\n길동이가 가장 많은 금액의 동전을 주울 수 있도록 도와주는 프로그램을 작성하시오. \n  예를 들어, 길에 일렬로 놓은 동전이 아래와 같다면 길동이는 최대 38원(7+10+10+11)을 주울 수 있다.\n\n\n \n# 입력 \n   첫째 줄은 동전의 갯수가 입력되고 동전의 수는 100이하의 자연수이다. 다음 줄에는 동전의 값들이 입력된다. 입력된 값들은 자연수이고 합해서 30,000을 초과하지 않는다.\n \n# 출력 \n   출력내용은 가장 많이 주울 수 있는 동전의 총 합계를 출력한다.\n \n# 입력 예시 \n 8\n5 7 10 1 2 10 11 6 \n# 출력 예시 \n 38 \n# 도움말 \n  \n# 출처 \n 2007 교원프로그래밍경진대회 \n\n*************************************************************/\n#include\u003ciostream\u003e\nusing namespace std;\n\nint dp[101][101]={0};\nint maxBTW(int j,int s,int e)\n{\n    int maxi=0;\n    for(int i=s;i\u003ce;i++)\n    {\n        if(maxi\u003cdp[i][j])\n        {\n            maxi=dp[i][j];\n        }\n    }\n    return maxi;\n}\nint main()\n{\n    int coin[101]={0};\n    int siz;\n    cin\u003e\u003esiz;\n    for(int i=1;i\u003c=siz;i++)\n    {\n        cin\u003e\u003ecoin[i];\n    }\n    for(int j=1;j\u003c=siz;j++)\n    {\n        for(int i=1;i\u003c=j;i++)\n        {\n            if(i==1) dp[i][j]=maxBTW(j-1,2,j)+coin[j];\n            else dp[i][j]=maxBTW(j-i,1,j)+coin[j];\n            if(j==2\u0026\u0026i==1)dp[i][j]=coin[1]+coin[2];\n        }\n    }\n    int maxi=0;\n    for(int i=1;i\u003c=siz;i++)\n    {\n        for(int j=1;j\u003c=siz;j++)\n        {\n            if(maxi\u003cdp[i][j])\n            {\n                maxi=dp[i][j];\n            }\n        }\n    }\n    cout\u003c\u003cmaxi;\n}\n\n/**************************************************************\n\t문제번호: 4019\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1736 kb\n****************************************************************/\n\n"},{"Number":"4019","Time":"2016/09/12","Title":"동전 줍기","Code":"/**************************************************************\n# 문제 설명 \n [문제 4] 동전 줍기 [22점] \n(제한시간 1초, 부분점수 없음)\n  \n  길동이가 길을 걷고 있는데, 산신령이 나타나 길에 동전을 일렬로 놓으면서 “길동아, 네 마음껏 동전을 주워가라. 그런데 연속해서 3개의 동전을 줍지는 못한다.”고 하였다.\n길동이가 가장 많은 금액의 동전을 주울 수 있도록 도와주는 프로그램을 작성하시오. \n  예를 들어, 길에 일렬로 놓은 동전이 아래와 같다면 길동이는 최대 38원(7+10+10+11)을 주울 수 있다.\n\n\n \n# 입력 \n   첫째 줄은 동전의 갯수가 입력되고 동전의 수는 100이하의 자연수이다. 다음 줄에는 동전의 값들이 입력된다. 입력된 값들은 자연수이고 합해서 30,000을 초과하지 않는다.\n \n# 출력 \n   출력내용은 가장 많이 주울 수 있는 동전의 총 합계를 출력한다.\n \n# 입력 예시 \n 8\n5 7 10 1 2 10 11 6 \n# 출력 예시 \n 38 \n# 도움말 \n  \n# 출처 \n 2007 교원프로그래밍경진대회 \n\n*************************************************************/\n#include\u003ciostream\u003e\nusing namespace std;\n\nint dp[101][101]={0};\nint maxBTW(int j,int s,int e)\n{\n    int maxi=0;\n    for(int i=s;i\u003ce;i++)\n    {\n        if(maxi\u003cdp[i][j])\n        {\n            maxi=dp[i][j];\n        }\n    }\n    return maxi;\n}\nint main()\n{\n    int coin[101]={0};\n    int siz;\n    cin\u003e\u003esiz;\n    for(int i=1;i\u003c=siz;i++)\n    {\n        cin\u003e\u003ecoin[i];\n    }\n    for(int j=1;j\u003c=siz;j++)\n    {\n        for(int i=1;i\u003c=j;i++)\n        {\n            if(i==1) dp[i][j]=maxBTW(j-1,2,j)+coin[j];\n            else dp[i][j]=maxBTW(j-i,1,j)+coin[j];\n            if(j==2\u0026\u0026i==1)dp[i][j]=coin[1]+coin[2];\n        }\n    }\n    int maxi=0;\n    for(int i=1;i\u003c=siz;i++)\n    {\n        for(int j=1;j\u003c=siz;j++)\n        {\n            if(maxi\u003cdp[i][j])\n            {\n                maxi=dp[i][j];\n            }\n        }\n    }\n    cout\u003c\u003cmaxi;\n}\n\n/**************************************************************\n\t문제번호: 4019\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1736 kb\n****************************************************************/\n\n"},{"Number":"3702","Time":"2016/09/12","Title":"파스칼의 삼각형 2","Code":"/**************************************************************\n# 문제 설명 \n 다음과 같은 삼각형을 파스칼의 삼각형이라고 한다.\n\n\n  회전 변환된 이 삼각형에서 (r행, c열)의 값을 알 수 있는 프로그램을 작성하시오. 행과 열은 1부터 시작한다. \n# 입력 \n 자연수 r과 c가 입력된다. (1 ≤ r, c ≤ 50) \n# 출력 \n (r, c)의 원소 값을 100,000,000으로 나눈 나머지를 출력한다. \n# 입력 예시 \n 3 2 \n# 출력 예시 \n 3 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003ciostream\u003e\nusing namespace std;\n\nint main()\n{\n    int dp[51][51]={0};\n    for(int i=1;i\u003c=50;i++){dp[1][i]=1;};\n    int x,y;\n    cin\u003e\u003ex\u003e\u003ey;\n    for(int i=2;i\u003c=y;i++)\n    {\n        for(int j=1;j\u003c=x;j++)\n        {\n            dp[i][j]=(dp[i-1][j]+dp[i][j-1])%100000000;\n        }\n    }\n    cout\u003c\u003cdp[y][x];\n}\n\n/**************************************************************\n\t문제번호: 3702\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3212","Time":"2016/09/12","Title":"위상 정렬(topological sort)","Code":"/**************************************************************\n# 문제 설명 \n 그래프가 주어지면 위상정렬을 해 보자.\n\n위 그래프를 위상정렬을 한 결과는 \n1 → 2﻿ → 3 → 4 → 5 → 6\n이다. \n우선 순위가 같을 땐 낮은 숫자를 먼저 처리한다.\n위상 정렬이란?\n\n \n# 입력 \n 첫째 줄에 정점의 개수 v (2 \u003c= v \u003c= 200)와 간선의 개수 n이 입력된다. (만약, v가 6이라면 정점번호는 1~6)\n둘째 줄 부터 간선의 정보 (a, b)가 쌍으로 입력된다. (a → b를 의미)\n\n \n# 출력 \n 위상 정렬의 결과를 출력한다. \n우선 순위가 같을 땐 정점의 번호가 낮은 것을 우선으로 한다.\n사이클이 존재하여 위상정렬을 할 수 없다면 -1을 출력한다.\n \n# 입력 예시 \n 6 8\n1 2\n2 3\n2 4\n3 4\n3 6\n4 5\n4 6\n5 6 \n# 출력 예시 \n 1\n2\n3\n4\n5\n6 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003clist\u003e\n\nusing namespace std;\n\ntypedef struct\n{\n    list\u003cint\u003e pointing;\n    int pointed;\n}point;\nint main()\n{\n    point graph[201];\n    for(int i=0;i\u003c201;i++){graph[i].pointed=0;graph[i].pointing=list\u003cint\u003e();}\n    int p,l;\n    cin\u003e\u003ep\u003e\u003el;\n    int a,b;\n    for(int i=0;i\u003cl;i++)\n    {\n        cin\u003e\u003ea\u003e\u003eb;\n        graph[a].pointing.push_back(b);\n        graph[b].pointed++;\n    }\n\n    int order[200]={0};\n    int last=0;\n    int start=0;\n    while(true)\n    {\n        bool anyroopd=false;\n        for(int i=1;i\u003c=p;i++)\n        {\n            if(graph[i].pointed==0)\n            {\n                anyroopd=true;\n                for(int j=start;j\u003c=last;j++)\n                {\n                    if(order[j]\u003ei||order[j]==0)\n                    {\n                        order[j]=i;\n                        last=j+1;\n                        break;\n                    }\n                }\n                for(list\u003cint\u003e::const_iterator iter=graph[i].pointing.begin();iter!=graph[i].pointing.end();++iter)\n                {\n                    graph[(*iter)].pointed--;\n                }\n                graph[i].pointed=-1;\n            }\n        }\n        start=last;\n        if(!anyroopd) break;\n    }\n    if(last!=p)\n    {\n        cout\u003c\u003c-1;\n    }\n    else\n    {\n        for(int i=0;i\u003cp;i++)\n        {\n            cout\u003c\u003corder[i]\u003c\u003cendl;\n        }\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3212\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1700 kb\n****************************************************************/\n\n"},{"Number":"2609","Time":"2016/09/10","Title":"순환소수","Code":"/**************************************************************\n# 문제 설명 \n a,b를 입력받아 a/b를 소수로 출력하는 프로그램을 작성하시오.\n모든 유리수는 유한소수 또는 순환하는 무한소수로 표현된다.\na/b의 반복되는 부분을 괄호로 묶어 표시하시오.\n입력 예)\n1 5\n출력 예)\n0.2(0) \n# 입력 \n 분자(a)와 분모(b)가 공백으로 분리되어 입력된다.(1\u003c=a,b\u003c=1,000,000,000)\n\n \n# 출력 \n 순환소수로 출력하되 반복되는 부분은 (, )괄호로 묶어 출력한다. 출력예시 참고.\n단, 출력되는 순환마디의 길이는 999개 미만이다. \n# 입력 예시 \n 9 7 \n# 출력 예시 \n 1.(285714) \n# 도움말 \n \n \n# 출처 \n 2012 창원과고 교내경시대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\n\nint main()\n{\n    long long a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    int digits[200];\n    int index=0;\n\n    bool fin=false;\n    int bstart=1;\n    int bend=1;\n    int remain=a%b,digit=a/b;\n    while(index!=200)\n    {\n        digits[index++]=digit;\n        digit=remain*10/b;\n        remain=remain*10%b;\n    }\n    for(int i=1;i\u003c=index-2;i++)\n    {\n        int length=(index-i)/3;\n        for(int z=1;z\u003c=length;z++)\n        {\n            bool isCir=true;\n            for(int j=i;j\u003c=z+i;j++)\n            {\n                if(digits[j]!=digits[j+z]||digits[j]!=digits[j+z+z])\n                {\n                    isCir=false;\n                    break;\n                }\n            }\n            if(isCir)\n            {\n                bstart=i;\n                bend=i+z-1;\n                cout\u003c\u003cdigits[0]\u003c\u003c\".\";\n                for(int i=1;i\u003c=bend;i++)\n                {\n                    if(bstart==i) cout\u003c\u003c\"(\";\n                    cout\u003c\u003cdigits[i];\n                    if(i==bend) cout\u003c\u003c\")\";\n                }\n                return 0;\n            }\n        }\n    }\n}\n\n/**************************************************************\n\t문제번호: 2609\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3600","Time":"2016/09/10","Title":"체스 말 이동","Code":"/**************************************************************\n# 문제 설명 \n 승현이는 체스를 배우고 있다.\n하지만 나이트(Knight)를 잘 사용하는 방법을 몰라 어려워하고 있다.\n여러분이 승현이를 도와 승현이가 나이트를 잘 사용하게 만들어 주자.\n입력에는 체스판의 가로, 세로 길이 n과 목표물의 위치, 그리고 현재 나이트의 위치가 주어진다.\n여러분은 나이트로 목표물을 잡을 수 있는 최소 횟수를 출력해야 한다.\n좌표는 (행 번호, 열 번호)이며 좌측 상단이 (1, 1), 우측 하단이 (n, n)이다.\n예를 들어 체스판의 길이가 8, 말의 위치가 (1,1)이고 목표물이 (2,2)에 있다면 4번만 움직이면 목표물을 잡을 수 있다. \n\n    \n        \n            \n            ◎\n            \n            ◎\n            \n        \n        \n            ◎\n            \n            \n            \n            ◎\n        \n        \n            \n            \n            \n            ☆\n            \n            \n            \n        \n        \n            ◎\n            \n            \n            \n            ◎\n        \n        \n            \n            ◎\n            \n            ◎\n            \n        \n    \n\n\u003c나이트(☆)의 이동 경로\u003e\n\n위의 예를 나타내면,\n\n    \n        \n            ☆\n            　\n            　\n            ③\n            　\n            　\n            　\n            　\n        \n        \n            \n            \n            ④\n            \n            ①\n            \n            \n            \n            \n            \n        \n        \n            　\n            \n            \n            \n            ②\n            \n            \n            \n        \n        \n            　\n            \n            \n            \n            \n            \n            \n            \n        \n        \n            　\n            \n            　\n            　\n            \n            \n            \n            \n        \n        \n            　\n            \n            \n            \n            \n            \n            \n            \n        \n        \n            　\n            \n            \n            \n            \n            \n            \n            \n        \n        \n            　\n            \n            \n            \n            \n            \n            \n            \n        \n    \n\n\n\n\n\n\n \n# 입력 \n  첫째 줄에 체스판의 크기 n이 입력된다. (체스판의 크기는 n*n, 5 \u003c= n \u003c= 1,000)\n둘째 줄에는 나이트의 위치 행과 열 번호가 입력된다.\n셋째 줄에는 목표물의 위치 행과 열 번호가 입력된다. \n# 출력 \n 목표물에 도달할 수 있는 최소 이동 횟수를 출력한다. \n# 입력 예시 \n 8\n1 1\n2 2 \n# 출력 예시 \n 4 \n# 도움말 \n  \n# 출처 \n edwardblue \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cqueue\u003e\nusing namespace std;\nint w;\ntypedef struct{\n    int x,y;\n    bool isGood()\n    {\n        return !(x\u003c=0||y\u003c=0||x\u003ew||y\u003ew);\n    }\n}vec2;\nvec2 dir[]={{1,2},{2,1},{-1,2},{-2,1},{-2,-1},{-1,-2},{2,-1},{1,-2}};\nint main()\n{\n    cin\u003e\u003ew;\n    int x,y;\n    cin\u003e\u003ex\u003e\u003ey;\n    vec2 start={x,y};\n    cin\u003e\u003ex\u003e\u003ey;\n    vec2 fin={x,y};\n    int visit[1001][1001]={0};\n    queue\u003cvec2\u003e qu;\n    qu.push(start);\n    visit[start.x][start.y]=1;\n    int no;\n    while(!qu.empty())\n    {\n        vec2 thi=qu.front();\n        qu.pop();\n        for(int i=0;i\u003c8;i++)\n        {\n            vec2 mv={thi.x+dir[i].x,thi.y+dir[i].y};\n            if(mv.isGood())\n            {\n                if(!visit[mv.x][mv.y])\n                {\n                    qu.push(mv);\n                    visit[mv.x][mv.y]=visit[thi.x][thi.y]+1;\n                    if(mv.x==fin.x\u0026\u0026mv.y==fin.y)\n                    {\n                        no=visit[mv.x][mv.y]-1;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    cout\u003c\u003cno;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3600\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:124 ms\n\t메모리 사용량:5500 kb\n****************************************************************/\n\n"},{"Number":"3520","Time":"2016/09/05","Title":"체커 도전 (N-Queen Problem)","Code":"/**************************************************************\n# 문제 설명 \n 체스에서 퀸(queen)은 가로, 세로, 대각선에 같은 퀸을 배치하지 못한다.\n각 체커는 각 행에 1개, 각 열에 1개씩 밖에 배치할 수 없다. \n6*6체커보드에서 6개의 체커들은 다음과 같이 퀸을 배치할 수 있다.\n\n\n    \n        \n            \n            1\n            2\n            3\n            4\n            5\n            6\n        \n        \n            1\n            \n            Q\n            \n            \n            \n            \n        \n        \n            2\n            \n            \n            \n            Q\n            \n            \n        \n        \n            3\n            \n            \n            \n            \n            \n            Q\n        \n        \n            4\n            Q\n            \n            \n            \n            \n            \n        \n        \n            5\n            \n            \n            Q\n            \n            \n            \n        \n        \n            6\n            \n            \n            \n            \n            Q\n            \n        \n    \n\n\n이 상태의 열 번호는 2 4 6 1 3 5로 나타낼 수 있다.\n체스판의 크기가 N이 주어질 때, 퀸을 놓을 수 있는 모든 배치의 개수를 구하시오.\n\n\n\n\n\n \n# 입력 \n 체스판의 크기 N이 입력된다( 6 \u003c= N \u003c= 13 )\n \n# 출력 \n 처음 세 줄은 가능한 해법 3가지를 출력한다. 이때 열번호가 적은 순서부터 오름차순으로 세 가지만 출력한다.\n네째 줄에 가능한 퀸의 배치 개수를 출력한다.\n \n# 입력 예시 \n 6 \n# 출력 예시 \n 2 4 6 1 3 5 \n3 6 2 5 1 4 \n4 1 5 2 6 3 \n4 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cstdlib.h\u003e\nusing namespace std;\n\nint siz;\nint able[13][13];\n\nint caiss[3][13];\nint thi[13];\nlong long total;\n\nint dir[4][2]={{1,1},{-1,-1},{-1,1},{1,-1}};\nvoid visit(int x,int y,int d)\n{\n    for(int i=0;i\u003csiz;i++)\n    {\n        able[i][x]+=d;\n    }\n    for(int i=0;i\u003c4;i++)\n    {\n        int dx=x,dy=y;\n        while(true)\n        {\n            dx+=dir[i][0];\n            dy+=dir[i][1];\n            if(dx==-1||dy==-1||dx==siz||dy==siz) break;\n            able[dy][dx]+=d;\n        }\n    }\n}\n\nvoid dfs(int y)\n{\n    for(int x=0;x\u003csiz;x++)\n    {\n        if(able[y][x]==0)\n        {\n            thi[y]=x;\n            if(y==siz)\n            {\n                if(total\u003c3)\n                {\n                    for(int i=0;i\u003csiz;i++)\n                    {\n                        caiss[total][i]=thi[i];\n                    }\n                }\n                total++;\n                return;\n            }\n            visit(x,y,1);\n            dfs(y+1);\n            visit(x,y,-1);\n        }\n    }\n}\n\nint main()\n{\n    cin\u003e\u003esiz;\n    dfs(0);\n    for(int i=0;i\u003c3;i++)\n    {\n        for(int j=0;j\u003csiz;j++)\n        {\n            cout\u003c\u003ccaiss[i][j]+1\u003c\u003c\" \";\n        }\n        cout\u003c\u003cendl;\n    }\n    cout\u003c\u003ctotal;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3520\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:1980 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3520","Time":"2016/09/05","Title":"체커 도전 (N-Queen Problem)","Code":"/**************************************************************\n# 문제 설명 \n 체스에서 퀸(queen)은 가로, 세로, 대각선에 같은 퀸을 배치하지 못한다.\n각 체커는 각 행에 1개, 각 열에 1개씩 밖에 배치할 수 없다. \n6*6체커보드에서 6개의 체커들은 다음과 같이 퀸을 배치할 수 있다.\n\n\n    \n        \n            \n            1\n            2\n            3\n            4\n            5\n            6\n        \n        \n            1\n            \n            Q\n            \n            \n            \n            \n        \n        \n            2\n            \n            \n            \n            Q\n            \n            \n        \n        \n            3\n            \n            \n            \n            \n            \n            Q\n        \n        \n            4\n            Q\n            \n            \n            \n            \n            \n        \n        \n            5\n            \n            \n            Q\n            \n            \n            \n        \n        \n            6\n            \n            \n            \n            \n            Q\n            \n        \n    \n\n\n이 상태의 열 번호는 2 4 6 1 3 5로 나타낼 수 있다.\n체스판의 크기가 N이 주어질 때, 퀸을 놓을 수 있는 모든 배치의 개수를 구하시오.\n\n\n\n\n\n \n# 입력 \n 체스판의 크기 N이 입력된다( 6 \u003c= N \u003c= 13 )\n \n# 출력 \n 처음 세 줄은 가능한 해법 3가지를 출력한다. 이때 열번호가 적은 순서부터 오름차순으로 세 가지만 출력한다.\n네째 줄에 가능한 퀸의 배치 개수를 출력한다.\n \n# 입력 예시 \n 6 \n# 출력 예시 \n 2 4 6 1 3 5 \n3 6 2 5 1 4 \n4 1 5 2 6 3 \n4 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cstdlib.h\u003e\nusing namespace std;\nint siz;\nstruct _cais\n{\n    int arr[13];\n    bool operator\u003e(const struct _cais\u0026 other)\n    {\n        for(int i=0;i\u003csiz;i++)\n        {\n            if(arr[i]\u003eother.arr[i]) return true;\n            else if(arr[i]\u003cother.arr[i]) return false;\n        }\n        return false;\n    };\n    int\u0026 operator[](int index) {return arr[index];};\n    bool empty(){return !arr[0];};\n};\nint able[13][13];\ntypedef _cais cais;\nvector\u003ccais\u003e caiss;\nint total;\ncais thi;\nint dir[4][2]={{1,1},{-1,-1},{-1,1},{1,-1}};\nvoid visit(int x,int y,int d)\n{\n    for(int i=0;i\u003csiz;i++)\n    {\n        able[i][x]+=d;\n    }\n    for(int i=0;i\u003c4;i++)\n    {\n        int dx=x,dy=y;\n        while(true)\n        {\n            dx+=dir[i][0];\n            dy+=dir[i][1];\n            if(dx==-1||dy==-1||dx==siz||dy==siz) break;\n            able[dy][dx]+=d;\n        }\n    }\n}\nvoid dfs(int y)\n{\n    for(int x=0;x\u003csiz;x++)\n    {\n        if(able[y][x]==0)\n        {\n            thi[y]=x;\n            if(y==siz)\n            {\n                if(total\u003c3)\n                {\n                    caiss.push_back(thi);\n                }\n                total++;\n                return;\n            }\n            visit(x,y,1);\n            dfs(y+1);\n            visit(x,y,-1);\n        }\n    }\n}\nint main()\n{\n    cin\u003e\u003esiz;\n    dfs(0);\n    for(int i=0;i\u003c3;i++)\n    {\n        for(int j=0;j\u003csiz;j++)\n        {\n            cout\u003c\u003ccaiss[i][j]+1\u003c\u003c\" \";\n        }\n        cout\u003c\u003cendl;\n    }\n    cout\u003c\u003ctotal;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3520\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:1976 ms\n\t메모리 사용량:1700 kb\n****************************************************************/\n\n"},{"Number":"3520","Time":"2016/09/05","Title":"체커 도전 (N-Queen Problem)","Code":"/**************************************************************\n# 문제 설명 \n 체스에서 퀸(queen)은 가로, 세로, 대각선에 같은 퀸을 배치하지 못한다.\n각 체커는 각 행에 1개, 각 열에 1개씩 밖에 배치할 수 없다. \n6*6체커보드에서 6개의 체커들은 다음과 같이 퀸을 배치할 수 있다.\n\n\n    \n        \n            \n            1\n            2\n            3\n            4\n            5\n            6\n        \n        \n            1\n            \n            Q\n            \n            \n            \n            \n        \n        \n            2\n            \n            \n            \n            Q\n            \n            \n        \n        \n            3\n            \n            \n            \n            \n            \n            Q\n        \n        \n            4\n            Q\n            \n            \n            \n            \n            \n        \n        \n            5\n            \n            \n            Q\n            \n            \n            \n        \n        \n            6\n            \n            \n            \n            \n            Q\n            \n        \n    \n\n\n이 상태의 열 번호는 2 4 6 1 3 5로 나타낼 수 있다.\n체스판의 크기가 N이 주어질 때, 퀸을 놓을 수 있는 모든 배치의 개수를 구하시오.\n\n\n\n\n\n \n# 입력 \n 체스판의 크기 N이 입력된다( 6 \u003c= N \u003c= 13 )\n \n# 출력 \n 처음 세 줄은 가능한 해법 3가지를 출력한다. 이때 열번호가 적은 순서부터 오름차순으로 세 가지만 출력한다.\n네째 줄에 가능한 퀸의 배치 개수를 출력한다.\n \n# 입력 예시 \n 6 \n# 출력 예시 \n 2 4 6 1 3 5 \n3 6 2 5 1 4 \n4 1 5 2 6 3 \n4 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cstdlib.h\u003e\nusing namespace std;\nint siz;\nstruct _cais\n{\n    int arr[13];\n    bool operator\u003e(const struct _cais\u0026 other)\n    {\n        for(int i=0;i\u003csiz;i++)\n        {\n            if(arr[i]\u003eother.arr[i]) return true;\n            else if(arr[i]\u003cother.arr[i]) return false;\n        }\n        return false;\n    };\n    int\u0026 operator[](int index) {return arr[index];};\n    bool empty(){return !arr[0];};\n};\ntypedef _cais cais;\ncais caiss[3];\ncais thi;\nlong long total;\n\nint able[13][13];\nint dir[4][2]={{1,1},{-1,-1},{-1,1},{1,-1}};\n\nvoid visit(int x,int y,int d)\n{\n    for(int i=0;i\u003csiz;i++)\n    {\n        able[i][x]+=d;\n    }\n    for(int i=0;i\u003c4;i++)\n    {\n        int dx=x,dy=y;\n        while(true)\n        {\n            dx+=dir[i][0];\n            dy+=dir[i][1];\n            if(dx==-1||dy==-1||dx==siz||dy==siz) break;\n            able[dy][dx]+=d;\n        }\n    }\n}\n\nvoid dfs(int y)\n{\n    for(int x=0;x\u003csiz;x++)\n    {\n        if(able[y][x]==0)\n        {\n            thi[y]=x;\n            if(y==siz)\n            {\n                if(total\u003c3)\n                {\n                    for(int i=0;i\u003csiz;i++)\n                    {\n                        caiss[total][i]=thi[i];\n                    }\n                }\n                total++;\n                return;\n            }\n            visit(x,y,1);\n            dfs(y+1);\n            visit(x,y,-1);\n        }\n    }\n}\n\nint main()\n{\n    cin\u003e\u003esiz;\n    dfs(0);\n    for(int i=0;i\u003c3;i++)\n    {\n        for(int j=0;j\u003csiz;j++)\n        {\n            cout\u003c\u003ccaiss[i][j]+1\u003c\u003c\" \";\n        }\n        cout\u003c\u003cendl;\n    }\n    cout\u003c\u003ctotal;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3520\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:1980 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3520","Time":"2016/09/05","Title":"체커 도전 (N-Queen Problem)","Code":"/**************************************************************\n# 문제 설명 \n 체스에서 퀸(queen)은 가로, 세로, 대각선에 같은 퀸을 배치하지 못한다.\n각 체커는 각 행에 1개, 각 열에 1개씩 밖에 배치할 수 없다. \n6*6체커보드에서 6개의 체커들은 다음과 같이 퀸을 배치할 수 있다.\n\n\n    \n        \n            \n            1\n            2\n            3\n            4\n            5\n            6\n        \n        \n            1\n            \n            Q\n            \n            \n            \n            \n        \n        \n            2\n            \n            \n            \n            Q\n            \n            \n        \n        \n            3\n            \n            \n            \n            \n            \n            Q\n        \n        \n            4\n            Q\n            \n            \n            \n            \n            \n        \n        \n            5\n            \n            \n            Q\n            \n            \n            \n        \n        \n            6\n            \n            \n            \n            \n            Q\n            \n        \n    \n\n\n이 상태의 열 번호는 2 4 6 1 3 5로 나타낼 수 있다.\n체스판의 크기가 N이 주어질 때, 퀸을 놓을 수 있는 모든 배치의 개수를 구하시오.\n\n\n\n\n\n \n# 입력 \n 체스판의 크기 N이 입력된다( 6 \u003c= N \u003c= 13 )\n \n# 출력 \n 처음 세 줄은 가능한 해법 3가지를 출력한다. 이때 열번호가 적은 순서부터 오름차순으로 세 가지만 출력한다.\n네째 줄에 가능한 퀸의 배치 개수를 출력한다.\n \n# 입력 예시 \n 6 \n# 출력 예시 \n 2 4 6 1 3 5 \n3 6 2 5 1 4 \n4 1 5 2 6 3 \n4 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\n#include \u003cstdlib.h\u003e\nusing namespace std;\nint siz;\nstruct _cais\n{\n    int arr[13];\n    bool operator\u003e(const struct _cais\u0026 other)\n    {\n        for(int i=0;i\u003csiz;i++)\n        {\n            if(arr[i]\u003eother.arr[i]) return true;\n            else if(arr[i]\u003cother.arr[i]) return false;\n        }\n        return false;\n    };\n    int\u0026 operator[](int index) {return arr[index];};\n    bool empty(){return !arr[0];};\n};\ntypedef _cais cais;\nvector\u003ccais\u003e caiss;\ncais thi;\n\nint able[13][13];\nint dir[4][2]={{1,1},{-1,-1},{-1,1},{1,-1}};\n\nvoid visit(int x,int y,int d)\n{\n    for(int i=0;i\u003csiz;i++)\n    {\n        able[i][x]+=d;\n    }\n    for(int i=0;i\u003c4;i++)\n    {\n        int dx=x,dy=y;\n        while(true)\n        {\n            dx+=dir[i][0];\n            dy+=dir[i][1];\n            if(dx==-1||dy==-1||dx==siz||dy==siz) break;\n            able[dy][dx]+=d;\n        }\n    }\n}\n\nvoid dfs(int y)\n{\n    for(int x=0;x\u003csiz;x++)\n    {\n        if(able[y][x]==0)\n        {\n            thi[y]=x;\n            if(y==siz)\n            {\n                caiss.push_back(thi);\n                return;\n            }\n            visit(x,y,1);\n            dfs(y+1);\n            visit(x,y,-1);\n        }\n    }\n}\n\nint main()\n{\n    cin\u003e\u003esiz;\n    dfs(0);\n    for(int i=0;i\u003c3;i++)\n    {\n        for(int j=0;j\u003csiz;j++)\n        {\n            cout\u003c\u003ccaiss[i][j]+1\u003c\u003c\" \";\n        }\n        cout\u003c\u003cendl;\n    }\n    cout\u003c\u003ccaiss.size();\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3520\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:1992 ms\n\t메모리 사용량:11688 kb\n****************************************************************/\n\n"},{"Number":"3155","Time":"2016/09/03","Title":"도시 계획 1","Code":"/**************************************************************\n# 문제 설명 \n 신도시의 도시계획을 맡은 광곽이는 도시의 도로지도를 보고 너무 머리가 아파 프로그램을 이용해 도로의 개수를 세려고 한다.\n머리가 아파 힘들어하는 광곽이를 도와주자.\n(도움말을 반드시 참고하세요) \n# 입력 \n 도시의 크기 $가로 x$와 $세로 y$이 주어지고, $x*y$크기의 도시의 지도가 주어진다.\n$0$은 일반 주거지역이고, $1$은 도로이다. 단, 모든 도로는 $1$차선이고, 도로가 대각선인 경우는 없다.\n$x$와 $y$는 $3$이상 $30$이하의 정수이다. \n# 출력 \n 도로의 갯수를 출력한다.\n \n# 입력 예시 \n 10 10\n0100001000\n0100001000\n1111111111\n0000100100\n0000100100\n1111111111\n0000100100\n0000100100\n1111111111\n0000100100\n \n# 출력 예시 \n 7 \n# 도움말 \n 입출력 예시2\n30 30\n000100000000001000000000000100\n111111111111111111111111111111\n000100000000001000000000000100\n000111111111111000000000000111\n111100000000001000000000000100\n000100000000001000000000000100\n000100000000001111111100000100\n000100000000001000000000000100\n000100000000001000000000000100\n000100000000001000001111111100\n000100000000001110001000000000\n000100000000001000001000000000\n000111111110001000001000000000\n000100000000001000001000000000\n000100000000001000001000000000\n000111111111111111111111111110\n000100000000001000001000000000\n000100000000001000001000000000\n000100000000001000001000000000\n000100000111111111111111111110\n000100000000001000001000000000\n000100000000001000001000000000\n000111111111111000001000000000\n000000000000001000001000000000\n000000000000001111111111111110\n011111111110000010000000000010\n010000000010000010000000000010\n010000000010000011111111111110\n011111111110000000000000000010\n000000000000000000000000000010\n\n출력\n23\n아래 그림처럼, 도로의 개수란 직선으로 뻗은 것을 1개로 합니다. (빨간선의 개수를 세면 됨)\n \n# 출처 \n martinok1103 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint bo[2][2]={{0,1},{1,0}};\nbool founded[32][32][2];\nbool gido[32][32];\nvoid dfs(int x,int y,int turn)\n{\n    if(!founded[x][y][turn]\u0026\u0026\n       gido[x][y])\n    {\n        founded[x][y][turn]=true;\n        int mx=bo[turn][0];\n        int my=bo[turn][1];\n        dfs(x+mx,y+my,turn);\n        dfs(x+mx*-1,y+my*-1,turn);\n    }\n}\nbool predict(int x,int y,int turn)\n{\n    int mx=bo[turn][0];\n    int my=bo[turn][1];\n    return gido[x+mx][y+my]||gido[x+mx*-1][y+my*-1];\n}\nint main()\n{\n    int w,h;\n    cin\u003e\u003ew\u003e\u003eh;\n    int total=0;\n    char c[31];\n    for(int i=1;i\u003c=h;i++)\n    {\n        cin\u003e\u003ec;\n        for(int j=0;c[j]!=0;j++)\n        {\n            gido[j+1][i]=c[j]-'0';\n        }\n    }\n    for(int i=1;i\u003c=w;i++)\n    {\n        for(int j=1;j\u003c=h;j++)\n        {\n            if(gido[i][j])\n            {\n                if(gido[i-1][j]==0\u0026\u0026gido[i+1][j]==0\u0026\u0026\n               gido[i][j-1]==0\u0026\u0026gido[i][j+1]==0)\n                {\n                    total++;\n                    continue;\n                }\n                if(founded[i][j][0]==false\n                   \u0026\u0026predict(i,j,0))\n                {\n                    total++;\n                    dfs(i,j,0);\n                }\n                if(founded[i][j][1]==false\n                   \u0026\u0026predict(i,j,1))\n                {\n                    total++;\n                    dfs(i,j,1);\n                }\n            }\n        }\n    }\n    cout\u003c\u003ctotal;\n}\n\n/**************************************************************\n\t문제번호: 3155\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1700 kb\n****************************************************************/\n\n"},{"Number":"2607","Time":"2016/09/03","Title":"쌍둥이 소수","Code":"/**************************************************************\n# 문제 설명 \n 수학에서 쌍둥이 소수(twin prime)는 두 수의 차가 2인 소수의 쌍, 즉 (p, p+2)이다.\n시작과 마지막 값이 입력되면 그 사이의 쌍둥이 소수쌍을 모두 구하려고 한다.\n쌍둥이 소수를 구하는 프로그램을 작성하시오. \n# 입력 \n 시작값(a)과 마지막값(b)이 입력된다.( 2 \u003c= a \u003c= b \u003c= 4,000,000)\n \n# 출력 \n 쌍둥이 소수쌍을 한 줄에 하나씩 출력한다. 낮은 숫자를 먼저 출력하고 큰 숫자를 뒤에 출력한다.\n \n# 입력 예시 \n 2 20 \n# 출력 예시 \n 3 5\n5 7\n11 13\n17 19 \n# 도움말 \n  \n# 출처 \n 2012 창원과고 교내경시대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint main()\n{\n   bool primes[4000001]={0};\n   primes[0]=true;\n   primes[1]=true;\n   int mini,maxi;\n   cin\u003e\u003emini\u003e\u003emaxi;\n   for(int i=2;i\u003c=maxi;i++)\n   {\n        if(primes[i]==true)continue;\n        for(int j=i+i;j\u003c=maxi;j+=i)\n        {\n            primes[j]=true;\n        }\n   }\n   for(int i=mini;i\u003c=maxi-2;i++)\n   {\n       if(primes[i]==false\u0026\u0026primes[i+2]==false)\n       {\n           cout\u003c\u003ci\u003c\u003c\" \"\u003c\u003ci+2\u003c\u003cendl;\n       }\n   }\n}\n\n/**************************************************************\n\t문제번호: 2607\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:408 ms\n\t메모리 사용량:5480 kb\n****************************************************************/\n\n"},{"Number":"4689","Time":"2016/09/03","Title":"색 상환","Code":"/**************************************************************\n# 문제 설명 \n 문제 4) 색상환 (중등 4, 고등 3)\n\n\n색을 표현하는 기본 요소를 이용하여 표시할 수 있는 모든 색 중에서 대표적인 색을 고리 모양으로 연결하여 나타낸 것을 색상환이라고 한다. 미국의 화가 먼셀(Munsell)이 교육용으로 고안한 20색상환이 널리 알려져 있다. 아래 그림은 먼셀의 20색상환을 보여준다.\n   \n\n   \n색상환에서 인접한 두 색은 비슷하여 언뜻 보면 구별하기 어렵다. 위 그림의 20색상환에서 다홍은 빨강과 인접하고 또 주황과도 인접하다. 풀색은 연두, 녹색과 인접하다. 시각적 대비 효과를 얻기 위하여 인접한 두 색을 동시에 사용하지 않기로 한다.\n주어진 색상환에서 시각적 대비 효과를 얻기 위하여 서로 이웃하지 않은 색들을 선택하는 경우의 수를 생각해 보자.  먼셀의 20색상환에서 시각적 대비 효과를 얻을 수 있게 10개의 색을 선택하는 경우의 수는 2이지만, 시각적 대비 효과를 얻을 수 있게 11개 이상의 색을 선택할 수 없으므로 이 경우의 수는 0이다.\n주어진 정수 N 과 K 에 대하여, N 개의 색으로 구성되어 있는 색상환 ( N 색상환)에서 어떤 인접한 두 색도 동시에 선택하지 않으면서 서로 다른 K 개의 색을 선택하는 경우의 수를 구하는 프로그램을 작성하시오.\n\n \n# 입력 \n 입력 파일의 첫째 줄에 색상환에 포함된 색의 개수를 나타내는 양의 정수 N (4 \u003c= N \u003c= 1,000)이 주어지고, \n둘째 줄에 N 색상환에서 선택할 색의 개수 K (1 \u003c= K \u003c= N )가 주어진다. \n \n# 출력 \n 첫째 줄에 N 색상환에서 어떤 인접한 두 색도 동시에 선택하지 않고 K 개의 색을 고를 수 있는 경우의 수를 1,000,000,003 (10억 3) 으로 나눈 나머지를 출력한다.\n \n# 입력 예시 \n 4\n2 \n# 출력 예시 \n 2 \n# 도움말 \n  \n# 출처 \n 2010 지역본선 중등 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n#define D 1000000003\nint main()\n{\n    int N,K;\n    cin\u003e\u003eN\u003e\u003eK;\n    int DP[1001][1001]={0};\n    for(int i=1;i\u003c=N;i++)\n    {\n        DP[i][1]=i;\n    }\n    for(int i=4;i\u003c=N;i++)\n    {\n        for(int j=2;j\u003c=K;j++)\n        {\n            if(K*2\u003c=N)\n            {\n                DP[i][j]=(DP[i-1][j]+DP[i-2][j-1])%D;\n            }\n        }\n    }\n    cout\u003c\u003cDP[N][K];\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4689\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:16 ms\n\t메모리 사용량:5492 kb\n****************************************************************/\n\n"},{"Number":"4564","Time":"2016/08/29","Title":"계단 오르기","Code":"/**************************************************************\n# 문제 설명 \n 문제4) 계단오르기 \n계단 오르기 게임은 계단 아래 시작점부터 계단꼭대기에 위치한 도착점까지 가는 게임이다. \u003c그림 1\u003e과 같이 각각의 계단에는 일정한 점수가 쓰여 있는데 계단을 밟으면 그 계단에 쓰여 있는 점수를 얻게 된다.\n\n\n\n  예를 들어 \u003c그림 2\u003e와 같이 시작점에서부터 첫 번째, 두 번째, 네 번째, 여섯 번째 계단을 밟아 도착점에 도달하면 총 점수는 10+20+25+20=75점이 된다.\n\n\n계단을 오르는 데는 다음과 같은 규칙이 있다.\n  (1) 계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.\n  (2) 연속된 세 개의 계단을 모두 밟아서는 안된다. 단, 시작점은 계단에 포함되지 않는다.\n  (3) 마지막 도착 계단은 반드시 밟아야 한다.\n  따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다. 하지만,  첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다. \n  각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최대값을 구하는 프로그램을 작성하시오.\n\n\n \n# 입력 \n 첫째 줄에 계단의 개수가 주어진다. 둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10000이하의 자연수이다.\n \n# 출력 \n 첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최대값을 출력한다.\n \n# 입력 예시 \n 6\n10\n20\n15\n25\n10\n20 \n# 출력 예시 \n 75 \n# 도움말 \n  \n# 출처 \n 2006 지역본선 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int dp[301][2]={0};\n    int stairs[301]={0};\n    int siz;\n    cin\u003e\u003esiz;\n    dp[1][1]=stairs[1];\n    dp[2][1]=stairs[1]+stairs[2];\n    dp[2][2]=stairs[2];\n    for(int i=1;i\u003c=siz;i++)\n    {\n        cin\u003e\u003estairs[i];\n    }\n    for(int i=1;i\u003c=siz;i++)\n    {\n        dp[i][1]=dp[i-1][2]+stairs[i];\n        dp[i][2]=max(dp[i-2][1],dp[i-2][2])+stairs[i];\n    }\n    cout\u003c\u003cmax(dp[siz][1],dp[siz][2]);\n}\n\n/**************************************************************\n\t문제번호: 4564\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3725","Time":"2016/08/27","Title":"도시 순회","Code":"/**************************************************************\n# 문제 설명 \n 포화이진트리(full binary tree) 형태로 연결된 도시들이 있다.\n높이가 3일때는 다음그림과 같다.\n\n우리는 차로 모든 도시를 단 한번씩만 방문하고 싶다. (즉, 한번 지나간 길은 다시 갈수 없다.)\n트리의 높이 H가 주어질 때 필요한 자동차 갯수의 최솟값을 출력하라. \n# 입력 \n 높이 H가 입력된다. ( 2 \u003c= H \u003c= 61 )\n \n# 출력 \n 필요한 자동차의 수를 출력한다.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n 3 \n# 도움말 \n 다음과 같이 최소 3대의 자동차가 필요하다.\n\n \n# 출처 \n gijun0102 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint main()\n{\n    long long dp[62]={0};\n    int n;\n    cin\u003e\u003en;\n    dp[1]=1;\n    dp[2]=1;\n    for(int i=3;i\u003c=n;i++)\n    {\n        dp[i]=1;\n        for(int j=i-2;j\u003e=1;j--)\n        {\n            dp[i]+=dp[j]*2;\n        }\n    }\n    cout\u003c\u003cdp[n];\n}\n\n/**************************************************************\n\t문제번호: 3725\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3003","Time":"2016/08/27","Title":"고속 입출력 방법","Code":"/**************************************************************\n# 문제 설명 \n 대부분의 사람들은 프로그래밍 문제를 풀때 문제를 처리하는 효율적인 알고리즘에 관심이 많다.\n하지만 이 문제는 그런 문제가 아니다.\n5백만개의 숫자 데이터를 입력받고 50, 100, 150, 200, 250, ..., 5000000 번째의 데이터만 출력하는 단순한 문제이다.\n우리가 아는 지식을 총 동원하여 입출력 속도를 높여 보자. \n푸는 것이 목적이 아니라 가장 빠른 입출력 속도로 이 문제를 해결하는 것이 관건이다.\n이것을 고민하는 것도 결국 입출력이 아닌 문제해결 능력이 필요할지 모른다. ^^\n \n# 입력 \n 5백만개의 데이터가 공백으로 분리되어 입력된다. (데이터 값은 int범위)\n예)\n28823 2810 949820 12211222 ... (5백만개)\n \n# 출력 \n 5백만개의 데이터를 입력받아 50, 100, 150, ..., 5백만번째 숫자를 공백으로 구분하여 출력한다.\n \n# 입력 예시 \n  \n# 출력 예시 \n  \n# 도움말 \n 입출력 함수의 속도를 비교 해보세요.\n천차만별입니다.\n믿었던 입출력 함수가 아주 느린 것도 있습니다.\n테스트 해보고 느린 함수는 지양해야 되겠죠..?\n물론 입출력의 개수가 몇 개 안될때는 문제가 안 됩니다. \n# 출처 \n  \n\n*************************************************************/\n#include \u003cstdio.h\u003e\nint main()\n{\n    int n;\n    for(int i=0;i\u003c5000000;i++)\n    {\n        scanf(\"%d\",\u0026n);\n        if((i+1)%50==0)\n        {\n            printf(\"%d \",n);\n        }\n\n    }\n}\n\n/**************************************************************\n\t문제번호: 3003\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:676 ms\n\t메모리 사용량:1088 kb\n****************************************************************/\n\n"},{"Number":"4424","Time":"2016/08/27","Title":"연속 부분 최대곱","Code":"/**************************************************************\n# 문제 설명 \n 문제1)\nN개의 양의 실수가 있을 때, 한 개 이상의 연속된 수들의 곱이 최대가 되는 부분을 찾아, 그 곱을 출력하는 프로그램을 작성하시오. 예를 들어 아래와 같이 8개의 양의 실수가 주어진다면,\n\n    \n        \n            1.1\n            0.7\n            1.3\n            0.9\n            1.4\n            0.8\n            0.7\n            1.4\n        \n    \n\n\n색칠된 부분의 곱이 최대가 되며, 그 값은 1.638이다.\n \n# 입력 \n 첫째 줄은 나열된 양의 실수들의 개수 N이 주어지고, 그 다음 줄부터 N개의 수가 한 줄에 하나씩 들어 있다. N은 10,000 이하의 자연수이다. \n# 출력 \n 계산된 최대값을 소수점 이하 넷째 자리에서 반올림하여 소수점 이하 셋째 자리까지 출력한다. \n# 입력 예시 \n 8\n1.1\n0.7\n1.3\n0.9\n1.4\n0.8\n0.7\n1.4 \n# 출력 예시 \n 1.638 \n# 도움말 \n  \n# 출처 \n 1996 KOI 중등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    double items[100000];\n    int siz;\n    cin\u003e\u003esiz;\n    double ret=-101,sum=0;\n    for(int i=0;i\u003csiz;i++)\n    {\n        cin\u003e\u003eitems[i];\n    }\n    for(int i=0;i\u003csiz;i++)\n    {\n        sum=max(1.0,sum)*items[i];\n        ret=max(ret,sum);\n    }\n    printf(\"%.3f\",ret);\n}\n\n/**************************************************************\n\t문제번호: 4424\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:4 ms\n\t메모리 사용량:2360 kb\n****************************************************************/\n\n"},{"Number":"3705","Time":"2016/08/27","Title":"연속된 구간의 최대합","Code":"/**************************************************************\n# 문제 설명 \n 어떤 수열이 있을 때 연속된 구간의 최대합을 출력하려고 한다.\n예를 들어\n2 -6 4 5 -2 6 2 -1이라는 수열이 있다면 \n연속된 구간의 최대 부분합은 15이다. (4+5+ -2 + 6 + 2) \n# 입력 \n 첫째줄에 수열의 원소의 개수 n이 입력된다. (1 \u003c= n \u003c= 100,000)\n둘째 줄에 n개의 정수 원소 값이 차례대로 입력된다. (값의 범위: -100 ~ + 100) \n# 출력 \n 연속된 구간의 최대합을 출력한다.\n\n \n# 입력 예시 \n 8\n2 -6 4 5 -2 6 2 -1 \n# 출력 예시 \n 15 \n# 도움말 \n  \n# 출처 \n DP  \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int items[100000];\n    int siz;\n    cin\u003e\u003esiz;\n    int ret=-101,sum=0;\n    for(int i=0;i\u003csiz;i++)\n    {\n        cin\u003e\u003eitems[i];\n    }\n    for(int i=0;i\u003csiz;i++)\n    {\n        sum=max(0,sum)+items[i];\n        ret=max(ret,sum);\n    }\n    cout\u003c\u003cret;\n}\n\n/**************************************************************\n\t문제번호: 3705\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:56 ms\n\t메모리 사용량:1984 kb\n****************************************************************/\n\n"},{"Number":"4045","Time":"2016/08/27","Title":"학급 편성 (Small)","Code":"/**************************************************************\n# 문제 설명 \n 문제 5) 학급 편성\n\n최근 경남중학교에서는 기초학력 미달학생들을 구제하기 위한 효율적인 수업 운영을 위하여 소인수 학급 편성 방법을 고민하고 있다.\n   \n  이를테면, 대상학생이 3명이면 (1명+1명+1명), (2명+1명), (3명)으로 편성하는 세 가지 방법을 검토해 볼 수 있다. 또, 대상학생이 5명이면 (1+1+1+1+1), (2+1+1+1), (2+2+1), (3+1+1), (3+2), (4+1), (5)로 편성하는 일곱 가지 방법을 검토해 볼 수 있다.\n   \n  여기서 수업의 품질을 고려하여 학급당 최대학생수를 통제하기로 하였다.  예컨대, 대상학생이 5명이고 학급당 최대학생수가 3명이면, (1+1+1+1+1), (2+1+1+1), (2+2+1), (3+1+1), (3+2)로 다섯 가지 방법이 도출된다.\n \n# 입력 \n 자연수 N과 M이 공백으로 구분되어 입력된다. (1≤N≤50, 1≤M≤50)\n \n# 출력 \n 편성방법의 수를 출력한다.\n \n# 입력 예시 \n 5 3 \n# 출력 예시 \n 5 \n# 도움말 \n 5 2 -\u003e 3\n6 3 -\u003e 7\n \n# 출처 \n 2012 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int dp[51][51];\n    for(int i=0;i\u003c50;i++)\n    {\n        dp[0][i]=1;\n        dp[1][i]=1;\n    }\n    int m,n;\n    cin\u003e\u003en\u003e\u003em;\n    for(int i=2;i\u003c=m;i++)\n    {\n        for(int j=0;j\u003c=n;j++)\n        {\n            dp[i][j]=dp[i-1][j];\n        }\n        for(int j=i;j\u003c=n;j++)\n        {\n            dp[i][j]=dp[i-1][j]+dp[i][j-i];\n        }\n    }\n    cout\u003c\u003cdp[m][n];\n}\n\n/**************************************************************\n\t문제번호: 4045\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3740","Time":"2016/08/20","Title":"0/1 배낭 문제(Knapsack Problem)","Code":"/**************************************************************\n# 문제 설명 \n 어떤 배낭에 W무게 만큼 물건을 담을 수 있다.\n물건들은 (무게 Wi, 가격 Vi) 정보를 가지고 있는데, 물건들을 조합해서 담아 가격의 총합이 최대가 되게 하려고 한다.\n물건들은 한 종류씩 밖에 없으며, 절대 배낭의 무게를 초과해서는 안 된다.\n\n\n \n# 입력 \n 첫째 줄에 물건의 개수 N(1\u003c= N \u003c= 100)과 배낭의 무게 W( 1 \u003c= W \u003c= 10000 )가 입력된다.\n둘째 줄부터 N+1째줄 까지 물건들의 정보가 wi, vi가 한 줄에 하나씩 입력된다. ( 1 \u003c= Wi, Vi \u003c= 100 )\n \n# 출력 \n 배낭의 무게 W를 초과하지 않으면서 물건의 가격의 총합의 최대값을 출력한다.\n \n# 입력 예시 \n 4 5\n2 3\n1 2\n3 3\n2 2\n \n# 출력 예시 \n 7 \n# 도움말 \n 1, 2, 4번 물건을 고른 결과이다.\n\n유사 발전 문제) 2013 KOI 고등부 4번 앱 문제\n※ 이 문제를 풀었으면 꼭 풀어 보시기 바랍니다.\n\n \n# 출처 \n 유명한 문제 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring.h\u003e\n#include \u003calgorithm\u003e\n#include \u003cmap\u003e\nusing namespace std;\ntypedef struct\n{\n   int weight,price;\n}jew;\nint main()\n{\n    int ar[101][10001]={0};\n    jew jews[101];\n    int n,pag;\n    cin\u003e\u003en\u003e\u003epag;\n    for(int i=1;i\u003c=n;i++)\n    {\n        int w,p;\n        cin\u003e\u003ew\u003e\u003ep;\n        jews[i].weight=w;\n        jews[i].price=p;\n    }\n    for(int i=1;i\u003c=n;i++)\n    {\n        if(i!=1)\n        {\n            for(int j=1;j\u003cjews[i].weight;j++)\n            {\n                ar[i][j]=ar[i-1][j];\n            }\n        }\n        for(int j=jews[i].weight;j\u003c=pag;j++)\n        {\n            int t=j-jews[i].weight;\n            int s=jews[i].price;\n            if(t!=0) s=jews[i].price+ar[i-1][t];\n            ar[i][j]=max(ar[i-1][j],s);\n        }\n    }\n    cout\u003c\u003car[n][pag];\n}\n\n\n/**************************************************************\n\t문제번호: 3740\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:8 ms\n\t메모리 사용량:5524 kb\n****************************************************************/\n\n"},{"Number":"3703","Time":"2016/08/20","Title":"사탕 줍기 1","Code":"/**************************************************************\n# 문제 설명 \n $N$행 $M$열의 맵이 있다. \n지원이는 ($1$행, $1$열)에 있고, 엄마는 ($N$행, $M$열)에서 기다리고 있다.\n지원이는 엄마에게 가야하며, 맵의 상, 하, 좌, 우로만 움직일 수 있다.\n그리고 맵에는 지원이가 좋아하는 사탕이 곳곳에 존재한다. (한 칸에 여러개의 사탕이 있을 수도 있다.)\n가장 짧은 길로 가면서 사탕을 최대한 많이 얻는것이 목표이다.\n엄마에게 도착했을때 지원이가 얻을 수 있는 최대 사탕수를 출력하는 프로그램을 작성하시오.\n예) 아래와 같은 $(4, 3)$의 맵에서는 최대 $10$개의 사탕을 얻을 수 있다. \n\n    \n        \n            0\n            3\n            0\n        \n        \n            2\n            1\n            2\n        \n        \n            0\n            0\n            3\n        \n        \n            5\n            2\n            1\n        \n    \n\n$(1,1) - (2,1) - (3,1) - (4,1) - (4, 2) - (4,3)$\n\n \n# 입력 \n 첫째 줄에 행의 수 $N$과 열의 수 $M$이 입력된다. $(1 \u003c= N, M \u003c= 100 )$\n둘째 줄부터 $N+1$행까지 맵의 정보가 입력된다. (숫자는 그 위치의 사탕 수를 의미한다.)\n \n# 출력 \n 가장 짧은 길로 가면서 얻을 수 있는 최대 사탕수를 출력한다.\n \n# 입력 예시 \n 4 3\n0 3 0 \n2 1 2 \n0 0 3 \n5 2 1  \n# 출력 예시 \n 10 \n# 도움말 \n \n \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n   int w,h;\n   int map[101][101];\n   int arr[101][101]={0};\n   cin\u003e\u003eh\u003e\u003ew;\n   for(int i=1;i\u003c=h;i++)\n   {\n       for(int j=1;j\u003c=w;j++)\n       {\n           cin\u003e\u003emap[i][j];\n       }\n   }\n   for(int i=1;i\u003c=h;i++)\n   {\n       for(int j=1;j\u003c=w;j++)\n       {\n           arr[i][j]=max(arr[i-1][j],arr[i][j-1])+map[i][j];\n       }\n   }\n   cout\u003c\u003carr[h][w];\n}\n\n/**************************************************************\n\t문제번호: 3703\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:4 ms\n\t메모리 사용량:1712 kb\n****************************************************************/\n\n"},{"Number":"3703","Time":"2016/08/20","Title":"사탕 줍기 1","Code":"/**************************************************************\n# 문제 설명 \n $N$행 $M$열의 맵이 있다. \n지원이는 ($1$행, $1$열)에 있고, 엄마는 ($N$행, $M$열)에서 기다리고 있다.\n지원이는 엄마에게 가야하며, 맵의 상, 하, 좌, 우로만 움직일 수 있다.\n그리고 맵에는 지원이가 좋아하는 사탕이 곳곳에 존재한다. (한 칸에 여러개의 사탕이 있을 수도 있다.)\n가장 짧은 길로 가면서 사탕을 최대한 많이 얻는것이 목표이다.\n엄마에게 도착했을때 지원이가 얻을 수 있는 최대 사탕수를 출력하는 프로그램을 작성하시오.\n예) 아래와 같은 $(4, 3)$의 맵에서는 최대 $10$개의 사탕을 얻을 수 있다. \n\n    \n        \n            0\n            3\n            0\n        \n        \n            2\n            1\n            2\n        \n        \n            0\n            0\n            3\n        \n        \n            5\n            2\n            1\n        \n    \n\n$(1,1) - (2,1) - (3,1) - (4,1) - (4, 2) - (4,3)$\n\n \n# 입력 \n 첫째 줄에 행의 수 $N$과 열의 수 $M$이 입력된다. $(1 \u003c= N, M \u003c= 100 )$\n둘째 줄부터 $N+1$행까지 맵의 정보가 입력된다. (숫자는 그 위치의 사탕 수를 의미한다.)\n \n# 출력 \n 가장 짧은 길로 가면서 얻을 수 있는 최대 사탕수를 출력한다.\n \n# 입력 예시 \n 4 3\n0 3 0 \n2 1 2 \n0 0 3 \n5 2 1  \n# 출력 예시 \n 10 \n# 도움말 \n \n \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n   int w,h;\n   int map[101][101];\n   int arr[101][101]={0};\n   cin\u003e\u003eh\u003e\u003ew;\n   for(int i=1;i\u003c=h;i++)\n   {\n       for(int j=1;j\u003c=w;j++)\n       {\n           cin\u003e\u003emap[i][j];\n       }\n   }\n   for(int i=1;i\u003c=h;i++)\n   {\n       for(int j=1;j\u003c=w;j++)\n       {\n           arr[i][j]=max(arr[i-1][j],arr[i][j-1])+map[i][j];\n       }\n   }\n   cout\u003c\u003carr[h][w];\n}\n\n/**************************************************************\n\t문제번호: 3703\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:4 ms\n\t메모리 사용량:1712 kb\n****************************************************************/\n\n"},{"Number":"3713","Time":"2016/08/09","Title":"블럭 채우기 3","Code":"/**************************************************************\n# 문제 설명 \n $2*1$과 $2*2$ 크기의 사각형 블럭을 이용하여 $2*n$ 크기의 직사각형 모양으로 채우려고 한다.\n\n\n\n가능한 방법의 수를 구하여라. 두 사각형 블럭은 무한정 있다고 가정한다.\n이 때 숫자가 커질 수 있으므로 $100,007$로 나눈 나머지를 출력하시오.\n\n \n# 입력 \n 첫 줄에 $n$이 입력된다.($1 \u003c= n \u003c= 10,000$)\n \n# 출력 \n $2*n$의 직사각형을 채울 수 있는 방법의 수에 $100,007$으로 나눈 나머지를 출력하시오.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n 5 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    int box[100000];\n    int n;\n    cin\u003e\u003en;\n    box[0]=1;\n    box[1]=1;\n    for(int i=2;i\u003c=n;i++)\n    {\n        box[i]=(2*box[i-2]+box[i-1])%100007;\n    }\n    cout\u003c\u003cbox[n];\n}\n\n/**************************************************************\n\t문제번호: 3713\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1968 kb\n****************************************************************/\n\n"},{"Number":"3712","Time":"2016/08/09","Title":"블럭 채우기 2","Code":"/**************************************************************\n# 문제 설명 \n 다음과 같은 'ㄱ'자 모양의 블럭이 있다. 이 블럭을 이용하여 $2*n$ 크기의 직사각형 모양으로 채우려고 한다.\n\n\n\n가능한 방법의 수를 구하여라. 'ㄱ'자 블럭은 무한정 있다고 가정한다.\n이 때 숫자가 커질 수 있으므로 $100,000,007$로 나눈 나머지를 출력하시오.\n\n \n# 입력 \n 첫 줄에 $n$이 입력된다.($1 \u003c= n \u003c= 10,000$)\n \n# 출력 \n $2*n$의 직사각형을 채울 수 있는 방법의 수에 $100,000,007$으로 나눈 나머지를 출력하시오.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n 2 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    int box[100000];\n    int n;\n    cin\u003e\u003en;\n    box[3]=2;\n    for(int i=4;i\u003c=n;i++)\n    {\n        box[i]=2*box[i-3]%100000007;\n    }\n    cout\u003c\u003cbox[n];\n}\n\n/**************************************************************\n\t문제번호: 3712\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1968 kb\n****************************************************************/\n\n"},{"Number":"3709","Time":"2016/08/09","Title":"블럭 채우기 1","Code":"/**************************************************************\n# 문제 설명 \n $2*1$의 직사각형 블럭을 이용하여 $2*n$ 크기의 직사각형 모양으로 채우려고 한다.\n\n\n가능한 방법의 수를 구하여라. $2*1$ 직사각형 블럭은 무한정 있다고 가정한다.\n이 때 숫자가 커질 수 있으므로 $100,000,007$로 나눈 나머지를 출력하시오.\n\n \n# 입력 \n 첫 줄에 $n$이 입력된다.($1 \u003c= n \u003c= 10,000$)\n \n# 출력 \n $2*n$의 직사각형을 채울 수 있는 방법의 수에 $100,000,007$으로 나눈 나머지를 출력하시오.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n 3 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    int box[100000];\n    int n;\n    cin\u003e\u003en;\n    box[1]=1;\n    box[2]=2;\n    for(int i=3;i\u003c=n;i++)\n    {\n        box[i]=(box[i-2]+box[i-1])%100000007;\n    }\n    cout\u003c\u003cbox[n];\n}\n\n/**************************************************************\n\t문제번호: 3709\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1968 kb\n****************************************************************/\n\n"},{"Number":"4713","Time":"2016/08/09","Title":"공주님의 정원","Code":"/**************************************************************\n# 문제 설명 \n 문제3) 공주님의 정원 (중등2)\n오늘은 공주님이 태어난 경사스러운 날이다. 왕은 이 날을 기념하기 위해 늘 꽃이 피어있는 작은 정원을 만들기로 결정했다.\n\n  총  $N$개의 꽃이 있는 데, 꽃은 모두 같은 해에 피어서 같은 해에 진다. 하나의 꽃은 피는 날과 지는 날이 정해져 있다. 예를 들어, $5$월 $8$일 피어서 $6$월 $13$일 지는 꽃은 $5$월 $8$일부터 $6$월 $12$일까지는 꽃이 피어 있고, $6$월 $13$일을 포함하여 이후로는 꽃을 볼 수 없다는 의미이다. (올해는 $4, 6, 9, 11$월은 $30$일까지 있고, $1, 3, 5, 7, 8, 10, 12$월은 $31$일까지 있으며, $2$월은 $28$일까지만 있다.)\n\n  이러한 $N$개의 꽃들 중에서 다음의 두 조건을 만족하는 꽃들을 선택하고 싶다.\n\n1. 공주가 가장 좋아하는 계절인 $3$월 $1$일부터 $11$월 $30$일까지 매일 꽃이 한 가지 이상 피어 있도록 한다.\n\n2. 정원이 넓지 않으므로 정원에 심는 꽃들의 수를 가능한 적게 한다.\n\n $N$개의 꽃들 중에서 위의 두 조건을 만족하는, 즉 $3$월 $1$일부터 $11$월 $30$일까지 매일 꽃이 한 가지 이상 피어 있도록 꽃들을 선택할 때, 선택한 꽃들의 최소 개수를 출력하는 프로그램을 작성하시오.  \n# 입력 \n  첫째 줄에는 꽃들의 총 개수 $N$ ($1 \u003c= N \u003c= 100,000$)이 주어진다.\n다음 $N$개의 줄에는 각 꽃이 피는 날짜와 지는 날짜가 주어진다. 하나의 날짜는 월과 일을 나타내는 두 숫자로 표현된다. 예를 들어서, $3$ $8$ $7$ $31$은 꽃이 $3$월 $8$일에 피어서 $7$월 $31$일에 진다는 것을 나타낸다.  \n# 출력 \n  첫째 줄에 선택한 꽃들의 최소 개수를 출력한다. 만약 두 조건을 만족하는 꽃들을 선택할 수 없다면 $0$을 출력한다. \n# 입력 예시 \n 4\n1 1 5 31\n1 1 6 30\n5 15 8 31\n6 10 12 10 \n# 출력 예시 \n 2 \n# 도움말 \n  \n# 출처 \n 2011 지역본선 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nstruct flower\n{\n    int start,fin;\n    bool operator\u003c(const flower\u0026 d) const\n    {\n\tif(start==d.start) return fin\u003ed.fin;\n\telse return start\u003cd.start;\n    }\n};\nint main()\n{\n    int si;\n    cin\u003e\u003esi;\n    struct flower flws[100001];\n    for(int i=0;i\u003csi;i++)\n    {\n        int m,d;\n        cin\u003e\u003em\u003e\u003ed;\n        flws[i].start=100*m+d;\n        cin\u003e\u003em\u003e\u003ed;\n        flws[i].fin=100*m+d;\n    }\n    sort(flws,flws+si);\n    int total=1;\n    int e=301;\n    int s=301;\n    for(int i=0;i\u003csi;i++)\n    {\n    \tif(flws[i].start\u003ee) break;\n    \tif(flws[i].start\u003c=s)\n    \t{\n    \t\tif(flws[i].fin\u003ee) e=flws[i].fin;\n    \t}\n    \telse\n    \t{\n    \t\tif(flws[i].fin\u003e=e)\n    \t\t{\n    \t\t\ts=e;\n    \t\t\te=flws[i].fin;\n    \t\t\ttotal++;\n    \t\t\t\n    \t\t}\n    \t}\n    \tif(e\u003e1130) break;\n    }\n    if(e\u003e1130)\n    {\n    \tcout\u003c\u003ctotal;\n    }\n    else\n    {\n    \tcout\u003c\u003c\"0\";\n    }\n}\n/**************************************************************\n\t문제번호: 4713\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:112 ms\n\t메모리 사용량:2364 kb\n****************************************************************/\n\n"},{"Number":"4713","Time":"2016/08/09","Title":"공주님의 정원","Code":"/**************************************************************\n# 문제 설명 \n 문제3) 공주님의 정원 (중등2)\n오늘은 공주님이 태어난 경사스러운 날이다. 왕은 이 날을 기념하기 위해 늘 꽃이 피어있는 작은 정원을 만들기로 결정했다.\n\n  총  $N$개의 꽃이 있는 데, 꽃은 모두 같은 해에 피어서 같은 해에 진다. 하나의 꽃은 피는 날과 지는 날이 정해져 있다. 예를 들어, $5$월 $8$일 피어서 $6$월 $13$일 지는 꽃은 $5$월 $8$일부터 $6$월 $12$일까지는 꽃이 피어 있고, $6$월 $13$일을 포함하여 이후로는 꽃을 볼 수 없다는 의미이다. (올해는 $4, 6, 9, 11$월은 $30$일까지 있고, $1, 3, 5, 7, 8, 10, 12$월은 $31$일까지 있으며, $2$월은 $28$일까지만 있다.)\n\n  이러한 $N$개의 꽃들 중에서 다음의 두 조건을 만족하는 꽃들을 선택하고 싶다.\n\n1. 공주가 가장 좋아하는 계절인 $3$월 $1$일부터 $11$월 $30$일까지 매일 꽃이 한 가지 이상 피어 있도록 한다.\n\n2. 정원이 넓지 않으므로 정원에 심는 꽃들의 수를 가능한 적게 한다.\n\n $N$개의 꽃들 중에서 위의 두 조건을 만족하는, 즉 $3$월 $1$일부터 $11$월 $30$일까지 매일 꽃이 한 가지 이상 피어 있도록 꽃들을 선택할 때, 선택한 꽃들의 최소 개수를 출력하는 프로그램을 작성하시오.  \n# 입력 \n  첫째 줄에는 꽃들의 총 개수 $N$ ($1 \u003c= N \u003c= 100,000$)이 주어진다.\n다음 $N$개의 줄에는 각 꽃이 피는 날짜와 지는 날짜가 주어진다. 하나의 날짜는 월과 일을 나타내는 두 숫자로 표현된다. 예를 들어서, $3$ $8$ $7$ $31$은 꽃이 $3$월 $8$일에 피어서 $7$월 $31$일에 진다는 것을 나타낸다.  \n# 출력 \n  첫째 줄에 선택한 꽃들의 최소 개수를 출력한다. 만약 두 조건을 만족하는 꽃들을 선택할 수 없다면 $0$을 출력한다. \n# 입력 예시 \n 4\n1 1 5 31\n1 1 6 30\n5 15 8 31\n6 10 12 10 \n# 출력 예시 \n 2 \n# 도움말 \n  \n# 출처 \n 2011 지역본선 초등 \n\n*************************************************************/\n#include \u003ccstdio\u003e \n#include\u003calgorithm\u003e \nusing namespace std; \nint month[13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; \nstruct data{ \nint s,e; \nbool operator \u003c(const data \u0026r)const{ \nif(s==r.s) return e\u003er.e; \nreturn s\u003cr.s; \n} \n}arr[100004]; \nint s[100004],e[100004],cnt=1; \n \nint main() \n{ \nint i,n,sm,sd,em,ed,t=301,tt=301; \n//반복문 i, 곷의 개수, 시작월,시작일, 꽅달, 끝일, 시작점, 끝 점 \nscanf(\"%d\",\u0026n); \nfor(i=0;i\u003cn;i++){ \nscanf(\"%d %d %d %d\",\u0026sm,\u0026sd,\u0026em,\u0026ed); \narr[i].s=sm*100+sd; \narr[i].e=em*100+ed; \n} \nsort(arr,arr+n); //s로 정렬 \nfor(i=0;i\u003cn;i++){ \nif(arr[i].s\u003ett) break; //중간에 꽃이 비어있으면 나가기 \nif(arr[i].s\u003c=t) { //꽃이 시작점보다 적은 동안 \u003c- 조건이라고 정의 \nif(arr[i].e\u003ett) tt=arr[i].e; // 최대한 e를 늘린다. 조건에 만족하는 동안 \n} \nelse{ \nif(arr[i].e\u003ett){ //그 후 조건에 안 맞으면 \nt=tt; //시작점에 끝 점을 넣고 \ntt=arr[i].e; //임의의 끝 점을 정한 후 \ncnt++; //꽃의 개수 증가 \n} \n} \nif(tt\u003e1130) break; //11월 30일 보다 늦으면 나ㄹ가기; \n} \nif(tt\u003e1130) //정상적으로 끝났으면 \nprintf(\"%d\",cnt); \nelse //중간에 꽃이 비었으면 \nprintf(\"0\"); \nreturn 0; \n} \n/**************************************************************\n\t문제번호: 4713\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:60 ms\n\t메모리 사용량:2656 kb\n****************************************************************/\n\n"},{"Number":"4573","Time":"2016/08/08","Title":"내리막 길","Code":"/**************************************************************\n# 문제 설명 \n 문제3) 내리막 길(고등3)\n\n\n  여행을 떠난 영수는 지도를 하나 구하였다. 이 지도는 아래 그림과 같이 직사각형 모양이며 여러 칸으로 나뉘어져 있다. 한 칸은 한 지점을 나타내는데 각 칸에는 그 지점의 높이가 쓰여 있으며, 각 지점 사이의 이동은 지도상에서 상하좌우로 이웃한 곳끼리만 가능하다.\n   \n  현재 제일 왼쪽 위 칸이 나타내는 지점에 있는 영수는 제일 오른쪽 아래 칸이 나타내는 지점으로 가려고 한다. 그런데 가능한 힘을 적게 들이고 싶어 항상 높이가 더 낮은 지점으로만 이동하여 목표 지점까지 가고자 한다. 위와 같은 지도에서는 다음과 같은 세 가지 경로가 가능하다.\n   \n  지도가 주어질 때 이와 같이 제일 왼쪽 위 지점에서 출발하여 제일 오른쪽 아래 지점까지 항상 내리막길로만 이동하는 경로의 개수를 구하는 프로그램을 작성하시오.\n\n \n# 입력 \n 첫째 줄에는 지도의 세로의 크기 M과 가로의 크기 N이 빈칸을 사이에 두고 주어진다. \n이어 다음 M개 줄에 걸쳐 한 줄에 N개씩 위에서부터 차례로 각 지점의 높이가 빈 칸을 사이에 두고 주어진다. M과 N은 각각 500이하의 자연수이고, 각 지점의 높이는 10000이하의 자연수이다.\n \n# 출력 \n 첫째 줄에 이동 가능한 경로의 수 H를 출력한다. 모든 입력에 대하여 H는 10억 이하의 음이 아닌 정수이다.\n \n# 입력 예시 \n 4 5\n50 45 37 32 30\n35 50 40 20 25\n30 30 25 17 28\n27 24 22 15 10 \n# 출력 예시 \n 3 \n# 도움말 \n  \n# 출처 \n 2006 지역본선 고등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003csstream\u003e\n#include \u003cmap\u003e\nusing namespace std;\nint memo[500][500];\nint myMap[500][500];\nint w,h;\nint trace(int x,int y,int hi)\n{\n    if(x\u003c0||x\u003e=w) return 0;\n    if(y\u003c0||y\u003e=h) return 0;\n    if(myMap[y][x]\u003e=hi) return 0;\n    if(y==h-1\u0026\u0026x==w-1) return 1;\n    hi=myMap[y][x];\n    if(!memo[y][x])memo[y][x]=trace(x-1,y,hi)+trace(x+1,y,hi)\n    +trace(x,y-1,hi)+trace(x,y+1,hi);\n    return memo[y][x];\n}\nint main()\n{\n    cin\u003e\u003eh\u003e\u003ew;\n    for(int i=0;i\u003ch;i++)\n    {\n        for(int j=0;j\u003cw;j++)\n        {\n            cin\u003e\u003emyMap[i][j];\n        }\n    }\n    cout\u003c\u003ctrace(0,0,myMap[0][0]+1);\n}\n\n/**************************************************************\n\t문제번호: 4573\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:8 ms\n\t메모리 사용량:3648 kb\n****************************************************************/\n\n"},{"Number":"3704","Time":"2016/08/08","Title":"계단 오르기 2","Code":"/**************************************************************\n# 문제 설명 \n n개의 계단이 있다.\n어떤 사람이 계단을 오르려 하는데 이 사람은 계단을 한번에 1계단 2계단 또는 3계단씩 오를 수 있다.\n이 사람이 계단을 오를수 있는 경우의 수를 1000으로 나눈 나머지를 구하여라 \n# 입력 \n 계단의 수 n이 입력된다. ( 1 \u003c= n \u003c= 100,000 )\n \n# 출력 \n 계단을 오를 수 있는 가지수에 1000으로 나눈 나머지를 출력한다.\n \n# 입력 예시 \n 5 \n# 출력 예시 \n 13 \n# 도움말 \n 5=1+1+1+1+1\n5=1+1+1+2\n5=1+1+2+1\n5=1+2+1+1\n5=2+1+1+1\n5=1+1+3\n5=1+3+1\n5=3+1+1\n5=1+2+2\n5=2+1+2\n5=2+2+1\n5=2+3\n5=3+2\n이렇게 총 13가지 경우가 존재한다. \n# 출처 \n kevin0401 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003csstream\u003e\n#include \u003cmap\u003e\nusing namespace std;\nint total;\nmap\u003cint,int\u003e memo;\nint stair(int n)\n{\n    if(n\u003c0){return 0;};\n    if(memo[n]==0)memo[n]=(stair(n-1)+stair(n-2)+stair(n-3))%1000;\n    return memo[n];\n}\n\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    memo[0]=1;\n    cout\u003c\u003cstair(n);\n}\n\n/**************************************************************\n\t문제번호: 3704\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:296 ms\n\t메모리 사용량:10892 kb\n****************************************************************/\n\n"},{"Number":"3733","Time":"2016/08/06","Title":"우박수 길이 (3n+1) (large)","Code":"/**************************************************************\n# 문제 설명 \n 콜라츠의 추측, 3n+1 문제, 우박수 문제라고 불리는 이 문제는 다음과 같다.\n\n1, 어떤 자연수 n이 입력되면,\n2. n이 홀수이면 3n+1을 하고,\n3. n이 짝수이면 n/2를 한다.\n4. 이 n이 1이 될때까지 2~3과정을 반복한다.\n\n예를 들어 5는 5 → 16 → 8 → 4 → 2 → 1 이 된다.\n여기서 5가 1이되기 위해 6개의 숫자를 나열하게 된다. 이것을 길이라고 하면 5의 길이는 6이된다.\n시작수와 마지막 수가 입력되면 그 두 사이게 길이가 가장긴 우박수와 그 길이를 출력하시오.\n \n# 입력 \n 두 자연수 a, b가 공백으로 분리되어 입력된다. ( 1 \u003c= a \u003c= b \u003c= 10,000,000 ) \n# 출력 \n a에서 b사이에 길이가 가장긴 우박수와 그 길이를 출력한다. 만약 가장 긴 수가 두 개이상인 경우, 작은 숫자를 출력하시오. \n# 입력 예시 \n 1 10 \n# 출력 예시 \n 9 20 \n# 도움말 \n  \n# 출처 \n 유명한 문제 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint memo[10000001];\nlong long total;\nint rain(long long n)\n{\n    total++;\n    if(n==1) return 1;\n    if(n\u003c=10000000)\n        if(memo[n])\n            return memo[n];\n    if(n%2)\n        return rain(n*3+1)+1;\n    else\n        return rain(n/2)+1;\n}\nint main()\n{\n    int a,b;\n    int maxName=0,maxAmount=0;\n    cin\u003e\u003ea\u003e\u003eb;\n    for(int i=1;i\u003c=10000;i++)\n    {\n        memo[i]=rain(i);\n    }\n    for(int i=a;i\u003c=b;i++)\n    {\n        memo[i]=rain(i);\n        if(maxAmount\u003cmemo[i]) maxName=i,maxAmount=memo[i];\n    }\n    cout\u003c\u003cmaxName\u003c\u003c\" \"\u003c\u003cmaxAmount\u003c\u003cendl;\n}\n\n\n/**************************************************************\n\t문제번호: 3733\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:620 ms\n\t메모리 사용량:40760 kb\n****************************************************************/\n\n"},{"Number":"4434","Time":"2016/08/03","Title":"좋은 수열","Code":"/**************************************************************\n# 문제 설명 \n 문제1)\n숫자 1, 2, 3으로만 이루어지는 수열이 있다. 임의의 길이의 인접한 두 개의 부분 수열이 동일한 것이 있으면, 그 수열을 나쁜 수열이라고 부른다. 그렇지 않은 수열은 좋은 수열이다.\n다음은 나쁜 수열의 예이다.\n33\n32121323\n123123213\n다음은 좋은 수열의 예이다.\n2\n32\n32123\n1232123\n길이가 N인 좋은 수열들을 N자리의 정수로 보아 그중 가장 작은 수를 나타내는 수열을 구하는 프로그램을 작성하라. 예를 들면, 1213121과 2123212는 모두 좋은 수열이지만 그 중에서 작은 수를 나타내는 수열 1213121이다.\n \n# 입력 \n 입력은 숫자 N하나로 이루어진다. N은 1 이상 80 이하이다. \n# 출력 \n 첫 번째 줄에 1, 2, 3으로만 이루어져 있는 길이가 N인 좋은 수열들 중에서 가장 작은 수를 나타내는 수열만 출력한다.\n수열을 이루는 1, 2, 3들 사이에는 빈칸을 두지 않는다. \n# 입력 예시 \n 7 \n# 출력 예시 \n 1213121 \n# 도움말 \n  \n# 출처 \n 1997 KOI 중등 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint num[81];\nbool done=false;\nbool co(int start,int start2,int len)\n{\n    int right=0;\n    for(int i=0;i\u003clen;i++)\n    {\n        if(num[start+i]==num[start2+i]) right++;\n    }\n    if(right==len) return false;\n    return true;\n}\nvoid dfs(int n,int fin)\n{\n    if(done) return;\n    for(int i=2;i\u003c=n/2;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            if(j+i+i\u003c=n)\n            {\n                if(!co(j,j+i,i))\n                {\n                    return;\n                }\n            }\n        }\n    }\n    if(n==fin)\n    {\n        for(int i=0;i\u003cn;i++)\n        {\n            cout\u003c\u003cnum[i];\n        }\n        done=true;\n    }\n    for(int i=1;i\u003c=3;i++)\n    {\n        if(i!=num[n-1]||i==0)\n        {\n            num[n]=i;\n            dfs(n+1,fin);\n        }\n    }\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    dfs(0,n);\n\n}\n\n/**************************************************************\n\t문제번호: 4434\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4044","Time":"2016/08/03","Title":"오른편 절단 가능 소수","Code":"/**************************************************************\n# 문제 설명 \n 문제4) 오른편 절단 가능 소수\n\n수학자들에게 소수란 매우 흥미있는 연구 주제이다. 소수(prime number)란 약수가 1과 자기 자신밖에 없는 1보다 큰 자연수를 말한다. 수학자들은 소수를 연구하면서 특이한 소수들을 발견하여 이름을 명명하였다. 메르센 소수, 페르마 소수, 쌍둥이 소수 등이 그 예이다.\n   \n  우리에게는 생소하지만 오른편 절단 가능 소수가 있다. 이 소수는 오른쪽부터 하나씩 제거해도 계속 소수가 되는 소수이다.\n   \n  크기가 네 자리인 7193을 예로 들어보자. 7193은 소수이고, 7193의 오른편 숫자 3을 제거하여 남은 719도 소수이다. 719의 오른편 숫자 9를 제거하여 남은 71도 소수이다. 71의 오른편 숫자 1을 제거하여 남은 7도 소수이다. 따라서 7193은 오른편 절단 가능 소수이다.\n   \n \n# 입력 \n ﻿자연수 N이 입력된다. (1≤N≤10)\n \n# 출력 \n 1. N자리로 이루어진 오른편 절단 가능 소수들을 한 줄에 하나씩 오름차순으로 출력한다.\n2. 마지막 줄에는 출력된 오른편 절단 가능 소수들의 개수를 출력한다 \n# 입력 예시 \n 2 \n# 출력 예시 \n 23\n29\n31\n37\n53\n59\n71\n73\n79\n9 \n# 도움말 \n  \n# 출처 \n 2012 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint total;\nbool isPrime(int n)\n{\n    for(int i=2;i*i\u003c=n;i++)\n    {\n        if(n%i==0) return false;\n    }\n    return true;\n}\nvoid dfs(int n,int len)\n{\n    if(len==0){\n        total++;\n        cout\u003c\u003cn\u003c\u003cendl;\n    }\n    for(int i=1;i\u003c=9;i+=2)\n    {\n        if(i==5) continue;\n        int t=n*10+i;\n        if(isPrime(t)) dfs(t,len-1);\n    }\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    dfs(2,n-1);\n    dfs(3,n-1);\n    dfs(5,n-1);\n    dfs(7,n-1);\n    cout\u003c\u003ctotal;\n}\n\n/**************************************************************\n\t문제번호: 4044\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4027","Time":"2016/08/01","Title":"저울 추","Code":"/**************************************************************\n# 문제 설명 \n [문제2] 저울추 (18점, 제한시간 1초)\n평형저울을 이용하여 1kg 이하의 물건의 무게를 재려고 한다. 준비되어 있는 추는 1g, 3g, 9g, 27g, 81g, 243g, 729g과 같이 7개의 추뿐이다. 평형저울의 양쪽 접시에 물건과 추를 적절히 놓음으로서 물건의 무게를 잴 수 있는데, 예를 들어, 25g의 물건을 재기 위해서는 다음과 같이 저울에 올려놓으면 된다.\n   \n  물건(25g) 3g          1g 27g \n   |_____________________|\n   \n물건의 무게가 입력되었을 때 양쪽의 접시에 어떤 추들을 올려놓아야 평형을 이루는지를 결정하는 프로그램을 작성하시오.\n \n# 입력 \n 1. 물건의 무게를 나타내는 하나의 정수 n이 입력된다. (1≤n≤1,000)\n2. n은 물건의 무게가 몇 그람인지를 나타낸다.\n \n# 출력 \n 1. 저울의 왼쪽 접시와 오른쪽 접시에 올려지는 추를 0으로 구분하여 출력한다.\n2. 각 접시에 올려지는 추들은 무게가 가벼운 추부터 하나의 공백으로 구분하여 출력한다.\n3. 물건의 무게를 왼쪽 접시의 처음에 표시한다.\n \n# 입력 예시 \n 25 \n# 출력 예시 \n 25 3 0 1 27 \n# 도움말 \n \n    \n        \n            \n            40  -\u003e\n            \n            \n            40 0 1 3 9 27\n            \n        \n        \n            \n            5  -\u003e\n            \n            \n            5 1 3 0 9\n            \n        \n    \n\n \n# 출처 \n 2009 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003csstream\u003e\nusing namespace std;\n\nint quit=false;\nstring itos(int i)\n{\n    stringstream ss;\n    ss\u003c\u003ci;\n    return ss.str();\n}\nint* intcpy(int* arr)\n{\n    int* narr=new int[7];\n    for(int i=0;i\u003c7;i++)\n    {\n        narr[i]=arr[i];\n    }\n    return narr;\n}\nvoid dfs(int w,int w2,int weights[],string sw,string sw2)\n{\n    if(quit) return;\n    if(w==w2)\n    {\n        cout\u003c\u003csw\u003c\u003c\"0 \"\u003c\u003csw2;\n        quit=true;\n        return;\n    }\n    for(int i=0;i\u003c7;i++)\n    {\n        if(weights[i]!=0)\n        {\n            int* nweights=intcpy(weights);\n            nweights[i]=0;\n            dfs(w+weights[i],w2,nweights,sw+itos(weights[i])+\" \",sw2);\n            dfs(w,w2+weights[i],nweights,sw,sw2+itos(weights[i])+\" \");\n            delete nweights;\n        }\n    }\n}\nint main()\n{\n   int w;\n   cin\u003e\u003ew;\n   int arr[]={ 1, 3, 9, 27, 81, 243, 729};\n   dfs(w,0,arr,itos(w)+\" \",\"\");\n   return 0;\n}\n\n/**************************************************************\n\t문제번호: 4027\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:564 ms\n\t메모리 사용량:1728 kb\n****************************************************************/\n\n"},{"Number":"3515","Time":"2016/07/30","Title":"사탕 줍기 2","Code":"/**************************************************************\n# 문제 설명 \n 지원이는 사탕을 사기위해 새로 개업한 사탕가게에 갔다.\n사탕가게 아저씨는 격자판에 사탕을 각각 담아 두고, 첫 손님 기념으로 다음과 같은 제안을 하였다.\n\"각 행과 열에 여러개의 사탕이 있는데, 각 행과 열이 겹치지 않게 사탕을 가져가라. \"\n즉, $1$행 $1$열을 선택했다면 $2$행 부터는 $1$열을 선택하지 못한다.\n지원이는 머리를 써서 최대한 많은 수의 사탕을 가지고 싶어한다.\n지원이가 가질 수 있는 최대 사탕수를 구하시오.\n예)\n\n    \n        \n            3\n            1\n            4\n        \n        \n            2\n            5\n            4\n        \n        \n            1\n            4\n            1\n        \n    \n\n첫 행에 $3$, 둘째 행에 $4$, 셋째 행에 $4$를 선택하면 최대 사탕수는 $11$이 된다. \n# 입력 \n 첫 행에 격자판의 크기 $N$이 입력된다.$(N\u003c=10)$\n둘째 행부터 $N+1$행까지 격자판의 정보인 사탕수가 입력된다.\n \n# 출력 \n 지원이가 가질 수 있는 최대 사탕수를 출력한다.\n \n# 입력 예시 \n 3\n3 1 4\n2 5 4\n1 4 1 \n# 출력 예시 \n 11 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nint n;\nint maximum;\nint arr[10][10]={0};\nint* intcpy(int* arr)\n{\n    int* d=new int[10];\n    for(int i=0;i\u003c10;i++)\n    {\n        d[i]=arr[i];\n    }\n    return d;\n}\nvoid dfs(int i,int sum,int* d)\n{\n    if(i==n)\n    {\n        if(maximum\u003csum)\n        {\n            maximum=sum;\n        }\n        return;\n    }\n    for(int j=0;j\u003cn;j++)\n    {\n        if(d[j]==0)\n        {\n            int* newD=intcpy(d);\n            newD[j]=1;\n            dfs(i+1,sum+arr[i][j],newD);\n            delete newD;\n        }\n    }\n}\nint main()\n{\n    cin\u003e\u003en;\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            cin\u003e\u003earr[i][j];\n        }\n    }\n    int* d=new int[10];\n    memset(d,0,sizeof(int)*10);\n    dfs(0,0,d);\n    cout\u003c\u003cmaximum;\n}\n\n/**************************************************************\n\t문제번호: 3515\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:864 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3540","Time":"2016/07/30","Title":"0 만들기 게임","Code":"/**************************************************************\n# 문제 설명 \n 1~N까지 차례대로 적힌 수열이 있다.\n수들 사이에 \" \", \"+\", \"-\" 중 하나를 집어 넣어서 전체 계산결과 0이 되도록 만들어보자.\n단, 첫 수앞에는 연산을 넣을 수 없으며, 공백을 넣게 되면 이전수와 연결된 숫자가 된다.즉 2 3이면 23으로 처리된다.)\nN을 입력받아서 0을 만드는 수식을 모두 출력하시오.\n\n \n# 입력 \n 정수 N이 입력된다.( 3 \u003c= N \u003c= 9 )\n \n# 출력 \n 0으로 만드는 모든 수식을 출력한다.\n출력 순서는 공백, +, - 순서로 출력한다.\n \n# 입력 예시 \n 7 \n# 출력 예시 \n 1+2-3+4-5-6+7\n1+2-3-4+5+6-7\n1-2 3+4+5+6+7\n1-2 3-4 5+6 7\n1-2+3+4-5+6-7\n1-2-3-4-5+6+7 \n# 도움말 \n  \n# 출처 \n USACO \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003csstream\u003e\n#include \u003cstring.h\u003e\n#include \u003cvector\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nstring itos(int n)\n{\n    stringstream ss;\n    ss\u003c\u003cn;\n    return ss.str();\n}\nclass unit\n{\npublic:\n    unit(int n):_num(true),_n(n){};\n    unit(char c):_num(false),_c(c){};\n    ~unit(){};\n    bool isNum() const{return _num;};\n    int getNum() const{return _n;};\n    char getChar() const{return _c;};\n    void attach(int n){_n=_n*10+n;};\nprivate:\n    int _n;\n    char _c;\n    bool _num;\n};\nclass sick\n{\npublic:\n    sick(){};\n    ~sick(){};\n    const sick operator+(int n)\n    {\n        sick s=*this;\n        if(_arr.size()==0)\n        {\n            s.push(n);\n            return s;\n        }\n        if(s.last().isNum())\n        {\n            s.last().attach(n);\n        }\n        else\n        {\n            s.push(n);\n        }\n        return s;\n    }\n    const sick operator+(char c)\n    {\n        sick s=*this;\n        s.push(c);\n        return s;\n    }\n    void push(int n)\n    {\n        _arr.push_back(n);\n    }\n    void push(char c)\n    {\n        _arr.push_back(c);\n    }\n    unit\u0026 last()\n    {\n        return _arr[_arr.size()-1];\n    }\n    int sum()\n    {\n        int total=_arr[0].getNum();\n        for(int i=1;i\u003c_arr.size();i++)\n        {\n            if(!_arr[i].isNum())\n            {\n                char c=_arr[i].getChar();\n                if(c=='+')\n                {\n                    total+=_arr[i+1].getNum();\n                }\n                else\n                {\n                    total-=_arr[i+1].getNum();\n                }\n            }\n        }\n        return total;\n    }\nprivate:\n    vector\u003cunit\u003e _arr;\n};\nint end2;\nvector\u003cstring\u003e ar2;\nvector\u003csick\u003e ar;\nvoid dfs(int i,sick s,string s2)\n{\n    s=s+i;\n    s2+=itos(i);\n    if(end2==i)\n    {\n        ar.push_back(s);\n        ar2.push_back(s2);\n        return;\n    }\n    dfs(i+1,s+'+',s2+'+');\n    dfs(i+1,s+'-',s2+'-');\n    dfs(i+1,s,s2+' ');\n}\nint main()\n{\n    cin\u003e\u003eend2;\n    dfs(1,sick(),\"\");\n    vector\u003cstring\u003e rights;\n    for(int i=0;i\u003car.size();i++)\n    {\n        if(ar[i].sum()==0)\n        {\n            rights.push_back(ar2[i]);\n        }\n    }\n    sort(rights.begin(),rights.end());\n    for(int i=0;i\u003crights.size();i++)\n    {\n        cout\u003c\u003crights[i]\u003c\u003cendl;\n    }\n}\n\n\n/**************************************************************\n\t문제번호: 3540\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:40 ms\n\t메모리 사용량:3296 kb\n****************************************************************/\n\n"},{"Number":"1047","Time":"2016/07/27","Title":"[기초-비트시프트연산] 정수 한 개 입력받아 2 곱해 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 한 개를 입력했을 때 2를 곱해 출력하는 프로그램을 작성해보자.\n(단, -1073741824 ~ 1073741823)\n\n \n# 입력 \n 정수 한 개가 입력된다.\n(단, -1073741824 ~ 1073741823)\n \n# 출력 \n 입력 받은 정수 * 2의 계산 결과가 출력된다.\n \n# 입력 예시 \n 1024 \n# 출력 예시 \n 2048 \n# 도움말 \n 정수*2 의 결과를 출력해도 되지만,\n비트시프트연산자 \u003c\u003c, \u003e\u003e 는 정수를 2배로 곱하거나 나누어 계산해준다.\n\n2진수 형태로 저장되어 있는 값들을 왼쪽(\u003c\u003c)이나 오른쪽(\u003e\u003e)으로 지정한 비트만큼 이동시켜 2배 만큼 늘어나거나 반으로 줄어드는데\n\n왼쪽 비트시프트(\u003c\u003c)가 될 때에는 오른쪽에 0 이 주어진 수 만큼 추가되고,\n오른쪽 비트시프트(\u003e\u003e)가 될 때에는 왼쪽에 0(0 또는 양의 정수인 경우) 이나 1(음의 정수인 경우)이 주어진 수 만큼 추가된다.\n\n범위(32비트)를 넘어가 이동되는 비트는 삭제된다.\n\n[예시]\nint a=10;\nprintf(\"%d\", a\u003c\u003c1); //20 이 출력된다.\nprintf(\"%d\", a\u003e\u003e1); //5 가 출력된다.\nprintf(\"%d\", a\u003c\u003c2); //40 이 출력된다.\nprintf(\"%d\", a\u003e\u003e2); //2 가 출력된다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a;\n    cin\u003e\u003ea;\n    cout\u003c\u003ca*2;\n}\n\n/**************************************************************\n\t문제번호: 1047\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1047","Time":"2016/07/27","Title":"[기초-비트시프트연산] 정수 한 개 입력받아 2 곱해 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 한 개를 입력했을 때 2를 곱해 출력하는 프로그램을 작성해보자.\n(단, -1073741824 ~ 1073741823)\n\n \n# 입력 \n 정수 한 개가 입력된다.\n(단, -1073741824 ~ 1073741823)\n \n# 출력 \n 입력 받은 정수 * 2의 계산 결과가 출력된다.\n \n# 입력 예시 \n 1024 \n# 출력 예시 \n 2048 \n# 도움말 \n 정수*2 의 결과를 출력해도 되지만,\n비트시프트연산자 \u003c\u003c, \u003e\u003e 는 정수를 2배로 곱하거나 나누어 계산해준다.\n\n2진수 형태로 저장되어 있는 값들을 왼쪽(\u003c\u003c)이나 오른쪽(\u003e\u003e)으로 지정한 비트만큼 이동시켜 2배 만큼 늘어나거나 반으로 줄어드는데\n\n왼쪽 비트시프트(\u003c\u003c)가 될 때에는 오른쪽에 0 이 주어진 수 만큼 추가되고,\n오른쪽 비트시프트(\u003e\u003e)가 될 때에는 왼쪽에 0(0 또는 양의 정수인 경우) 이나 1(음의 정수인 경우)이 주어진 수 만큼 추가된다.\n\n범위(32비트)를 넘어가 이동되는 비트는 삭제된다.\n\n[예시]\nint a=10;\nprintf(\"%d\", a\u003c\u003c1); //20 이 출력된다.\nprintf(\"%d\", a\u003e\u003e1); //5 가 출력된다.\nprintf(\"%d\", a\u003c\u003c2); //40 이 출력된다.\nprintf(\"%d\", a\u003e\u003e2); //2 가 출력된다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a;\n    cin\u003e\u003ea;\n    cout\u003c\u003ca*2;\n}\n\n/**************************************************************\n\t문제번호: 1047\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1046","Time":"2016/07/27","Title":"[기초-산술연산] 정수 세 개 입력받아 합과 평균 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 세 개를 입력받아 합과 평균을 출력하는 프로그램을 작성해보자.\n(단, -2147483648 ~ 2147483647)\n \n# 입력 \n 정수 세 개가 공백을 두고 입력된다.\n(단, -2147483648 ~ 2147483647)\n \n# 출력 \n 입력 받은 정수 세 개의 합과 평균을 줄을 바꿔 출력한다.\n\n평균은 소수점 이하 둘째 자리에서 반올림하여 첫째 자리까지 출력한다.\n \n# 입력 예시 \n 1 2 3 \n# 출력 예시 \n 6\n2.0 \n# 도움말 \n  \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long a,b,c;\n    cin\u003e\u003ea\u003e\u003eb\u003e\u003ec;\n    cout\u003c\u003ca+b+c\u003c\u003cendl;\n    printf(\"%.1f\",(double)(a+b+c)/3);\n}\n\n/**************************************************************\n\t문제번호: 1046\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1045","Time":"2016/07/27","Title":"[기초-산술연산] 정수 두 개 입력받아 자동 계산하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 두 개(a, b)를 입력받아 합, 차, 곱, 몫, 나머지, 나눈값을 자동으로 계산해보자.\n(단 입력되는 정수 a, b의 범위는 0 ~ 2147483647이고, b는 0이 아니다.)\n \n# 입력 \n 정수 두 개(a, b)가 공백을 두고 입력된다.\n(단, a, b의 범위는 0 ~ 2147483647이고, b는 0이 아니다.)\n\n \n# 출력 \n 첫 줄에 합\n둘째 줄에 차(a-b)\n셋째 줄에 곱,\n넷째 줄에 a를 b로 나눈 몫,\n다섯째 줄에 a를 b로 나눈 나머지,\n여섯째 줄에 a를 b로 나눈값(실수, 소수점 셋째 자리에서 반올림해 둘째 자리까지 출력)\n을 출력한다.\n \n# 입력 예시 \n 10 3 \n# 출력 예시 \n 13\n7\n30\n3\n1\n3.33 \n# 도움말 \n  \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003ca+b\u003c\u003cendl;\n    cout\u003c\u003ca-b\u003c\u003cendl;\n    cout\u003c\u003ca*b\u003c\u003cendl;\n    cout\u003c\u003ca/b\u003c\u003cendl;\n    cout\u003c\u003ca%b\u003c\u003cendl;\n    printf(\"%.2f\",(double)a/b);\n}\n\n/**************************************************************\n\t문제번호: 1045\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1044","Time":"2016/07/27","Title":"[기초-산술연산] 정수 한 개 입력받아 1 더해 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수를 한 개 입력받아 1을 더해 출력하는 프로그램을 작성해보자.\n(단, 정수는 -2147483648 ~ 2147483647 의 범위로 입력된다.)\n\n주의 : 계산되고 난 후의 데이터 범위에 주의한다.\n \n# 입력 \n 정수 한 개가 입력된다.\n(단, -2147483648 ~ 2147483647 의 범위로 입력된다.)\n \n# 출력 \n 입력된 정수에 1을 더해 출력한다.\n \n# 입력 예시 \n 2147483647 \n# 출력 예시 \n 2147483648 \n# 도움말 \n 어떤 변수(a)에 값을 저장한 후  a+1 의 값을 출력할 수도 있고,\n++a 후 출력할 수도 있다.\n\n++a, --a, a++, a-- 와 같이 어떤 변수의 앞이나 뒤에 붙여 변수에 저장되어 있는 값을 1씩 더하거나 빼주는 연산자를 증감연산자라고 한다.\n\n증감연산자를 변수 앞에 붙이면 그 변수를 사용하기 전에 증감을 먼저 수행하고,\n\n증감연산자를 변수 뒤에 붙이면 일단 변수에 저장되어 있는 값을 먼저 사용하고 난 후에 증감을 수행한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long a;\n    cin\u003e\u003ea;\n    cout\u003c\u003ca+1;\n}\n\n/**************************************************************\n\t문제번호: 1044\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1043","Time":"2016/07/27","Title":"[기초-산술연산] 정수 두 개 입력받아 나눈 나머지 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 두 개(a, b) 를 입력받아 a를 b로 나눈 나머지를 출력하는 프로그램을 작성해보자.\n(단, 두 개의 정수 a, b의 범위는 0 ~ 2147483647이고, b는 0이 아니다.)\n \n# 입력 \n 정수 두 개(a, b)가 공백을 두고 입력된다.\n(단, a, b의 범위는 0 ~ 2147483647이고, b는 0이 아니다.)\n \n# 출력 \n a 를 b로 나눈 나머지를 출력한다.\n \n# 입력 예시 \n 3 7 \n# 출력 예시 \n 3 \n# 도움말 \n C언어에서 a%b 연산의 결과는 a를 b로 나눈 나머지가 계산된다.\n\n% 연산자(modulus, mod 연산)는 수학자 가우스가 생각해낸 연산으로 어떤 정수를 다른 정수로 나누고 난 후 남는 나머지를 계산한다.\n단, 음이 아닌 정수에 대해서만 연산할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003ca%b;\n}\n\n/**************************************************************\n\t문제번호: 1043\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1043","Time":"2016/07/27","Title":"[기초-산술연산] 정수 두 개 입력받아 나눈 나머지 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 두 개(a, b) 를 입력받아 a를 b로 나눈 나머지를 출력하는 프로그램을 작성해보자.\n(단, 두 개의 정수 a, b의 범위는 0 ~ 2147483647이고, b는 0이 아니다.)\n \n# 입력 \n 정수 두 개(a, b)가 공백을 두고 입력된다.\n(단, a, b의 범위는 0 ~ 2147483647이고, b는 0이 아니다.)\n \n# 출력 \n a 를 b로 나눈 나머지를 출력한다.\n \n# 입력 예시 \n 3 7 \n# 출력 예시 \n 3 \n# 도움말 \n C언어에서 a%b 연산의 결과는 a를 b로 나눈 나머지가 계산된다.\n\n% 연산자(modulus, mod 연산)는 수학자 가우스가 생각해낸 연산으로 어떤 정수를 다른 정수로 나누고 난 후 남는 나머지를 계산한다.\n단, 음이 아닌 정수에 대해서만 연산할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003ca%b;\n}\n\n/**************************************************************\n\t문제번호: 1043\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1042","Time":"2016/07/27","Title":"[기초-산술연산] 정수 두 개 입력받아 나눈 몫 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 두 개(a, b) 를 입력받아 a를 b로 나눈 몫을 출력하는 프로그램을 작성해보자.\n(단, 입력되는 두 개의 정수 a, b의 범위는 -2147483648 ~ 2147483647이고, b는 0이 아니다.)\n \n# 입력 \n 정수 두 개(a, b)가 공백을 두고 입력된다.\n(단, a, b의 범위는 -2147483648 ~  2147483647이고, b는 0이 아니다.)\n \n# 출력 \n a를 b로 나누었을 때의 몫을 정수형태로 출력한다. \n예를 들어 $5 \\div 2 = 2.5$ 인경우, 2를 출력한다.\n \n# 입력 예시 \n 1 3 \n# 출력 예시 \n 0 \n# 도움말 \n C언어에서 a/b 연산의 결과는 a를 b로 나눈 몫이 계산된다.\n\n실수/정수, \n정수/실수, \n(float)정수/정수, \n정수/(float)정수 \n의 연산은 나눈 결과가 실수로 계산된다.\n\n(float)(정수/정수)는 정수/정수의 결과인 정수를 실수형(float)로 바꾸는 것으로, 정수가 실수 형태로 변환되는 것이니 주의한다.\n\n정수/실수... 에서 계산 결과가 실수형으로 바뀌는 것과 같이 계산 결과의 데이터형이 자동으로 바뀌는 것을 묵시적 (데이터)형 변환이라고 하고,\n\n\"(데이터형)변수또는값\" 과 같이 어떤 값이나 결과의 데이터형을 바꾸어주는 것을 명시적 (데이터)형 변환이라고 한다.\n\nint a;\nscanf(\"%d\", \u0026a);\nprintf(\"%f\", (float)a);\n\n와 같이 실행하면 정수로 저장되어있는 값을 실수형(float)으로 변환하여 출력한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003ca/b;\n}\n\n/**************************************************************\n\t문제번호: 1042\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1041","Time":"2016/07/27","Title":"[기초-산술연산] 문자 한 개 입력받아 다음 문자 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 영문자 한 개를 입력받아, 그 다음 문자를 출력하는 프로그램을 작성해보자.\n\n영문자 '$A$'의 다음 문자는 '$B$'이고, 문자 '$0$'의 다음 문자는 '$1$'이다.\n \n# 입력 \n 영문자 한 개가 입력된다.\n \n# 출력 \n 입력된 문자의 아스키코드 값 바로 다음 코드 값에 해당하는 문자를 출력한다.\n \n# 입력 예시 \n a \n# 출력 예시 \n b \n# 도움말 \n 숫자는 수를 표현하는 문자로서 '$0$' 은 문자 그 자체를 의미하고, $0$은 값을 의미한다.\n\n아스키문자표에서 '$A$'는 $10$진수 $65$로 저장되고 '$B$'는 $10$진수 $66$으로 저장된다. 문자도 덧셈 연산이 된다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    char a;\n    cin\u003e\u003ea;\n    printf(\"%c\",a+1);\n}\n\n/**************************************************************\n\t문제번호: 1041\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1040","Time":"2016/07/27","Title":"[기초-산술연산] 정수 한 개 입력받아 부호 바꿔 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 입력된 정수의 부호를 바꿔 출력하는 프로그램을 작성해보자.\n(단, -2147483647 ~ 2147483647 범위의 정수가 입력된다.)\n \n# 입력 \n 정수 한 개가 입력된다.\n \n# 출력 \n 입력 받은 정수의 부호를 바꿔 출력한다.\n \n# 입력 예시 \n -1 \n# 출력 예시 \n 1 \n# 도움말 \n 단항 연산자인 -(negative)를 변수 앞에 붙이면 부호가 반대로 바뀌어 계산된다.\n\n[예시]\nint a;\nscanf(\"%d\", \u0026a);\nprintf(\"%d\", -a);\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long a;\n    cin\u003e\u003ea;\n    printf(\"%d\",-a);\n}\n\n/**************************************************************\n\t문제번호: 1040\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1039","Time":"2016/07/27","Title":"[기초-산술연산] 정수 두 개 입력받아 합 출력하기2","Code":"/**************************************************************\n# 문제 설명 \n 정수 $2$개를 입력받아 합을 출력하는 프로그램을 작성해보자.\n(단, 입력되는 정수는 $-2147483648 \\sim 2147483647$ 이다.)\n \n# 입력 \n 두 개의 정수가 공백으로 구분되어 입력된다.\n \n# 출력 \n 입력 받은 두 정수의 합을 출력한다.\n \n# 입력 예시 \n 2147483647 2147483647 \n# 출력 예시 \n 4294967294 \n# 도움말 \n + 연산자를 사용하면 된다.\n단, 계산된 결과가 int 데이터형의 표현 범위를 넘어가기 때문에 다른 데이터형을 사용해야 한다.\n\n[주의]\nint 데이터형은 %d로 입출력하고,\nlong long int 데이터형은 %lld로 입출력한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003ca+b;\n}\n\n/**************************************************************\n\t문제번호: 1039\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1038","Time":"2016/07/27","Title":"[기초-산술연산] 정수 두 개 입력받아 합 출력하기1","Code":"/**************************************************************\n# 문제 설명 \n 정수 2개를 입력받아 합을 출력하는 프로그램을 작성해보자.\n(단, 입력되는 정수는 -1073741824 ~ 1073741824 이다.)\n \n# 입력 \n 두 개의 정수가 공백으로 구분되어 입력된다.\n\n** 주의 : 계산의 결과가 int  데이터형의 표현 범위로 가능한지를 생각해 보아야 한다.\n \n# 출력 \n 입력 받은 두 정수의 합을 출력한다.\n \n# 입력 예시 \n 123 -123 \n# 출력 예시 \n 0 \n# 도움말 \n + 연산자를 사용하면 된다.\n\n[예시]\nprintf(\"%d\", a+b);\n\n일반적인 사칙연산을 위한 연산자는 +, -, *, / 를 사용한다.\n(하지만, 나누기 연산자인 '/' 는 약간 다른 의미를 가진다.)\n단, 계산된 결과가 int 데이터형의 범위를 벗어난다면 다른 데이터형을 사용해야 한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003ca+b;\n}\n\n/**************************************************************\n\t문제번호: 1038\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1037","Time":"2016/07/27","Title":"[기초-출력변환] 정수 한 개 입력받아 아스키 문자로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 10진 정수 한 개를 입력받아 아스키문자로 출력하는 프로그램을 작성해보자.\n(단, 0 ~ 255 범위의 정수만 입력된다.)\n \n# 입력 \n 10진수 1개\n(0 ~ 255 범위)\n \n# 출력 \n 입력된 10진수에 해당되는 아스키 문자 1개\n \n# 입력 예시 \n 65 \n# 출력 예시 \n A \n# 도움말 \n  \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    char n;\n    scanf(\"%d\",\u0026n);\n    printf(\"%c\",n);\n}\n\n/**************************************************************\n\t문제번호: 1037\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1036","Time":"2016/07/27","Title":"[기초-출력변환] 영문자 한 개 입력받아 10진수로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 영문자 한 개를 입력받아 아스키코드 10진수값으로 출력하는 프로그램을 작성해보자.\n \n# 입력 \n 영문자 한 개가 입력된다.\n \n# 출력 \n 입력 받은 문자에 해당되는 아스키코드값을 10진수로 출력한다.\n \n# 입력 예시 \n A \n# 출력 예시 \n 65 \n# 도움말 \n 아스키(ASCII, 미국표준코드, American Standard Code for Information Interchange) 코드표는 영문자, 특수문자 등을 사용할 때 사용하는 표준 코드이다.\n\n컴퓨터로 저장되는 모든 데이터는 2진 정수화되어 저장되는데, 영문자와 특수기호 등을 저장하는 방법으로 아스키코드를 일반적으로 사용한다.\n\n예를 들어 영문 대문자 'A'는 10진수 65에 해당하는 2진수 값으로 저장된다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    char n;\n    scanf(\"%c\",\u0026n);\n    printf(\"%d\",n);\n}\n\n/**************************************************************\n\t문제번호: 1036\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1035","Time":"2016/07/27","Title":"[기초-출력변환] 16진 정수 한 개 입력받아 8진수로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 16진수로 입력된 정수 한 개를 8진수로 바꾸어 출력하는 프로그램을 작성해보자.\n \n# 입력 \n 16진수 한 개가 입력된다.\n(단, 16진수는 숫자 및 영문 소문자로 입력된다.)\n \n# 출력 \n 입력 받은 16진수를 8진수로 바꾸어 출력한다.\n \n# 입력 예시 \n f \n# 출력 예시 \n 17 \n# 도움말 \n int n;\nscanf(\"%x\", \u0026n); //소문자로 16진수 입력\nprintf(\"%o\", n);\n\n\n한편, C언어에서 소스 코드 작성시 0x으로 시작하는 수는 16진수로 인식된다.\n\n또한 소스코드 내에서 //로 시작하면 1줄 설명을 넣을 수 있다.\n\n여러 줄을 설명(주석) 처리할 경우 /* 로 시작해 */로 끝나는 사이에 작성할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long long n;\n    scanf(\"%x\",\u0026n);\n    printf(\"%o\",n);\n}\n\n/**************************************************************\n\t문제번호: 1035\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1034","Time":"2016/07/27","Title":"[기초-출력변환] 8진 정수 한 개 입력받아 10진수로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 8진수로 입력된 한 개의 정수를 10진수로 바꾸어 출력하는 프로그램을 작성해보자.\n \n# 입력 \n 8진수 한 개가 입력된다.\n \n# 출력 \n 입력 받은 8진수를 10진수로 바꾸어 출력한다.\n \n# 입력 예시 \n 13 \n# 출력 예시 \n 11 \n# 도움말 \n int n;\nscanf(\"%o\", \u0026n);\nprintf(\"%d\", n);\n\n(한편, C언어에서 소스 코드 작성시 0으로 시작하는 수는 8진수로 인식된다.)\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long long n;\n    scanf(\"%o\",\u0026n);\n    printf(\"%d\",n);\n}\n\n/**************************************************************\n\t문제번호: 1034\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1033","Time":"2016/07/27","Title":"[기초-출력변환] 10진 정수 한 개 입력받아 16진수로 출력하기2","Code":"/**************************************************************\n# 문제 설명 \n 10진수를 입력받아 16진수(hexadecimal)로 출력하는 프로그램을 작성해보자.\n \n# 입력 \n 10진수 한 개가 입력된다.\n \n# 출력 \n 입력 받은 10진수를 16진수로 바꾸어 출력한다.\n \n# 입력 예시 \n 255 \n# 출력 예시 \n FF \n# 도움말 \n %d(10진수 형태)로 입력 받고\n%X로 출력하면 16진수(hexadecimal) 형태로 대문자로 출력된다.\n\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long long n;\n    cin\u003e\u003en;\n    printf(\"%X\",n);\n}\n\n/**************************************************************\n\t문제번호: 1033\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1032","Time":"2016/07/27","Title":"[기초-출력변환] 10진 정수 한 개 입력받아 16진수로 출력하기1","Code":"/**************************************************************\n# 문제 설명 \n 10진수를 입력받아 16진수(hexadecimal)로 출력하는 프로그램을 작성해보자.\n \n# 입력 \n \n10진수 1개가 입력된다.\n \n# 출력 \n 입력 받은 10진수를 16진수로 바꾸어 출력한다.\n \n# 입력 예시 \n 255 \n# 출력 예시 \n ff \n# 도움말 \n %d(10진수 형태)로 입력 받고\n%x로 출력하면 16진수(hexadecimal) 형태로 소문자로 출력된다.\n\n10진법은 한 자리에 10개(0 1 2 3 4 5 6 7 8 9) 문자 중 한 개를 사용한다.\n\n16진법은 한 자리에 16개(0 1 2 3 4 5 6 7 8 9 a b c d e f) 문자 중 한 개를 사용한다.\n\n16진법의 a는 10진법의 10, b는 11, c는 12 ... 와 같다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long long n;\n    cin\u003e\u003en;\n    printf(\"%x\",n);\n}\n\n/**************************************************************\n\t문제번호: 1032\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1031","Time":"2016/07/27","Title":"[기초-출력변환] 10진수 한 개 입력받아 8진수로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 10진수를 입력받아 8진수로 출력하는 프로그램을 작성해보자.\n \n# 입력 \n 10진수가 1개 입력된다.\n(단, 입력되는 정수는 int 범위이다.)\n \n# 출력 \n 입력 받은 10진수를 8진수로 바뀌어 출력한다.\n \n# 입력 예시 \n 10 \n# 출력 예시 \n 12 \n# 도움말 \n %d(10진수 형태)로 입력받고,\n\n%o 를 사용하여 출력하면 8진수(octal)로 출력할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long long n;\n    cin\u003e\u003en;\n    printf(\"%o\",n);\n}\n\n/**************************************************************\n\t문제번호: 1031\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1031","Time":"2016/07/27","Title":"[기초-출력변환] 10진수 한 개 입력받아 8진수로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 10진수를 입력받아 8진수로 출력하는 프로그램을 작성해보자.\n \n# 입력 \n 10진수가 1개 입력된다.\n(단, 입력되는 정수는 int 범위이다.)\n \n# 출력 \n 입력 받은 10진수를 8진수로 바뀌어 출력한다.\n \n# 입력 예시 \n 10 \n# 출력 예시 \n 12 \n# 도움말 \n %d(10진수 형태)로 입력받고,\n\n%o 를 사용하여 출력하면 8진수(octal)로 출력할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long long n;\n    cin\u003e\u003en;\n    printf(\"%o\",n);\n}\n\n/**************************************************************\n\t문제번호: 1031\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1030","Time":"2016/07/27","Title":"[기초-데이터형] 정수 한 개 입력받아 그대로 출력하기3","Code":"/**************************************************************\n# 문제 설명 \n 정수 한 개를 입력받아 그대로 출력해보자.\n(단, 입력되는 정수의 범위는 –9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 이다.)\n \n# 입력 \n 정수 한 개가 입력된다.\n(단, 입력되는 정수의 범위는 –9223372036854775808 ~ 9223372036854775807 이다.)\n \n# 출력 \n 입력된 정수가 그대로 출력된다.\n \n# 입력 예시 \n -2147483649 \n# 출력 예시 \n -2147483649 \n# 도움말 \n -2147483648 ~ +2147483647 범위의 정수를 저장하고 처리하기 위해서는 int 데이터형을 사용해 변수를 선언하면된다.\n(int 로 선언하고 %d나 %i 로 입력 받거나 출력하면 된다.)\n\n하지만 이 범위를 넘어가는 정수를 저장하기 위해서는 보다 큰 범위를 저장할 수 있는 다른 데이터형을 사용해야 정상적으로 저장시킬 수 있다.\n\nlong long int 데이터형을 사용하면 –9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807 범위의 정수를 저장할 수 있다.\n\n[예시]\n\nlong long int n;\nscanf(\"%lld\", \u0026n);\nprintf(\"%lld\", n);\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long long n;\n    cin\u003e\u003en;\n    cout\u003c\u003cn;\n}\n\n/**************************************************************\n\t문제번호: 1030\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1029","Time":"2016/07/27","Title":"[기초-데이터형] 실수 한 개 입력받아 그대로 출력하기2","Code":"/**************************************************************\n# 문제 설명 \n 실수 한 개를 입력받아 그대로 출력해보자.\n(단, 입력되는 실수의 범위는 +- 1.7*10^-308 ~ 1.7*10^308 이다.)\n \n# 입력 \n 소수점 이하 자리수가 11개 이하인 실수 한 개가 입력된다.\n(단, 입력되는 실수의 범위는 +- 1.7*10^-308 ~ 1.7*10^308 이다.)\n \n# 출력 \n 입력된 실수를 소수점 이하 11번째 자리까지 출력한다.\n \n# 입력 예시 \n 3.14159265359 \n# 출력 예시 \n 3.14159265359 \n# 도움말 \n float 데이터형을 사용하면 3.4*10^-38 ~ 3.4*10^38 범위의 실수를 저장할 수 있다.\n(float 로 선언하고 %f로 입력 받거나 출력하면 된다.)\n\n하지만 이 범위를 넘는(더 작거나 더 큰) 실수를 저장하기 위해서는 \n보다 큰 범위를 저장할 수 있는 다른 데이터형을 사용해야 정상적으로 저장시킬 수 있다.\n\n쉽게 생각하면, float 를 사용하는 것보다 double 을 사용하는 것이 좀더 정확하게 저장할 수 있다. \n단, 실수 1개를 저장하기 위해 필요한 기억 공간이 2배로 늘어난다.\n\ndouble 데이터형을 사용하면 1.7*10^-308 ~ 1.7*10^308 범위의 실수를 저장할 수 있다.\n\n[예시]\n\ndouble d;\nscanf(\"%lf\", \u0026d);\nprintf(\"%lf\", d);\n** %.11lf 를 사용하면 소수점 이하 11자리까지 출력해준다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    double n;\n    cin\u003e\u003en;\n    printf(\"%.11f\",n);\n}\n\n/**************************************************************\n\t문제번호: 1029\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1028","Time":"2016/07/27","Title":"[기초-데이터형] 정수 한 개 입력받아 그대로 출력하기2","Code":"/**************************************************************\n# 문제 설명 \n 정수 한 개를 입력받아 그대로 출력해보자.\n(단, 입력되는 정수의 범위는 0 ~ 4,294,967,295 이다.)\n \n# 입력 \n 정수 한 개가 입력된다.\n(단, 입력되는 정수의 범위는 0 ~ 4294967295 이다.)\n \n# 출력 \n 입력된 정수가 그대로 출력된다.\n \n# 입력 예시 \n 2147483648 \n# 출력 예시 \n 2147483648 \n# 도움말 \n -2147483648 ~ +2147483647 범위의 정수를 저장하고 처리하기 위해서는 int 데이터형을 사용해 변수를 선언하면된다.\n(int 로 선언하고 %d나 %i 로 입력 받거나 출력하면 된다.)\n\n하지만 이 범위를 넘어가는 정수를 저장하기 위해서는 보다 큰 범위를 저장할 수 있는 다른 데이터형을 사용해야 정상적으로 저장시킬 수 있다.\n\nunsigned int 데이터형을 사용하면 0 ~ 4294967295 범위의 정수를 저장할 수 있다.\n\n[예시]\n\nunsigned int n;\nscanf(\"%u\", \u0026n);\nprintf(\"%u\", n);\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    long n;\n    cin\u003e\u003en;\n    cout\u003c\u003cn;\n}\n\n/**************************************************************\n\t문제번호: 1028\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1027","Time":"2016/07/27","Title":"[기초-입출력] 년월일 입력받아 형태 바꿔 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 년월일을 출력하는 방법은 나라마다, 형식마다 조금씩 다르다.\n\n날짜를 년월일(yyyy.mm.dd)의 형태로 입력받아,\n\n일월년(dd-mm-yyyy)의 형태로 출력하는 프로그램을 작성해보자.\n\n(단, 한 자리 일/월은 0을 붙여 두 자리로, 년도는 0을 붙여 네 자리로 출력한다.)\n \n# 입력 \n 년월일이 '.'(닷)으로 구분되어 입력된다.\n \n# 출력 \n 년월일을\n\n일월년으로 바꾸어 '-'(대쉬, 마이너스)로 구분해 출력한다.\n \n# 입력 예시 \n 2014.07.15 \n# 출력 예시 \n 15-07-2014 \n# 도움말 \n 출력하는 자리수를 지정하기 위해 %4d와 같은 형식을 사용할 수 있는데,\n빈칸을 0으로 출력하기 위해서는 %04d와 같은 형식을 사용하면 된다.\n\n[예시]\nprintf(\"%02d-%02d-%04d\", d, m, y);\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a,b,c;\n    scanf(\"%d.%d.%d\",\u0026a,\u0026b,\u0026c);\n    printf(\"%02d-%02d-%04d\",c,b,a);\n}\n\n/**************************************************************\n\t문제번호: 1027\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1026","Time":"2016/07/27","Title":"[기초-입출력] 시분초 입력받아 분 만 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 시간을 시:분:초 형태로 입력 받아\n\n\n분 만 출력하는 프로그램을 작성해보자.\n\n \n# 입력 \n 시간이 [시:분:초]의 형태로 입력된다.\n\n \n# 출력 \n \n분 만 출력한다. (단, 10보다 작은 경우 불필요한 0은 출력하지 않는다.)\n \n# 입력 예시 \n 17:23:57 \n# 출력 예시 \n 23 \n# 도움말 \n  int h, m, s;\nscanf(\"%d:%d:%d\", \u0026h, \u0026m, \u0026s);\n\n\n\n\n\n\n\n\n\n\n\n  \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a,b,c;\n    scanf(\"%d:%d:%d\",\u0026a,\u0026b,\u0026c);\n    cout\u003c\u003cb;\n}\n\n/**************************************************************\n\t문제번호: 1026\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1025","Time":"2016/07/27","Title":"[기초-입출력] 정수 한 개 입력받아 나누어 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 다섯 자리의 정수 한 개를 입력받아 각 자리별로 구분해 출력한다.\n \n# 입력 \n 다섯자리로 이루어진 한 개의 정수를 입력받는다.\n(단, 10,000 \u003c= 입력받는 수 \u003c= 99,999 )\n \n# 출력 \n 각 자리의 수를 분리해\n한 줄에 하나씩 [ ]속에 넣어 출력한다.\n \n# 입력 예시 \n 75254 \n# 출력 예시 \n [70000]\n[5000]\n[200]\n[50]\n[4] \n# 도움말 \n scanf(\"%1d%1d%1d%1d%1d\", \u0026a, \u0026b, \u0026c, \u0026d, \u0026e);\n를 사용하면 입력 받는 숫자를 1개씩 잘라 a, b, c, d, e, 변수에 저장할 수 있다.\n\n[예시]\n읽어들인 값을 형태를 바꿔 출력하기 위해\n\nprintf(\"[%d]\\n\", a*10000);\n\n과 같은 방법을 사용할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nvoid resu(int n,int t=0)\n{\n    if(n==0) return;\n    resu(n/10,t+1);\n    cout\u003c\u003c\"[\"\u003c\u003c(n%10);\n    for(int i=0;i\u003ct;i++) cout\u003c\u003c0;\n    cout\u003c\u003c\"]\"\u003c\u003cendl;\n}\nint main()\n{\n    int d;\n    cin\u003e\u003ed;\n    resu(d);\n}\n\n/**************************************************************\n\t문제번호: 1025\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1025","Time":"2016/07/27","Title":"[기초-입출력] 정수 한 개 입력받아 나누어 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 다섯 자리의 정수 한 개를 입력받아 각 자리별로 구분해 출력한다.\n \n# 입력 \n 다섯자리로 이루어진 한 개의 정수를 입력받는다.\n(단, 10,000 \u003c= 입력받는 수 \u003c= 99,999 )\n \n# 출력 \n 각 자리의 수를 분리해\n한 줄에 하나씩 [ ]속에 넣어 출력한다.\n \n# 입력 예시 \n 75254 \n# 출력 예시 \n [70000]\n[5000]\n[200]\n[50]\n[4] \n# 도움말 \n scanf(\"%1d%1d%1d%1d%1d\", \u0026a, \u0026b, \u0026c, \u0026d, \u0026e);\n를 사용하면 입력 받는 숫자를 1개씩 잘라 a, b, c, d, e, 변수에 저장할 수 있다.\n\n[예시]\n읽어들인 값을 형태를 바꿔 출력하기 위해\n\nprintf(\"[%d]\\n\", a*10000);\n\n과 같은 방법을 사용할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nvoid resu(int n,int t=0)\n{\n    if(n==0) return;\n    resu(n/10,t+1);\n    cout\u003c\u003c\"[\"\u003c\u003c(n%10);\n    for(int i=0;i\u003ct;i++) cout\u003c\u003c0;\n    cout\u003c\u003c\"]\"\u003c\u003cendl;\n}\nint main()\n{\n    int d;\n    cin\u003e\u003ed;\n    resu(d);\n}\n\n/**************************************************************\n\t문제번호: 1025\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1024","Time":"2016/07/27","Title":"[기초-입출력] 단어 한 개 입력받아 나누어 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 단어를 하나 입력받는다.\n\n입력받은 단어(영어)의 각 문자를\n\n한줄에 한 문자씩 분리해 출력한다.\n \n# 입력 \n 단어(영어) 하나를 입력받는다.\n(단, 단어의 길이는 20글자 이하이다.)\n \n# 출력 \n 단어(영어)를 문자 단위로 나누어\n한 줄에 한개씩 ‘ ’로 묶어서 출력한다.\n \n# 입력 예시 \n Boy \n# 출력 예시 \n 'B'\n'o'\n'y' \n# 도움말 \n C언어에서는 문장을 저장하기 위해 특별한 방법을 사용하지 않고\n배열이라는 연속된 공간에 문자들을 연속으로 한 개씩 저장하는 방법을 사용한다.\n단, 문자열(문장)의 마지막임을 나타내기 위해 문자열의 마지막에 널(NULL) 문자라는 특별한 의미를 갖는 문자를 삽입해 문장임을 나타낸다.\n\n널(NULL)은 영어 단어 자체의 의미로는, 아무런 가치가 없는 또는 아무것도 없는, 사용되지 않은 등의 의미를 가지는데\n\n문자로는 '\\0', 아스키문자의 정수값은 0을 의미하며 NULL 로도 사용할 수 있다.\n\n단어나 문장을 scanf(\"%s\", ...); 로 입력받게 되면, 그 마지막에 널문자가 자동으로 입력되는 것이다.\n\n그러므로 본 문제는 그렇게 저장되어있는 영문자들을 한 개씩 순차적으로 검사해서 문장의 마지막을 나타내는 널문자가 나올 때까지 형식에 맞추어 출력하면 된다.\n\n나중에 조건실행문, 반복문, 배열에 대해서 배우면 명확히 이해할 수 있게 된다.\n\nprintf(\"%s\", ...); 는 결국 저장되어 있는 문자의 마지막까지, 즉 널문자가 나올 때까지 형식에 맞추어 출력해 주라는 의미를 가진다.\n\n\n[예시]\nchar d[30];       //최대 30문자를 저장할 수 있는 저장 공간 준비. 마지막에 널문자가 옴을 고려해야함.\nscanf(\"%s\", d); //그 공간에 키보드로 입력된 내용을 저장. 단, 공백이 있으면 거기까지만 입력됨.\nfor(i=0; d[i]!='\\0'; i++) //저장된 내용을 하나하나씩 검사해서 널문자가 아닌 동안 아래 내용 실행\n{\n   printf(\"\\'%c\\'\\n\", d[i]);\n}\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    char s[100];\n    cin\u003e\u003es;\n    for(int i=0;s[i]!=0;i++)\n    {\n        cout\u003c\u003c\"\\'\"\u003c\u003cs[i]\u003c\u003c\"\\'\"\u003c\u003cendl;\n    }\n}\n\n/**************************************************************\n\t문제번호: 1024\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1022","Time":"2016/07/27","Title":"[기초-입출력] 문장 한 개 입력받아 그대로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 한 개의 문장을 입력받아 그대로 출력하는 프로그램을 작성해보자.\n \n# 입력 \n 한 개의 문장이 입력된다.\n(문장은 여러 개의 단어로 구성될 수 있고 문장의 입력은 엔터키로 끝나며, 문장의 길이는 공백을 포함하여 2000글자를 넘지 않는다.)\n \n# 출력 \n 입력한 문장을 그대로 출력한다.\n \n# 입력 예시 \n C++ programming is very fun!! \n# 출력 예시 \n C++ programming is very fun!! \n# 도움말 \n char data[2001];\nfgets(data, 2000, stdin);\nprintf(\"%s\", data);\n\n를 실행하면 공백이 포함된 문장을 키보드(stdin)로 입력 받아 최대 2000 문자(영문자)까지 data[] 공간에 저장하고 출력할 수 있다.\n한글의 경우 1000글자까지 가능하다.\n\n%s 는 문자열(string)로 출력하라는 의미이다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    char s[100];\n    gets(s);\n    cout\u003c\u003cs;\n}\n\n/**************************************************************\n\t문제번호: 1022\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1023","Time":"2016/07/27","Title":"[기초-입출력] 실수 한 개 입력받아 부분별로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 실수 한 개를 입력받는다.\n\n입력 받은 실수를 정수 부분과 실수 부분으로 나누어 따로 출력한다.\n \n# 입력 \n 실수 한 개가 입력된다.\n(단, 입력 값은 절댓값이 정수부가 $100,000$을 넘지 않으며, 소수점 이하는 0으로 시작하지 않으며, 6자리이하이다.)\n \n# 출력 \n 첫 번째 줄에 정수 부분을,\n두 번째 줄에 실수 부분을 입력된 자릿수만큼 그대로 출력한다.\n \n# 입력 예시 \n 1.414213 \n# 출력 예시 \n 1\n414213 \n# 도움말 \n int a, b;\nscanf(\"%d.%d\", \u0026a, \u0026b); \n의 방법도 사용할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a, b;\n    scanf(\"%d.%d\", \u0026a, \u0026b);\n    cout\u003c\u003ca\u003c\u003cendl\u003c\u003cb;\n}\n\n/**************************************************************\n\t문제번호: 1023\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1021","Time":"2016/07/27","Title":"[기초-입출력] 단어 한 개 입력받아 그대로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 하나의 단어를 입력받아 그대로 출력해보자.\n \n# 입력 \n 한 단어가 입력된다.\n(단, 단어의 길이는 50글자 이하이다.)\n \n# 출력 \n 입력받은 단어를 그대로 출력한다.\n \n# 입력 예시 \n Informatics \n# 출력 예시 \n Informatics \n# 도움말 \n 문자를 50개 저장하기 위해서는 \"char data[51]\" 로 선언하면 된다.\n\nchar data[51]; //최대 문자 개수를 51개로 설정\nscanf(\"%s\", data);\nprintf(\"%s\", data);\n\n를 실행하면, data[51] 에 최대 50글자까지의 한 단어를 저장하고 출력할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    string s;\n    cin\u003e\u003es;\n    cout\u003c\u003cs;\n}\n\n/**************************************************************\n\t문제번호: 1021\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1020","Time":"2016/07/27","Title":"[기초-입출력] 주민번호 입력받아 형태 바꿔 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 주민등록번호는 다음과 같이 구성된다.\n\nXXXXXX-XXXXXXX\n\n앞의 6자리는 생년월일(yymmdd)이고 뒤 7자리는 성별, 지역, 오류검출코드이다.\n\n주민등록번호를 입력받아 형태를 바꿔 출력해보자.\n \n# 입력 \n 주민등록번호 앞 6자리와 뒤 7자리가 \"-\"로 구분되어 입력된다.\n \n# 출력 \n \"-\"를 제외한 주민번호 13자리를 모두 붙여 출력한다.\n \n# 입력 예시 \n 980907-1121112 \n# 출력 예시 \n 9809071121112  \n# 도움말 \n  \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a,b,c;\n    scanf(\"%d-%d.%d\",\u0026a,\u0026b);\n    printf(\"%06d%06d\",a,b);\n}\n\n/**************************************************************\n\t문제번호: 1020\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1019","Time":"2016/07/27","Title":"[기초-입출력] 년월일 입력받아 형식에 맞게 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 년, 월, 일을 입력받아 형식에 맞게 출력하는 프로그램을 작성해보자.\n \n# 입력 \n 년, 월, 일이 \".(닷)\"으로 구분되어 입력된다.\n \n# 출력 \n 입력받은 년, 월, 일을 출력한다. 단, 자릿수는 yyyy.mm.dd형태로 출력한다.\n(입출력 예시 참고, %02d를 사용하면 2칸을 사용해 출력하는데, 1자리 수인 경우 앞에 0이 붙어 출력된다.)\n \n# 입력 예시 \n 2012.11.21 \n# 출력 예시 \n 2012.11.21 \n# 도움말 \n  \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int a,b,c;\n    scanf(\"%d.%d.%d\",\u0026a,\u0026b,\u0026c);\n    printf(\"%04d.%02d.%02d\",a,b,c);\n}\n\n/**************************************************************\n\t문제번호: 1019\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1018","Time":"2016/07/27","Title":"[기초-입출력] 시간 입력받아 그대로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 시간이 특정 형식에 맞추어 입력될 때 그대로 출력하는 프로그램을 작성 해보자.\n \n# 입력 \n 시(hour)와 분(minute)이 \":\"(콜론)으로 구분되어 입력된다.\n \n# 출력 \n 입력받은 시간을 \"시:분\"으로 출력한다.\n \n# 입력 예시 \n 3:16 \n# 출력 예시 \n 3:16 \n# 도움말 \n scanf( ) 함수는 형식(format)에 맞추어 입력 받는 함수이기 때문에 입력 받고자 하는 형식에 맞게 적어주면 된다.\n\n[예시]\nscanf(\"%d:%d\", \u0026h, \u0026m); //h와 m에 값이 10진수로 저장된다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    int a,b;\n    scanf(\"%d:%d\",\u0026a,\u0026b);\n    cout\u003c\u003ca\u003c\u003c\":\"\u003c\u003cb;\n}\n\n/**************************************************************\n\t문제번호: 1018\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1017","Time":"2016/07/27","Title":"[기초-입출력] 정수 한 개 입력받아 세 번 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수(integer) 한 개를 입력받아 3번 출력해보자.\n \n# 입력 \n 정수 한 개가 입력된다.\n \n# 출력 \n 입력받은 정수를 공백으로 구분해 세 번 출력한다.\n \n# 입력 예시 \n 125 \n# 출력 예시 \n 125 125 125 \n# 도움말 \n printf(\"%d %d %d\", a, a, a);\n와 같은 방법으로 한 변수의 값을 여러 번 출력할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    int a;\n    cin\u003e\u003ea;\n    cout\u003c\u003ca\u003c\u003c\" \"\u003c\u003ca\u003c\u003c\" \"\u003c\u003ca;\n}\n\n/**************************************************************\n\t문제번호: 1017\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1015","Time":"2016/07/27","Title":"[기초-입출력] 실수 한 개 입력받아 소수점 이하 둘째 자리까지 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 실수(float) 한 개를 입력받아 소수점 이하 3째 자리에서 반올림 하여 2째 자리까지 출력하시오.\n \n# 입력 \n 실수 한 개가 입력된다.\n \n# 출력 \n 입력한 실수를 소수점 이하 3째 자리에서 반올림 하여 2째 자리까지 출력한다.\n\n \n# 입력 예시 \n 1.59254 \n# 출력 예시 \n 1.59 \n# 도움말 \n double로 변수를 선언한 경우 %.2lf로 출력하고,\nfloat으로 변수를 선언한 경우 %.2f로 출력하면,\n소수점 3째 자리에서 반올림 하여 2째 자리까지 출력할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    float a;\n    cin\u003e\u003ea;\n    printf(\"%.2f\",a);\n}\n\n/**************************************************************\n\t문제번호: 1015\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1014","Time":"2016/07/27","Title":"[기초-입출력] 문자 두 개 입력받아 순서 바꿔 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 두 개의 문자를 입력받은 후 순서를 바꿔 출력해보자. \n# 입력 \n 두 개의 문자가 공백으로 구분되어 입력된다. \n# 출력 \n 입력한 두 문자의 순서를 바꿔 출력한다. \n# 입력 예시 \n A b \n# 출력 예시 \n b A \n# 도움말 \n char x, y;\nscanf(\"%c %c\", \u0026x, \u0026y);\nprintf(\"%c %c\", y, x); //출력되는 순서를 작성\n와 같은 방법으로도 해결할 수 있다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    char a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003cb\u003c\u003c\" \"\u003c\u003ca;\n}\n\n/**************************************************************\n\t문제번호: 1014\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1013","Time":"2016/07/27","Title":"[기초-입출력] 정수 두 개 입력받아 그대로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수(integer) 두 개를 입력받아 그대로 출력해보자. \n# 입력 \n 두 개의 정수가 공백으로 구분되어 입력된다. \n# 출력 \n 입력받은 두 정수를 공백으로 구분하여 그대로 출력한다. \n# 입력 예시 \n 1 2 \n# 출력 예시 \n 1 2 \n# 도움말 \n int a, b;\nscanf(\"%d %d\", \u0026a, \u0026b);\nprintf(\"%d %d\", a, b);\n와 같은 방법으로 가능하다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    int a,b;\n    cin\u003e\u003ea\u003e\u003eb;\n    cout\u003c\u003ca\u003c\u003c\" \"\u003c\u003cb;\n}\n\n/**************************************************************\n\t문제번호: 1013\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1012","Time":"2016/07/27","Title":"[기초-입출력] 실수 한 개 입력받아 그대로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 키보드로 입력한 실수(소수점이 있는 수)를 그대로 출력하는 프로그램을 작성해보자. \n# 입력 \n 소숫점이하가 6자리인 실수 한 개가 입력된다.\n \n# 출력 \n 입력된 실수를 그대로 출력한다.  \n# 입력 예시 \n 1.414000 \n# 출력 예시 \n 1.414000 \n# 도움말 \n \n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tdouble d;\n\tcin\u003e\u003ed;\n\tprintf(\"%f\",d);\n}\n\n/**************************************************************\n\t문제번호: 1012\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1011","Time":"2016/07/27","Title":"[기초-입출력] 문자 한 개 입력받아 그대로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 키보드로 입력한 문자를 그대로 출력하는 프로그램을 작성해보자. \n# 입력 \n 문자 한 개가 입력된다. \n# 출력 \n 입력된 문자를 그대로 출력한다. \n# 입력 예시 \n p \n# 출력 예시 \n p \n# 도움말 \n  \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tchar d;\n\tcin\u003e\u003ed;\n\tcout\u003c\u003cd;\n}\n\n/**************************************************************\n\t문제번호: 1011\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1010","Time":"2016/07/27","Title":"[기초-입출력] 정수 한 개 입력받아 그대로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 키보드로 입력한 정수값을 그대로  출력하는 프로그램을 작성해보자.\n \n# 입력 \n 정수값 한 개가 입력된다. \n# 출력 \n 입력된 정수를 그대로 출력한다. \n# 입력 예시 \n 15 \n# 출력 예시 \n 15 \n# 도움말 \n #include \u003cstdio.h\u003e\nint main()\n{\n    int a;     \u003c-- 입력 받은 값을 저장할 변수를 선언합니다. \n    scanf(\"%d\", \u0026a);        \u003c--키보드로부터 입력 받은 값을 변수 a에 저장합니다.\n    printf(\"%d\",a);     \u003c- 입력받은 값을 저장한 변수 a의 값을 출력합니다.\n    return 0;\n \n} \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tint d;\n\tcin\u003e\u003ed;\n\tcout\u003c\u003cd;\n}\n\n/**************************************************************\n\t문제번호: 1010\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1007","Time":"2016/07/27","Title":"[기초-출력] 출력하기07","Code":"/**************************************************************\n# 문제 설명 \n 이번에는 여러 가지 문자들이 포함된 문장을 출력해보자.\n\n다음과 같은 파일 경로를 그대로 출력하시오.\n\n\"C:\\Download\\hello.cpp\"\n\n(주의 : 백 슬래시문자(\\) 도 출력되어야 한다. 백 슬래시 문자는 글꼴에 따라 '￦' 로 출력되기도 하지만, 같은 문자이다.)\n \n# 입력 \n  \n# 출력 \n \"C:\\Download\\hello.cpp\" \n# 입력 예시 \n  \n# 출력 예시 \n \"C:\\Download\\hello.cpp\" \n# 도움말 \n \\(back slash) 문자를 \"문장\"에 넣어 함께 출력하기 위해서는, 문자를 출력하려는 부분에 \\\\로 표시해 주어야한다.\n\\가 앞에 붙는 문자를 이스케이프(escape) 문자라고 하며 그 위치에서, 미리 지정되어있는 의미에 따라 동작하도록 한다. \\\\, \\n, \\t, \\b, \\r, \\a ... 등이 있다.\n예시\nprintf(\"\\\\\");\n\n** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tcout\u003c\u003c\"\\\"C:\\\\Download\\\\hello.cpp\\\"\";\n}\n\n/**************************************************************\n\t문제번호: 1007\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1692 kb\n****************************************************************/\n\n"},{"Number":"1006","Time":"2016/07/27","Title":"[기초-출력] 출력하기06","Code":"/**************************************************************\n# 문제 설명 \n 이번에는 여러 가지 특수문자를 모두 출력해야 한다.\n\n다음과 같은 \"문장\"을 출력하시오.\n\n\"!@#$%^\u0026*()\"\n\n(주의 : 특수 문자를 출력하기 위한 방법들이 약간씩 다르니 주의하도록 한다.)\n \n# 입력 \n  \n# 출력 \n \"!@#$%^\u0026*()\" \n# 입력 예시 \n  \n# 출력 예시 \n \"!@#$%^\u0026*()\" \n# 도움말 \n %(percent sign) 문자를 \"문장\"에 넣어 함께 출력하기 위해서는,  문자를 출력하려는 부분에 %%로 표시해 주어야 한다.\n\n% 가 앞에 붙는 문자를 형식 지정자(format specifier)라고 하며, 그 위치에서 미리 지정되어있는 형식에 따라 어떤 값이나 문자/문자열을 출력해 준다. %c, %d, %f, %s ... 등이 있다.\n\n예시\nprintf(\"%%\");\n\n** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tcout\u003c\u003c\"\\\"!@#$%^\u0026*()\\\"\";\n}\n\n/**************************************************************\n\t문제번호: 1006\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1692 kb\n****************************************************************/\n\n"},{"Number":"1005","Time":"2016/07/27","Title":"[기초-출력] 출력하기05","Code":"/**************************************************************\n# 문제 설명 \n 이번에는 큰 따옴표(\") (Double Quotation mark)를 문장에 넣어 출력해야 한다.\n\n다음과 같은 문장을 출력하시오.\n \n\"Hello World\"\n\n(주의 : 큰 따옴표(\")도 함께 출력되어야 한다.)\n\n \n# 입력 \n  \n# 출력 \n \"Hello World\" \n# 입력 예시 \n  \n# 출력 예시 \n \"Hello World\" \n# 도움말 \n printf( ) 함수로 \"문장\" 안에서 큰 따옴표(\") 를 출력하기 위해서는 큰 따옴표를 출력하려는 부분에 \\\" 를 넣어주어야 한다.\n왜냐하면, 문자나 문장을 나타내는 기호들이 쓰이는데 그 기호들과 문자로서의 따옴표를 확실히 구분해 주기 위해서이다.\n 예시\nprintf(\"\\\"\");\n\n** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tcout\u003c\u003c\"\\\"Hello World\\\"\";\n}\n\n/**************************************************************\n\t문제번호: 1005\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1692 kb\n****************************************************************/\n\n"},{"Number":"1004","Time":"2016/07/27","Title":"[기초-출력] 출력하기04","Code":"/**************************************************************\n# 문제 설명 \n 이번에는 작은 따옴표(') (Single Quotation mark)를 문장에 넣어 출력해야 한다.\n\n다음과 같은 문장을 출력하시오.\n\n'Hello'\n(주의 : 작은 따옴표(') 도 출력되어야 한다.)\n\n \n# 입력 \n  \n# 출력 \n 'Hello' \n# 입력 예시 \n  \n# 출력 예시 \n 'Hello' \n# 도움말 \n printf( ) 함수로 \"문장\" 안에서 작은 따옴표(')를 출력하기 위해서는 작은 따옴표를 출력하려는 부분에 \\'를 넣어주어야 한다.\n\n\\'  는 따옴표 출력\n\\\" 는 큰 따옴표 출력\n... 등 등.\n\n왜냐하면, 문자나 문장을 나타내는 기호들이 쓰이는데 그 기호들과 문자로서의 따옴표를 확실히 구분해 주기 위해서이다.\n\n예시\nprintf(\"\\'\");\n\n** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tcout\u003c\u003c\"\\'Hello\\'\";\n}\n\n/**************************************************************\n\t문제번호: 1004\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1692 kb\n****************************************************************/\n\n"},{"Number":"1003","Time":"2016/07/27","Title":"[기초-출력] 출력하기03","Code":"/**************************************************************\n# 문제 설명 \n 이번에는 줄을 바꿔 문장을 출력하는 출력을 연습해보자.\n다음과 같이 줄을 바꿔 출력 해야한다.\n\nHello\nWorld\n\n두 줄에 걸쳐서 줄을 바꿔 출력\n \n# 입력 \n \n \n# 출력 \n Hello\nWorld\n \n# 입력 예시 \n  \n# 출력 예시 \n Hello\nWorld \n# 도움말 \n \n \n백슬래시(back slash) 문자 '\\'는 문자 'W'와 비슷한 원화표시(won sign)로 보이기도 하지만, 같은 문자이다. 글꼴 설정에 따라 다르게 나타난다.\n\nprintf( ) 함수를 이용해 문장을 출력할 때, 줄을 바꾸기 위해서는 문장 중간에\n\n'\\n'(newline을 의미)을 줄을 바꿀 위치에 넣어야 한다.\n\n'\\t' 는 탭(tab),\n'\\r' 는 캐리지리턴(carrage return, 그 줄의 맨 앞으로 커서를 보냄)\n.. 등이 있다.\n이러한 문자를 이스케이프(escape) 문자라고 하고,\n 형식에 맞추어 출력하는 문장 안에서 줄을 바꾸는 등의 특별한 의미들을 나타내기 위해 사용한다.\n\n예시\nprintf(\"hello\\nworld\");\n\n** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tcout\u003c\u003c\"Hello\\nWorld\";\n}\n\n/**************************************************************\n\t문제번호: 1003\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1692 kb\n****************************************************************/\n\n"},{"Number":"1003","Time":"2016/07/27","Title":"[기초-출력] 출력하기03","Code":"/**************************************************************\n# 문제 설명 \n 이번에는 줄을 바꿔 문장을 출력하는 출력을 연습해보자.\n다음과 같이 줄을 바꿔 출력 해야한다.\n\nHello\nWorld\n\n두 줄에 걸쳐서 줄을 바꿔 출력\n \n# 입력 \n \n \n# 출력 \n Hello\nWorld\n \n# 입력 예시 \n  \n# 출력 예시 \n Hello\nWorld \n# 도움말 \n \n \n백슬래시(back slash) 문자 '\\'는 문자 'W'와 비슷한 원화표시(won sign)로 보이기도 하지만, 같은 문자이다. 글꼴 설정에 따라 다르게 나타난다.\n\nprintf( ) 함수를 이용해 문장을 출력할 때, 줄을 바꾸기 위해서는 문장 중간에\n\n'\\n'(newline을 의미)을 줄을 바꿀 위치에 넣어야 한다.\n\n'\\t' 는 탭(tab),\n'\\r' 는 캐리지리턴(carrage return, 그 줄의 맨 앞으로 커서를 보냄)\n.. 등이 있다.\n이러한 문자를 이스케이프(escape) 문자라고 하고,\n 형식에 맞추어 출력하는 문장 안에서 줄을 바꾸는 등의 특별한 의미들을 나타내기 위해 사용한다.\n\n예시\nprintf(\"hello\\nworld\");\n\n** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tcout\u003c\u003c\"Hello\\nWorld\";\n}\n\n/**************************************************************\n\t문제번호: 1003\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1692 kb\n****************************************************************/\n\n"},{"Number":"1002","Time":"2016/07/27","Title":"[기초-출력] 출력하기02","Code":"/**************************************************************\n# 문제 설명 \n 이번에는 공백이 들어있는 문장을 출력해보자.\n\n다음 문장을 출력해보자.\n\nHello World\n\n(대소문자에 주의한다.)\n \n# 입력 \n  \n# 출력 \n Hello World \n# 입력 예시 \n  \n# 출력 예시 \n Hello World \n# 도움말 \n #include \u003cstdio.h\u003e\nint main()\n{\n   printf(\"문장1 문장2\");\n   return 0;\n}\n​\n을 실행시키면 \"문장1\" \"문장2\"가 공백을 사이에 두고 출력된다.\n** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다. \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tcout\u003c\u003c\"Hello World\";\n}\n\n/**************************************************************\n\t문제번호: 1002\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1692 kb\n****************************************************************/\n\n"},{"Number":"1001","Time":"2016/07/27","Title":"[기초-출력] 출력하기01","Code":"/**************************************************************\n# 문제 설명 \n C/C++언어에서 가장 기본적인 명령이 텍스트 출력이다.\n\nprintf( ) 를 이용해 다음 단어를 출력해보자.\n\nHello\n\n(단, 글자색은 관계없다.)\n \n# 입력 \n  \n# 출력 \n Hello\n \n# 입력 예시 \n  \n# 출력 예시 \n Hello \n# 도움말 \n C/C++ IDE 프로그램을 설치한 후 아래와 같은 소스 코드를 작성하고 \"컴파일-실행\" 을 수행시키면, 지정한 \"문장\"이 출력된다.\n#include \u003cstdio.h\u003e\nint main()\n{\n printf(\"문장\"); \n return 0;\n}\n\n** 주의 : 본 화면에서 복사하여 붙여넣기하면 제대로 되지 않을 수 있으니 직접 소스코드를 작성해 넣어야한다.\n \n# 출처 \n 정보컴퓨터교사 연구회/카페 (기초100제 v1.0) \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n\tcout\u003c\u003c\"Hello\";\n}\n/**************************************************************\n\t문제번호: 1001\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1692 kb\n****************************************************************/\n\n"},{"Number":"4029","Time":"2016/07/26","Title":"격자길","Code":"/**************************************************************\n# 문제 설명 \n [문제4] 격자길 (22점, 제한시간 1초)\nn×m 격자에서 왼쪽 위(0,0)에서 오른쪽 아래(n,m)까지 갈 수 있는 길의 수를 헤아리고자 한다.   \n길을 갈 때 몇 가지 제약사항이 있다.\n(1) 격자 위의 선을 따라간다.\n(2) 아래쪽 또는 오른쪽으로만 갈 수 있다.\n(3) (0,0)과 (n,m)을 잇는 대각선보다 위쪽에 있는 점들은 통과할 수 없다. (대각선에 위치하는 점은 통과할 수 있다.) 아래의 그림에서 흰점은 통과할 수 없는 점이고 검은 점은 통과할 수 있는 점이다.\n\n   \n예를 들어, 3×4 격자에서 갈 수 있는 길은 다음과 같이 5가지가 있다.\n\n   \n격자의 크기가 입력되었을 때 (0,0)부터 (n,m)까지 갈 수 있는 길의 수를 출력하는 프로그램을 작성하시오.\n \n# 입력 \n 1. 두 개의 정수 n과 m이 입력된다. (1≤n,m≤15)\n2. n은 격자의 세로 크기를, m은 격자의 가로 크기를 각각 나타낸다.\n \n# 출력 \n 1. (0,0)에서 (n,m)까지 갈 수 있는 길의 수를 출력한다.\n \n# 입력 예시 \n 3 4 \n# 출력 예시 \n 5 \n# 도움말 \n  \n# 출처 \n 2009 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cqueue\u003e\nusing namespace std;\nint n,m;\nint total;\nint ma[2][2]={{0,1},{1,0}};\nvoid dfs(int x,int y)\n{\n          if(x\u003em) return;\n          if(y\u003en) return;\n          if(x==m\u0026\u0026y==n)\n          {\n                    total++;\n                    return;\n          }\n          for(int i=0;i\u003c2;i++)\n          {\n                    int mx=x+ma[i][0];\n                    int my=y+ma[i][1];\n                    if(my\u003e=mx*(float)n/m)\n                    {\n                              dfs(mx,my);\n                    }\n          }\n}\nint main()\n{\n          cin\u003e\u003en\u003e\u003em;\n          dfs(0,0);\n          cout\u003c\u003ctotal;\n}\n\n/**************************************************************\n\t문제번호: 4029\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:716 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3510","Time":"2016/07/25","Title":"예산 관리","Code":"/**************************************************************\n# 문제 설명 \n 정보 선생님은 예산이 많은 부서에서 일하고 있다.\n학기말이 가까워지면서 부서의 예산을 가급적 모두 집행해야 될 상황이 되었다.\n정보 선생님은 예산 범위를 넘지 않는 범위 내에서 다양한 활동을 하고 싶어한다.\n지금 남은 예산(B)이 40이고(단위:만원), 예산을 사용할 수 있는 활동(N)이 6개가 있다.\n6개의 활동에 각각 드는 비용은 7, 13, 17, 19, 29, 31이다.\n여기서 40을 채울 수 있는 활동의 개수는 상관이 없다.\n40을 넘지 않는 범위에서 활동 비용을 조합해보면,\n7 + 13 + 17 = 37\n7 + 31 = 38\n7 + 13 + 19 = 39\n...\n따라서 40을 초과하지 않으면서 예산을 최대로 사용할 수 있는 비용은 39이다.\n정보 선생님을 도와 줄 수 있는 프로그램을 작성하시오. \n# 입력 \n 첫째 줄에 남은 예산(B)가 입력된다. ( 10 \u003c= B \u003c= 35,000 )\n둘째 줄에 예산을 사용할 수 있는 활동의 수(N)이 입력된다. (1 \u003c= N \u003c= 21 )\n셋째 줄에 공백을 기준으로 N개의 활동비가 양의 정수로 입력된다.\n \n# 출력 \n 남은 예산을 초과하지 않으면서 최대로 사용할 수 있는 비용액을 출력하시오.\n \n# 입력 예시 \n 40\n6\n7 13 17 19 29 31 \n# 출력 예시 \n 39 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint minimum;\nvoid intcpy(int* dst,int* src,int n)\n{\n    for(int i=0;i\u003cn;i++)\n    {\n        dst[i]=src[i];\n    }\n    dst[n]=-1;\n}\nvoid yee(int n,int arr[],int size)\n{\n    if(minimum\u003en)\n    {\n        minimum=n;\n    }\n    for(int i=0;arr[i]!=-1;i++)\n    {\n        if(arr[i]!=-2)\n        {\n            if(n-arr[i]\u003e0)\n            {\n                int *newArr=new int[size+1];\n                intcpy(newArr,arr,size);\n                newArr[i]=-2;\n                yee(n-arr[i],newArr,size);\n            }\n        }\n    }\n}\nint main()\n{\n    int n;\n    int size;\n    cin\u003e\u003en\u003e\u003esize;\n    int arr[30];\n    for(int i=0;i\u003csize;i++)\n    {\n        int d;cin\u003e\u003ed;\n        arr[i]=d;\n    }\n    arr[size]=-1;\n    minimum=n;\n    yee(n,arr,size);\n    cout\u003c\u003cn-minimum;\n}\n\n/**************************************************************\n\t문제번호: 3510\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1960 kb\n****************************************************************/\n\n"},{"Number":"3450","Time":"2016/07/25","Title":"순열 구하기","Code":"/**************************************************************\n# 문제 설명 \n n과 r을 입력받아 n을 입력받아 n개의 문자 중 r개를 택하여 순열을 구하는 프로그램을 작성하시오.\nn개의 문자는 A부터 시작하는 알파벳 대문자이다.\n※ 서로 다른 n개 중에서 r개(n≥r)를 취하여 그들을 일렬로 세울 때, 늘어 세운 것 하나하나를 n개 중에서 r개 취한 순열이라 한다. \n# 입력 \n n은 10이하의 자연수이며 r은 5이하이면서 동시에 n이하의 자연수이다. \n# 출력 \n 첫째 줄엔 순열의 수 m을 출력한다.\n둘째 줄부터 m줄에 걸쳐 한 줄에 하나씩 순열을 출력한다.(순열을 출력하는 순서는 사전 순서로 한다.) \n# 입력 예시 \n 4 2 \n# 출력 예시 \n 12\nAB\nAC\nAD\nBA\nBC\nBD\nCA\nCB\nCD\nDA\nDB\nDC\n \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cvector\u003e\n#include \u003clist\u003e\n#include \u003calgorithm\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\n\nvector\u003cstring\u003e result;\nvoid yee(int n, char arr[] ,string str)\n{\n    if(n==0)\n    {\n        result.push_back(str);\n        return;\n    }\n    for(int i=0;arr[i]!=0;i++)\n    {\n        if(arr[i]!='0')\n        {\n            char newArr[10];\n            strcpy(newArr,arr);\n            newArr[i]='0';\n            yee(n-1,newArr,str+arr[i]);\n        }\n    }\n}\nchar* makeList(int n)\n{\n    char* arr=new char[n];\n    for(int i=0;i\u003cn;i++)\n    {\n        arr[i]='A'+i;\n    }\n    arr[n]=0;\n    return arr;\n}\nint main()\n{\n    int n,k;\n    cin\u003e\u003ek\u003e\u003en;\n    yee(n,makeList(k),\"\");\n    sort(result.begin(),result.end());\n    cout\u003c\u003cresult.size()\u003c\u003cendl;\n    for(int i=0;i\u003cresult.size();i++)\n    {\n        cout\u003c\u003cresult[i]\u003c\u003cendl;\n    }\n}\n\n/**************************************************************\n\t문제번호: 3450\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:324 ms\n\t메모리 사용량:3312 kb\n****************************************************************/\n\n"},{"Number":"3440","Time":"2016/07/25","Title":"이진수 순열","Code":"/**************************************************************\n# 문제 설명 \n 0과 1로 이루어진 길이가 n(n\u003c=12)인 이진수가 있다.\n여기서 1의 개수가 k개인 수열을 모두 출력하고자 한다.\n예를 들어 길이 n이 3이고, 1의 개수 k가 2인 경우,\n011 101 110\n이다. \n# 입력 \n 정수 n과  k가 입력된다.( 1 \u003c= k \u003c= n \u003c= 12 ) \n \n# 출력 \n 가능한 경우를 공백으로 분리하여 하나씩 출력하되 오름차순으로 출력한다.\n\n \n# 입력 예시 \n 3 2 \n# 출력 예시 \n 011 101 110  \n# 도움말 \n  \n# 출처 \n MSP 11월 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring\u003e\n#include \u003cvector\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nvector\u003cstring\u003e result;\nvoid yee(int n, int k, string str)\n{\n    if (n==0)\n    {\n        if(k==0)\n            result.push_back(str);\n        return;\n    }\n    yee(n-1,k-1,str+\"1\");\n    yee(n-1,k,str+\"0\");\n}\nint main()\n{\n    int n,k;\n    cin\u003e\u003en\u003e\u003ek;\n    yee(n,k,\"\");\n    sort(result.begin(),result.end());\n    for(int i=0;i\u003cresult.size();i++)\n    {\n        cout\u003c\u003cresult[i]\u003c\u003c\" \";\n    }\n}\n\n/**************************************************************\n\t문제번호: 3440\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1708 kb\n****************************************************************/\n\n"},{"Number":"4685","Time":"2016/07/25","Title":"경로 구하기","Code":"/**************************************************************\n# 문제 설명 \n 길이가 같은 두 개의 이진수 코드 A와 B가 있다고 하자. 이 두 코드 사이의 해밍 거리는 A와 B의 각 비트를 왼쪽부터 오른쪽으로 차례대로 비교할 때 서로 다른 값을 가진 비트의 수이다. 예를 들어, A=010010, B=011011 이라고 하면, 세 번째 비트와 여섯 번째 비트만 서로 다르므로 이 두 코드 사이의 해밍 거리는 2이다. \n우리는 총 N개의 이진 코드를 가지고 있고, 각 코드의 길이는 K로 같다. \n예를 들어, 다음과 같이 길이가 3인 5개의 이진 코드들이 있다. \n\nA=000, B=111, C=010, D=110, E=001 \n\n두 코드 A와 B사이의 해밍 거리를 H(A,B)로 표현한다. 그러면, H(A,B)=3, H(A,C)=1, H(A,D)=2, H(A,E)=1 이다. \n우리는 이진 코드들에 대해 해밍 경로를 찾고자 한다. 해밍 경로는 모든 인접한 두 코드사이의 해밍 거리가 1인 경로이다. 위의 예에서 (A,C,D)는 코드 와 의 해밍 거리가 1이고, 코드 C와 D의 해밍 거리가 1이므로 해밍 경로이다. (A,E,B)는 코드 A와 E의 해밍 거리는 1이지만, 코드 E와 B의 해밍 거리가 2이므로 해밍 경로가 아니다. \n이 문제는 주어진 두 코드 사이에 가장 짧은 해밍 경로를 구하는 프로그램을 작성하는 것이다. \n \n# 입력 \n 첫째 줄에는 두 개의 정수 N과 K가 빈칸을 사이에 두고 주어진다(3≤N≤1,000, 2≤K≤30). \n둘째 줄부터 N개의 줄에는 각 줄마다 길이가 K인 이진 코드가 하나씩 주어진다. 하나의 코드는 빈칸이 없이 주어진다. 코드들은 주어진 순서대로 1부터 N까지의 번호로 구분된다. 코드가 같은 경우는 없다. \n그 다음 줄에는 해밍 경로를 찾고자 하는 서로 다른 두 개의 코드 A와 B가 각각의 코드번호로 주어진다. \n \n# 출력 \n 입력으로 주어진 두 코드 사이에 해밍 경로가 존재하면 그 경로 중 가장 짧은 경로를 코드 A부터 코드 B까지 경로상의 코드 번호로 출력한다. 코드 번호를 출력할 경우에는 코드 번호 사이에 하나의 빈칸을 사이에 두고 출력한다. 만약 답이 여러 개 있으면 그 중에 하나만 출력하고, 경로가 존재하지 않으면 -1을 출력한다. \n \n# 입력 예시 \n 5 3\n000\n111\n010\n110\n001\n1 2 \n# 출력 예시 \n 1 3 4 2 \n# 도움말 \n ※ 스페셜져지 적용됨. (2012.11.12) \n# 출처 \n 2010 지역본선 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cmap\u003e\n#include \u003cvector\u003e\n#include \u003cqueue\u003e\n#include \u003cstring\u003e\n#include \u003csstream\u003e\nusing namespace std;\ntypedef vector\u003cint\u003e point;\n\nint distanceBtw(const char* a,const char* b)\n{\n    int dis=0;\n    for(int i=0;a[i]!=0;i++)\n        if(a[i]!=b[i]) dis++;\n    return dis;\n}\n\nstring intToString(int n)\n{\n    stringstream s;\n    s \u003c\u003c n;\n    return s.str();\n}\n\nint main()\n{\n    vector\u003cchar*\u003e codes;\n    map\u003cint,point\u003e graph;\n    int n,s;\n    cin\u003e\u003en\u003e\u003es;\n    for(int i=0;i\u003cn;i++)\n    {\n        char* a= new char[100];\n        cin\u003e\u003ea;\n        codes.push_back(a);\n    }\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            if(distanceBtw(codes[i],codes[j])==1)\n            {\n                graph[i].push_back(j);\n            }\n        }\n    }\n    int from,to;\n    cin\u003e\u003efrom\u003e\u003eto;\n    queue\u003cint\u003e qu;\n    map\u003cint,string\u003e path;\n    map\u003cint,int\u003e check;\n    check[from-1]=1;\n    qu.push(from-1);\n    while(!qu.empty())\n    {\n        int here=qu.front();qu.pop();\n        for(int i=0;i\u003cgraph[here].size();i++)\n        {\n            int there=graph[here][i];\n            if(!check[there])\n            {\n                path[there]=path[here]+string(\" \")+intToString(there+1);\n                qu.push(there);\n                check[there]=1;\n                if(there==to-1)\n                {\n                    cout\u003c\u003cfrom;\n                    cout\u003c\u003cpath[there];\n                    return 0;\n                }\n            }\n        }\n    }\n    cout\u003c\u003c-1;\n}\n\n/**************************************************************\n\t문제번호: 4685\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:220 ms\n\t메모리 사용량:6984 kb\n****************************************************************/\n\n"},{"Number":"4697","Time":"2016/07/23","Title":"안전 영역","Code":"/**************************************************************\n# 문제 설명 \n 문제 2) 안전 영역 (초등 2)\n\n\n재난방재청에서는 많은 비가 내리는 장마철에 대비해서 다음과 같은 일을 계획하고 있다. 먼저 어떤 지역의 높이 정보를 파악한다. 그 다음에 그 지역에 많은 비가 내렸을 때 물에 잠기지 않는 안전한 영역이 최대로 몇 개가 만들어 지는 지를 조사하려고 한다. 이 때, 문제를 간단하게 하기 위하여, 장마철에 내리는 비의 양에 따라 일정한 높이 이하의 모든 지점은 물에 잠긴다고 가정한다.\n\n\n  어떤 지역의 높이 정보는 행과 열의 크기가 각각 N인 2차원 배열 형태로 주어지며 배열의 각 원소는 해당 지점의 높이를 표시하는 자연수이다. 예를 들어, 다음은 N=5인 지역의 높이 정보이다.\n\n    \n        \n            \n            6\n            \n            \n            8\n            \n            \n            2\n            \n            \n            6\n            \n            \n            2\n            \n        \n        \n            \n            3\n            \n            \n            2\n            \n            \n            3\n            \n            \n            4\n            \n            \n            6\n            \n        \n        \n            \n            6\n            \n            \n            7\n            \n            \n            3\n            \n            \n            3\n            \n            \n            2\n            \n        \n        \n            \n            7\n            \n            \n            2\n            \n            \n            5\n            \n            \n            3\n            \n            \n            6\n            \n        \n        \n            \n            8\n            \n            \n            9\n            \n            \n            5\n            \n            \n            2\n            \n            \n            7\n            \n        \n    \n\n\n\n\n이제 위와 같은 지역에 많은 비가 내려서 높이가 4 이하인 모든 지점이 물에 잠겼다고 하자. 이 경우에 물에 잠기는 지점을 회색으로 표시하면 다음과 같다.\n\n\n    \n        \n            \n            6\n            \n            \n            8\n            \n            \n            2\n            \n            \n            6\n            \n            \n            2\n            \n        \n        \n            \n            3\n            \n            \n            2\n            \n            \n            3\n            \n            \n            4\n            \n            \n            6\n            \n        \n        \n            \n            6\n            \n            \n            7\n            \n            \n            3\n            \n            \n            3\n            \n            \n            2\n            \n        \n        \n            \n            7\n            \n            \n            2\n            \n            \n            5\n            \n            \n            3\n            \n            \n            6\n            \n        \n        \n            \n            8\n            \n            \n            9\n            \n            \n            5\n            \n            \n            2\n            \n            \n            7\n            \n        \n    \n\n\n\n\n물에 잠기지 않는 안전한 영역이라 함은 물에 잠기지 않는 지점들이 위, 아래, 오른쪽 혹은 왼쪽으로 인접해 있으며 그 크기가 최대인 영역을 말한다. 위의 경우에서 물에 잠기지 않는 안전한 영역은 5개가 된다(꼭지점으로만 붙어 있는 두 지점은 인접하지 않는다고 취급한다).\n\n\n  또한 위와 같은 지역에서 높이가 6이하인 지점을 모두 잠기게 만드는 많은 비가 내리면 물에 잠기지 않는 안전한 영역은 아래 그림에서와 같이 네 개가 됨을 확인할 수 있다.\n\n\n    \n        \n            \n            6\n            \n            \n            8\n            \n            \n            2\n            \n            \n            6\n            \n            \n            2\n            \n        \n        \n            \n            3\n            \n            \n            2\n            \n            \n            3\n            \n            \n            4\n            \n            \n            6\n            \n        \n        \n            \n            6\n            \n            \n            7\n            \n            \n            3\n            \n            \n            3\n            \n            \n            2\n            \n        \n        \n            \n            7\n            \n            \n            2\n            \n            \n            5\n            \n            \n            3\n            \n            \n            6\n            \n        \n        \n            \n            8\n            \n            \n            9\n            \n            \n            5\n            \n            \n            2\n            \n            \n            7\n            \n        \n    \n\n\n\n\n  이와 같이 장마철에 내리는 비의 양에 따라서 물에 잠기지 않는 안전한 영역의 개수는 다르게 된다. 위의 예와 같은 지역에서 내리는 비의 양에 따른 모든 경우를 다 조사해 보면 물에 잠기지 않는 안전한 영역의 개수 중에서 최대인 경우는 5임을 알 수 있다.\n\n\n  어떤 지역의 높이 정보가 주어졌을 때, 장마철에 물에 잠기지 않는 안전한 영역의 최대 개수를 계산하는 프로그램을 작성하시오.\n\n \n# 입력 \n 첫째 줄에는 어떤 지역을 나타내는 2차원 배열의 행과 열의 개수를 나타내는 수 N이 입력된다. N은 2 이상 100 이하의 정수이다.\n 둘째 줄부터 N 개의 각 줄에는 2차원 배열의 첫 번째 행부터 N번째 행까지 순서대로 한 행씩 높이 정보가 입력된다. \n각 줄에는 각 행의 첫 번째 열부터 N번째 열까지 N 개의 높이 정보를 나타내는 자연수가 빈 칸을 사이에 두고 입력된다. \n높이는 1이상 100 이하의 정수이다.\n \n# 출력 \n 첫째 줄에 장마철에 물에 잠기지 않는 안전한 영역의 최대 개수를 출력한다.\n \n# 입력 예시 \n 5\n6 8 2 6 2\n3 2 3 4 6\n6 7 3 3 2\n7 2 5 3 6\n8 9 5 2 7 \n# 출력 예시 \n 5 \n# 도움말 \n 입력과 출력의 예2\n입력(INPUT.TXT)\n\n\n    \n        \n            \n            7\n            9 9 9 9 9 9 9\n            9 2 1 2 1 2 9\n            9 1 8 7 8 1 9\n            9 2 7 9 7 2 9\n            9 1 8 7 8 1 9\n            9 2 1 2 1 2 9\n            9 9 9 9 9 9 9\n            \n        \n    \n\n\n출력(OUTPUT.TXT)\n\n\n    \n        \n            \n            6\n            \n        \n    \n\n \n# 출처 \n 2010 KOI 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint total=0;\nint graph[102][102];\nint checkd[102][102];\nvoid dfs(int y, int x, int t)\n{\n    if(graph[y][x]\u003c=t || checkd[y][x]) return;\n    checkd[y][x]=1;\n    dfs(y-1,x,t);\n    dfs(y+1,x,t);\n    dfs(y,x-1,t);\n    dfs(y,x+1,t);\n}\nint main()\n{\n    int wh;\n    int maxH=0;\n    cin\u003e\u003ewh;\n    for(int i=1;i\u003cwh+1;i++)\n    {\n        for(int j=1;j\u003cwh+1;j++)\n        {\n            cin\u003e\u003egraph[i][j];\n            if(graph[i][j]\u003emaxH) maxH=graph[i][j];\n        }\n    }\n    int maxTotal=0;\n    for(int t=0;t\u003cmaxH;t++)\n    {\n        total=0;\n        for(int j=1;j\u003cwh+1;j++)\n        {\n            for(int i=1;i\u003cwh+1;i++)\n            {\n                if(!checkd[i][j]\u0026\u0026graph[i][j]\u003et)\n                {\n                    dfs(i,j,t);\n                    total++;\n                }\n            }\n        }\n        for(int i=0;i\u003cwh+1;i++)\n        {\n            for(int j=0;j\u003cwh+1;j++)\n            {\n                checkd[i][j]=0;\n            }\n        }\n        if(total\u003emaxTotal)\n        {\n            maxTotal=total;\n        }\n    }\n    cout\u003c\u003cmaxTotal;\n}\n\n/**************************************************************\n\t문제번호: 4697\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:36 ms\n\t메모리 사용량:1968 kb\n****************************************************************/\n\n"},{"Number":"2605","Time":"2016/07/23","Title":"캔디팡","Code":"/**************************************************************\n# 문제 설명 \n   최근 캔디팡이라는 스마트폰 게임이 인기를 끌고 있다. 캔디팡은 7 * 7 모양의 격자 판에 같은 색깔이 연속 3개 이상인 부분을 찾아 터치하면 터지면서 점수를 얻는 게임이다. 이때 연속된 부분은 상, 하, 좌, 우만 판단한다.\n\n\n  위 캔디팡 화면에서 터치하면 터지는 영역은 총 4군데 존재한다.\n  캔디팡 격자 정보가 주어졌을 때 터치하면 터지는 영역의 개수를 출력하는 프로그램을 작성하시오.(위 예시 참고)\n   \n※ 색깔정보\n빨강 = 1 , 노랑 = 2 , 파랑 = 3 , 초록 = 4 , 보라 = 5\n \n# 입력 \n 캔디팡 격자판(7 * 7)의 색깔 정보(1~5)가 입력된다.\n \n# 출력 \n 터치하면 터지는 영역의 개수를 출력한다.\n \n# 입력 예시 \n 2 1 5 1 1 3 4\n2 1 5 1 3 5 3\n2 3 4 5 2 2 4\n4 4 3 2 3 1 3\n4 3 5 3 1 4 3\n5 4 4 3 3 5 5\n2 1 3 5 1 1 2 \n# 출력 예시 \n 4 \n# 도움말 \n  \n# 출처 \n 2012진주시정보화경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint total=0;\nint graph[9][9];\nint checkd[9][9];\nint pat;\nvoid dfs(int y, int x, int color)\n{\n    if(checkd[y][x] || color!=graph[y][x]) return;\n    checkd[y][x]=1;\n    pat++;\n    if(pat==3) total++;\n    dfs(y-1,x,color);\n    dfs(y+1,x,color);\n    dfs(y,x-1,color);\n    dfs(y,x+1,color);\n}\nint main()\n{\n    for(int i=1;i\u003c8;i++)\n    {\n        for(int j=1;j\u003c8;j++)\n        {\n            cin\u003e\u003egraph[i][j];\n        }\n    }\n    for(int j=1;j\u003c8;j++)\n    {\n        for(int i=1;i\u003c8;i++)\n        {\n            if(!checkd[i][j])\n            {\n                pat=0;\n                dfs(i,j,graph[i][j]);\n            }\n        }\n    }\n    cout\u003c\u003ctotal;\n}\n\n/**************************************************************\n\t문제번호: 2605\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4421","Time":"2016/07/23","Title":"단지 번호 붙이기","Code":"/**************************************************************\n# 문제 설명 \n 문제1)\n\u003c그림 1\u003e과 같이 정사각형 모양의 지도가 있다. 1은 집이 있는 곳을, 0은 집이 없는 곳을 나타낸다. 철수는 이 지도를 가지고 연결된 집들의 모임인 단지를 정의하고, 단지에 번호를 붙이려 한다. 여기서 연결되었다는 것은 어떤 집이 좌우, 혹은 아래위로 다른 집이 있는 경우를 말한다. 대각선상에 집이 있는 경우는 연결된 것이 아니다. \u003c그림 2\u003e는 \u003c그림 1\u003e을 단지별로 번호를 붙인 것이다. 지도를 입력하여 단지수를 출력하고, 각 단지에 속하는 집의 수를 오름차순으로 정렬하여 출력하는 프로그램을 작성하시오.\n\n \n# 입력 \n 첫 번째 줄에는 지도의 크기 N(정사각형으므로 가로와 세로의 크기는 같으며 5≤N≤25)이 입력되고,\n그 다음 N줄에는 각각 N개의 자료(0혹은 1)가 입력된다. \n# 출력 \n 첫 번째 줄에는 총 단지수를 출력하시오. 그리고 각 단지내 집의 수를 오름차순으로 정렬하여 한 줄에 하나씩 출력하시오. \n# 입력 예시 \n 7\n0110100\n0110101\n1110101\n0000111\n0100000\n0111110\n0111000 \n# 출력 예시 \n 3\n7\n8\n9 \n# 도움말 \n  \n# 출처 \n 1996 KOI 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint total=0;\nint danji[100];\nint graph[27][27];\nint w;\nint checkd[27][27];\nvoid dfs(int y, int x)\n{\n    if(!graph[y][x]||checkd[y][x]) return;\n    checkd[y][x]=1;\n    dfs(y-1,x);\n    dfs(y+1,x);\n    dfs(y,x-1);\n    dfs(y,x+1);\n    danji[total]++;\n}\nint main()\n{\n    cin\u003e\u003ew;\n    for(int i=1;i\u003cw+1;i++)\n    {\n        for(int j=1;j\u003cw+1;j++)\n        {\n            char c;\n            cin\u003e\u003ec;\n            if(c=='1') graph[i][j]=1;\n        }\n    }\n    for(int j=1;j\u003cw+1;j++)\n    {\n        for(int i=1;i\u003cw+1;i++)\n        {\n            if(!checkd[i][j] \u0026\u0026 graph[i][j])\n            {\n                dfs(i,j);\n                total++;\n            }\n        }\n    }\n    cout\u003c\u003ctotal\u003c\u003cendl;\n    sort(danji,danji+total);\n    for(int i=0;i\u003ctotal;i++)\n    {\n        cout\u003c\u003cdanji[i]\u003c\u003cendl;\n    }\n}\n\n/**************************************************************\n\t문제번호: 4421\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1708 kb\n****************************************************************/\n\n"},{"Number":"4024","Time":"2016/07/23","Title":"호수의 수 구하기","Code":"/**************************************************************\n# 문제 설명 \n [문제 4] 호수의 수 구하기 [22점]\n  (제한시간 1초, 부분 점수 없음)\n  \n  다음은 어느 호수 지역의 지도를 간략하게 표현한 것이다. 지도는 'L'또는 '.'으로 이루어 진다. 'L'이 의미하는 것은 호수 영역이고 '.'은 호수 이외의 영역을 의미한다. \n  단, 호수가 상, 하, 좌, 우, 대각선으로 이어진 것은 하나의 호수로 간주한다.\n  다음의 지도를 보자.\nL . . . . . . . . L . .\n. L . . . . . . . L L .\nL L . . . . . . . . L .\n. L . . . . . . . . . L\n. . L . . . . . . . . L\n. . . . . . L . . . . .\n. . . . . L . L . . . .\n. . . . L . L . L . . .\n. . . . . L . L . . . .\n. . . . . . L . . . . L\n   \n  위의 경우 호수는 아래 그림과 같이 4개가 존재한다. 상, 하, 좌, 우, 대각선이 연결되어 있으면 하나의 호수로 볼 수 있기 때문이다.\n\n위와 같이 주어진 지도를 분석하여 호수의 개수를 구하는 프로그램을 작성하시오.\n \n# 입력 \n 입력파일의 첫째 줄에 두 정수 W, H가 주어진다. (단, 4 \u003c= W, H \u003c= 100)\n지도는 직사각형으로 이루어지며, W는 지도의 너비를 의미하고, H는 지도의 높이를 의미한다. \n두 번째 줄부터 H + 1번째 줄까지 각 줄 마다 'L'또는 '.'가 H개 공백으로 구분하여 주어진다.\n \n# 출력 \n 출력내용은 호수의 개수를 하나의 정수로 출력한다.\n \n# 입력 예시 \n 12 10\nL . . . . . . . . L . .\n. L . . . . . . . L L .\nL L . . . . . . . . L .\n. L . . . . . . . . . L\n. . L . . . . . . . . L\n. . . . . . L . . . . .\n. . . . . L . L . . . .\n. . . . L . L . L . . .\n. . . . . L . L . . . .\n. . . . . . L . . . . L \n# 출력 예시 \n 4 \n# 도움말 \n  \n# 출처 \n 2008 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint graph[102][102];\nint w,h;\nint checkd[100][100];\nvoid dfs(int y, int x)\n{\n    for(int i=y-1;i\u003c=y+1;i++)\n    {\n        for(int j=x-1;j\u003c=x+1;j++)\n        {\n            if(i==y \u0026\u0026 j==x) continue;\n            if(graph[i][j]\u0026\u0026!checkd[i][j])\n            {\n                checkd[i][j]=1;\n                dfs(i,j);\n            }\n        }\n    }\n}\nint main()\n{\n    int total=0;\n    cin\u003e\u003ew\u003e\u003eh;\n    for(int i=1;i\u003ch+1;i++)\n    {\n        for(int j=1;j\u003cw+1;j++)\n        {\n            char x;\n            cin\u003e\u003ex;\n            if(x=='L') graph[i][j]=1;\n        }\n    }\n    for(int i=1;i\u003ch+1;i++)\n    {\n        for(int j=1;j\u003cw+1;j++)\n        {\n            if(!checkd[i][j] \u0026\u0026 graph[i][j])\n            {\n                dfs(i,j);\n                total++;\n            }\n        }\n    }\n    cout\u003c\u003ctotal;\n}\n\n/**************************************************************\n\t문제번호: 4024\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1856 kb\n****************************************************************/\n\n"},{"Number":"4454","Time":"2016/07/23","Title":"촌수 계산","Code":"/**************************************************************\n# 문제 설명 \n 문제1)\n우리 나라는 가족 혹은 친척들 사이의 관계를 촌수라는 단위로 표현하는 독특한 문화를 가지고 있다. 이런한 촌수는 다음과 같은 방식으로 계산된다. 기본적으로 부모와 자식 사이를 1촌으로 정의하고 이로부터 사람들 간의 촌수를 계산한다. 예를 들면 나와 아버지, 아버지와 할아버지는 각각 1촌으로 나와 할아버지는 2촌이 되고, 아버지 형제들과 할아버지는 1촌, 나와 아버지 형제들과는 3촌이 된다.\n여러 사람들에 대한 부모 자식들 간의 관계가 주어졌을 때, 주어진 두 사람의 촌수를 계산하는 프로그램을 작성하시오.\n \n# 입력 \n 사람들은 1, 2, 3, …, n (1≤n≤100)의 연속된 번호로 각각 표시된다.\n첫째 줄에는 전체 사람의 수 n이 주어지고,\n둘째 줄에는 촌수를 계산해야 하는 서로 다른 두 사람의 번호가 주어진다.\n그리고 셋째 줄에는 부모 자식들 간의 관계의 개수 m이 주어진다.\n넷째 줄부터는 부모 자식간의 관계를 나타내는 두 번호 x,y가 각 줄에 나온다.\n이때 앞에 나오는 번호 x는 뒤에 나오는 정수 y의 부모 번호를 나타낸다. \n# 출력 \n 입력에서 요구한 두 사람의 촌수를 나타내는 정수를 출력한다.\n어떤 경우에는 두 사람같의 친척 관계가 전혀 없어 촌수를 계산할 수 없을 때가 있다. 이 때에는 -1을 출력해야 한다. \n# 입력 예시 \n 9\n7 3\n7\n1 2\n1 3\n2 7\n2 8\n2 9\n4 5\n4 6 \n# 출력 예시 \n 3 \n# 도움말 \n  \n# 출처 \n 1999 KOI 중등 \n\n*************************************************************/\n#include\u003ciostream\u003e\n#include\u003cvector\u003e\n#include\u003cqueue\u003e\n#include\u003cmap\u003e\nusing namespace std;\nmap\u003c int, vector\u003cint\u003e \u003e graph;\nint main()\n{\n    int n,m;\n    int x,y;\n    cin\u003e\u003en;\n    cin\u003e\u003ex\u003e\u003ey;\n    cin\u003e\u003em;\n    for(int i=0;i\u003cm;i++)\n    {\n        int g,j;\n        cin\u003e\u003eg\u003e\u003ej;\n        graph[g].push_back(j);\n        graph[j].push_back(g);\n    }\n    queue\u003cint\u003e waiting;\n    int dis[100000]={0};\n    dis[x]=1;\n    waiting.push(x);\n    while(!waiting.empty())\n    {\n        int here=waiting.front(); waiting.pop();\n        for(int i=0;i\u003cgraph[here].size();i++)\n        {\n            int there=graph[here][i];\n            if(!dis[there])\n            {\n                dis[there]=dis[here]+1;\n                waiting.push(there);\n            }\n            if(there==y)\n            {\n                cout\u003c\u003cdis[there]-1;\n                return 0;\n            }\n        }\n    }\n    cout\u003c\u003c-1;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4454\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1988 kb\n****************************************************************/\n\n"},{"Number":"4503","Time":"2016/07/19","Title":"바이러스","Code":"/**************************************************************\n# 문제 설명 \n 문제3) 바이러스 (초등3)\n\n신종 바이러스인 웜 바이러스는 네트워크를 통해 전파된다. 한 컴퓨터가 웜 바이러스에 걸리면 그 컴퓨터와 네트워크 상에서 연결되어 있는 모든 컴퓨터는 웜 바이러스에 걸리게 된다.\n예를 들어 7대의 컴퓨터가 \u003c그림 1\u003e과 같이 네트워크 상에서 연결되어 있다고 하자. 1번 컴퓨터가 웜 바이러스에 걸리면 웜 바이러스는 2번과 5번 컴퓨터를 거쳐 3번과 6번 컴퓨터까지 전파되어 2, 3, 5, 6 네 대의 컴퓨터는 웜 바이러스에 걸리게 된다. 하지만 4번과 7번 컴퓨터는 1번 컴퓨터와 네트워크상에서 연결되어 있지 않기 때문에 영향을 받지 않는다.\n\n어느 날 1번 컴퓨터가 웜 바이러스에 걸렸다. 컴퓨터의 수와 네트워크 상에서 서로 연결되어 있는 정보가 주어질 때, 1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 출력하는 프로그램을 작성하시오.\n\n \n# 입력 \n 첫째 줄에는 컴퓨터의 수가 주어진다. 컴퓨터의 수는 100 이하이고 각 컴퓨터에는 1번 부터 차례대로 번호가 매겨진다.\n둘째 줄에는 네트워크 상에서 직접 연결되어 있는 컴퓨터 쌍의 수가 주어진다.\n이어서 그 수만큼 한 줄에 한 쌍씩 네트워크 상에서 직접 연결되어 있는 컴퓨터의 번호 쌍이 주어진다.\n \n# 출력 \n 1번 컴퓨터가 웜 바이러스에 걸렸을 때, 1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 첫째 줄에 출력한다.\n \n# 입력 예시 \n 7\n6\n1 2\n2 3\n1 5\n5 2\n5 6\n4 7 \n# 출력 예시 \n 4 \n# 도움말 \n  \n# 출처 \n 2004 지역본선 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nint arr[101][101];\nint check[101];\nint n,m;\nint sum;\nvoid dfs(int st)\n{\n    for(int i=1;i\u003c=n;i++)\n    {\n        if(check[i]==1) continue;\n        if(arr[st][i]==1)\n        {\n            check[i]=1;\n            sum++;\n            dfs(i);\n        }\n    }\n}\nint main()\n{\n    cin\u003e\u003en;\n    cin\u003e\u003em;\n    for(int i=0;i\u003cm;i++)\n    {\n        int t,t2;\n        cin\u003e\u003et;\n        cin\u003e\u003et2;\n        arr[t][t2]=1;\n        arr[t2][t]=1;\n    }\n    check[1]=1;\n    dfs(1);\n    cout\u003c\u003csum;\n}\n\n/**************************************************************\n\t문제번호: 4503\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1736 kb\n****************************************************************/\n\n"},{"Number":"3203","Time":"2016/07/19","Title":"트리의 후위 순회","Code":"/**************************************************************\n# 문제 설명 \n 입력된 이진 트리를 후위 순회해보자.\n후위 순회의 방법은 다음과 같다.\n1. 왼쪽 서브트리를 후위 순회한다.\n2. 오른쪽 서브 트리를 후위 순회한다.\n3. 노드를 방문한다.\n예를 들어 abcdefg가 입력되면, 다음 완전 이진 트리(Complete Binary Tree)가 구축된다.\n\n\n이 트리를 후위 순회한 결과를 출력하시오.  \n# 입력 \n 문자열이 입력된다. (1 \u003c= 문자열의 길이 \u003c= 10,000)\n알파벳의 소문자가 26자이므로 중복된 노드가 입력될 수 있다. \n# 출력 \n  후위 순회 결과를 출력한다. \n# 입력 예시 \n abcdefg \n# 출력 예시 \n debfgca \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nchar data[10001];\nint n;\nvoid frt(int node)\n{\n    if(node\u003en) return;\n    frt(node*2);\n    frt(node*2+1);\n    cout\u003c\u003cdata[node];\n}\nint main(){\n    cin\u003e\u003e(data+1);\n    n=strlen(data+1);\n    frt(1);\n}\n\n/**************************************************************\n\t문제번호: 3203\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1704 kb\n****************************************************************/\n\n"},{"Number":"3202","Time":"2016/07/19","Title":"트리의 전위 순회","Code":"/**************************************************************\n# 문제 설명 \n 입력된 이진 트리를 전위 순회해보자.\n전위 순회의 방법은 다음과 같다.\n1. 노드를 방문한다.\n2. 왼쪽 서브 트리를 전위 순회한다.\n3. 오른쪽 서브 트리를 전위 순회한다.\n예를 들어 abcdefg가 입력되면, 다음 완전 이진 트리(Complete Binary Tree)가 구축된다.\n\n\n이 트리를 전위 순회한 결과를 출력하시오.  \n# 입력 \n 문자열이 입력된다. (1 \u003c= 문자열의 길이 \u003c= 10,000)\n알파벳의 소문자가 26자이므로 중복된 노드가 입력될 수 있다. \n# 출력 \n  전위 순회한 결과를 출력한다. \n# 입력 예시 \n abcdefg \n# 출력 예시 \n abdecfg \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nchar data[10001];\nint n;\nvoid frt(int node)\n{\n    if(node\u003en) return;\n    cout\u003c\u003cdata[node];\n    frt(node*2);\n    frt(node*2+1);\n}\nint main(){\n    cin\u003e\u003e(data+1);\n    n=strlen(data+1);\n    frt(1);\n}\n\n/**************************************************************\n\t문제번호: 3202\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1704 kb\n****************************************************************/\n\n"},{"Number":"3201","Time":"2016/07/19","Title":"트리의 중위 순회","Code":"/**************************************************************\n# 문제 설명 \n 입력된 이진 트리를 중위순회해보자.\n중위 순회의 방법은 다음과 같다.\n1. 왼쪽 서브트리를 중위 순회한다.\n2. 노드를 방문한다.\n3. 오른쪽 서브 트리를 중위 순회한다.\n예를 들어 abcdefg가 입력되면, 다음 완전 이진 트리(Complete Binary Tree)가 구축된다.\n\n\n이 트리를 중위순회한 결과를 출력하시오. \n \n# 입력 \n 문자열이 입력된다. (1 \u003c= 문자열의 길이 \u003c= 10,000)\n알파벳의 소문자가 26자이므로 중복된 노드가 입력될 수 있다.\n \n# 출력 \n 중위 순회 결과를 출력한다.\n \n# 입력 예시 \n abcdefg \n# 출력 예시 \n dbeafcg \n# 도움말 \n  \n# 출처 \n moonrabbit2 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nchar data[10001];\nint n;\nvoid mid(int node)\n{\n    if(node\u003en) return;\n    mid(node*2);\n    cout\u003c\u003cdata[node];\n    mid(node*2+1);\n}\nint main(){\n    cin\u003e\u003e(data+1);\n    n=strlen(data+1);\n    mid(1);\n}\n\n/**************************************************************\n\t문제번호: 3201\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1704 kb\n****************************************************************/\n\n"},{"Number":"3022","Time":"2016/07/19","Title":"큰 수 뺄셈","Code":"/**************************************************************\n# 문제 설명 \n 큰 수 덧셈에 성공했다.\n이번에는 큰 수 뺄셈에 도전하자.\n \n# 입력 \n 큰 수 a, b가 두 줄에 걸쳐 입력된다. (a, b는 100자리 이하)\n \n# 출력 \n a-b의 결과를 출력한다.\n \n# 입력 예시 \n 11232412\n3 \n# 출력 예시 \n 11232409 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nclass BigInt\n{\npublic:\n    BigInt()\n        :_length(0),\n        _minus(false)\n    {\n    }\n    BigInt(const char* str, bool minuss)\n        :_length(strlen(str)),\n        _minus(minuss)\n    {\n        for(int i=0;i\u003clength();i++)\n        {\n            _numbers[i]=str[i]-'0';\n        }\n    }\n    ~BigInt(){}\n    int\u0026 operator[](int index)\n    {\n        return _numbers[index];\n    }\n    bool operator\u003e=(BigInt\u0026 other)\n    {\n        if(length()\u003eother.length())\n            return true;\n        if(length()\u003cother.length())\n            return false;\n        for(int i=0;i\u003clength();i++)\n        {\n            if((*this)[i]\u003eother[i])\n                return true;\n            if((*this)[i]\u003cother[i])\n                return false;\n        }\n        return true;\n    }\n    void operator-=(BigInt\u0026 other)\n    {\n        BigInt a,b;\n        if((*this)\u003e=other)\n        {\n            a=*this;\n            b=other;\n        }\n        else\n        {\n            a=other;\n            b=*this;\n            _minus=true;\n        }\n        int n1,n2;\n        n1=a.length();\n        n2=b.length();\n        while(n1!=0 || n2!=0)\n        {\n            int d1,d2;\n            if(n1!=0) d1=a[--n1];\n            else d1=0;\n            if(n2!=0) d2=b[--n2];\n            else d2=0;\n            int d=d1-d2;\n            if(d\u003c0)\n            {\n                a[n1-1]--;\n                d+=10;\n            }\n            a[n1]=d;\n        }\n\n        int newLength=0;\n        bool meatZero=false;\n        for(int i=0;i\u003ca.length();i++)\n        {\n            if(a[i]!=0)\n            {\n                meatZero=true;\n                newLength++;\n                (*this)[newLength-1]=a[i];\n            }\n            else if(meatZero)\n            {\n                newLength++;\n                (*this)[newLength-1]=a[i];\n            }\n        }\n        if(newLength==0)\n        {\n            (*this)[0]=0;\n            newLength=1;\n        }\n        _length=newLength;\n    }\n    int length() const {return _length;};\n    bool isMinus() const {return _minus;};\n    void print()\n    {\n        if(isMinus()) cout\u003c\u003c'-';\n        for(int i=0;i\u003clength();i++)\n        {\n            cout\u003c\u003c(*this)[i];\n        }\n    }\nprivate:\n    bool _minus;\n    int _length;\n    int _numbers[200];\n};\nint main()\n{\n    char num1[100],num2[100];\n    cin\u003e\u003enum1;\n    cin\u003e\u003enum2;\n    BigInt i1(num1,0);\n    BigInt i2(num2,0);\n    i1-=i2;\n    i1.print();\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3022\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1700 kb\n****************************************************************/\n\n"},{"Number":"3021","Time":"2016/07/18","Title":"큰 수 덧셈","Code":"/**************************************************************\n# 문제 설명 \n int는 32비트, long long 은 64비트라서 이 보다 더 큰 숫자는 저장할 수 없다.\n아주 큰 숫자의 덧셈을 하려고 한다.\n계산 결과를 출력하시오.\n\n \n# 입력 \n 첫째줄과 둘째줄에 큰 수 a, b가 입력된다. (a, b는 100자리 이하의 정수)\n\n \n# 출력 \n 큰 수 덧셈의 결과를 출력한다.\n \n# 입력 예시 \n 12345678910111213\n2839287 \n# 출력 예시 \n 12345678912950500 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nchar num1[100],num2[100];\nint n(char c)\n{\n    return c-'0';\n}\nvoid append(int n1,int n2,int up=0)\n{\n    if(n1==0 \u0026\u0026 n2==0){}\n    else\n    {\n        int d1,d2;\n        if(n1!=0) d1=n(num1[--n1]);\n        else d1=0;\n        if(n2!=0) d2=n(num2[--n2]);\n        else d2=0;\n        int d=d1+d2+up;\n        if(d==0) append(n1,n2,0);\n        else append(n1,n2,d/10);\n        if(n1==0 \u0026\u0026 n2==0) cout\u003c\u003cd;\n        else cout\u003c\u003cd%10;\n    }\n}\nint main()\n{\n    cin\u003e\u003enum1;\n    cin\u003e\u003enum2;\n    append(strlen(num1),strlen(num2));\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3021\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3115","Time":"2016/07/18","Title":"수식 계산 2","Code":"/**************************************************************\n# 문제 설명 \n 수식이 입력되면 수식의 결과를 출력하는 계산기를 만드시오.\n나눗셈일 경우 0으로 나누는 경우(불능)는 입력되지 않는다.\n\n예)\n123+5    ===\u003e 128\n130-(5*6)  ===\u003e  100\n  \n# 입력 \n 수식의 최대 길이는 100글자이다.\n입력으로 들어오는 숫자는 int범위를 넘어 서지 않으며, 계산 결과도 int범위를 넘지 않는다. 그리고 나눗셈의 결과도 정수로 나타낸다.(나머지 버림) \n# 출력 \n 계산 결과를 정수로 출력한다.\n \n# 입력 예시 \n 20+(6/2) \n# 출력 예시 \n 23 \n# 도움말 \n 스택을 이용하여 풀면 자료구조 공부에 도움이 됩니다.\n \n# 출처 \n  \n\n*************************************************************/\n#include\u003ciostream\u003e\n#include\u003cstring.h\u003e\n#include\u003cstack\u003e\n#include\u003cvector\u003e\n#include\u003cstdio.h\u003e\nusing namespace std;\nclass unit\n{\npublic:\n    unit(){};\n    unit(int n) : _n(n), _type(0){}\n    unit(char c) : _c(c), _type(1){}\n    int type() const {return _type;}\n    int data() {if(type()==0){return _n;} else {return _c;}}\nprivate:\n    int _type;\n    int _n;\n    char _c;\n};\nint isNumber(char c)\n{\n    return c\u003e='0'\u0026\u0026c\u003c='9';\n}\nint isYunSan(char c)\n{\n    return c=='*'||c=='-'||\n            c=='+'||c=='/';\n}\nint u(char c)\n{\n    if(c=='+') return 1;\n    if(c=='-') return 1;\n    if(c=='*') return 2;\n    if(c=='/') return 2;\n    if(c=='(') return 0;\n    if(c==')') return 0;\n}\nint chartoi(const char* str)\n{\n    int n;\n    sscanf(str,\"%d\",\u0026n);\n    return n;\n}\nint pop(stack\u003cint\u003e\u0026 st)\n{\n    int d=st.top();\n    st.pop();\n    return d;\n}\nint main()\n{\n    stack\u003cchar\u003e st;\n    char str[400];\n    cin\u003e\u003estr;\n\n    vector\u003cunit\u003e dS;\n    int index=0;\n\n    for(int i=0;i\u003cstrlen(str)+1;i++)\n    {\n        if(isNumber(str[i]))\n        {\n            int start=i;\n            for(;isNumber(str[i]);i++);\n\n            char *s=new char[10];\n            strncpy(s,str+start,i-start);\n            s[i-start+1]=0;\n            i--;\n            int d = chartoi(s);\n            dS.push_back(d);\n        }\n        else\n        {\n            if(isYunSan(str[i]))\n            {\n                if(st.empty())\n                {\n                    st.push(str[i]);\n                    continue;\n                }\n                if(u(str[i])\u003c=u(st.top()))\n                {\n                    dS.push_back(st.top());\n                    st.pop();\n                    st.push(str[i]);\n                }\n                else\n                {\n                    st.push(str[i]);\n                }\n            }\n            else if(str[i]=='(')\n            {\n                st.push(str[i]);\n            }\n            else if(str[i]==')')\n            {\n                while(st.top()!='(')\n                {\n                    dS.push_back(st.top());\n                    st.pop();\n                }\n                st.pop();\n            }\n        }\n    }\n    while(!st.empty())\n    {\n        dS.push_back(st.top());\n        st.pop();\n    }\n    stack\u003cint\u003e st2;\n    for(int i=0;i\u003cdS.size();i++)\n    {\n        if(dS[i].type()==1)\n        {\n            if(dS[i].data()=='*')\n            {\n                st2.push(pop(st2)*pop(st2));\n            }\n            else if(dS[i].data()=='+')\n            {\n                st2.push(pop(st2)+pop(st2));\n            }\n            else if(dS[i].data()=='-')\n            {\n                int d=pop(st2);\n                int d2=pop(st2);\n                st2.push(d2-d);\n            }\n            else if(dS[i].data()=='/')\n            {\n                int d=pop(st2);\n                int d2=pop(st2);\n                int d3=d2/d;\n                st2.push(d3);\n            }\n        }\n        else\n        {\n            st2.push(dS[i].data());\n        }\n    }\n    cout\u003c\u003cst2.top();\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3115\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1736 kb\n****************************************************************/\n\n"},{"Number":"3115","Time":"2016/07/18","Title":"수식 계산 2","Code":"/**************************************************************\n# 문제 설명 \n 수식이 입력되면 수식의 결과를 출력하는 계산기를 만드시오.\n나눗셈일 경우 0으로 나누는 경우(불능)는 입력되지 않는다.\n\n예)\n123+5    ===\u003e 128\n130-(5*6)  ===\u003e  100\n  \n# 입력 \n 수식의 최대 길이는 100글자이다.\n입력으로 들어오는 숫자는 int범위를 넘어 서지 않으며, 계산 결과도 int범위를 넘지 않는다. 그리고 나눗셈의 결과도 정수로 나타낸다.(나머지 버림) \n# 출력 \n 계산 결과를 정수로 출력한다.\n \n# 입력 예시 \n 20+(6/2) \n# 출력 예시 \n 23 \n# 도움말 \n 스택을 이용하여 풀면 자료구조 공부에 도움이 됩니다.\n \n# 출처 \n  \n\n*************************************************************/\n#include\u003ciostream\u003e\n#include\u003cstring.h\u003e\n#include\u003cstack\u003e\n#include\u003cvector\u003e\n#include\u003cstdio.h\u003e\nusing namespace std;\nclass unit\n{\npublic:\n    unit(){};\n    unit(int n) : _n(n), _type(0){}\n    unit(char c) : _c(c), _type(1){}\n    int type() const {return _type;}\n    int data() {if(type()==0){return _n;} else {return _c;}}\nprivate:\n    int _type;\n    int _n;\n    char _c;\n};\nint isNumber(char c)\n{\n    return c\u003e='0'\u0026\u0026c\u003c='9';\n}\nint isYunSan(char c)\n{\n    return c=='*'||c=='-'||\n            c=='+'||c=='/';\n}\nint u(char c)\n{\n    if(c=='+') return 1;\n    if(c=='-') return 1;\n    if(c=='*') return 2;\n    if(c=='/') return 2;\n    if(c=='(') return 0;\n    if(c==')') return 0;\n}\nint chartoi(const char* str)\n{\n    int n;\n    sscanf(str,\"%d\",\u0026n);\n    return n;\n}\nint pop(stack\u003cint\u003e\u0026 st)\n{\n    int d=st.top();\n    st.pop();\n    return d;\n}\nint main()\n{\n    stack\u003cchar\u003e st;\n    char str[400];\n    cin\u003e\u003estr;\n\n    vector\u003cunit\u003e dS;\n    int index=0;\n\n    for(int i=0;i\u003cstrlen(str)+1;i++)\n    {\n        if(isNumber(str[i]))\n        {\n            int start=i;\n            for(;isNumber(str[i]);i++);\n\n            char *s=new char[10];\n            strncpy(s,str+start,i-start);\n            s[i-start+1]=0;\n            i--;\n            int d = chartoi(s);\n            dS.push_back(d);\n        }\n        else\n        {\n            if(isYunSan(str[i]))\n            {\n                if(st.empty())\n                {\n                    st.push(str[i]);\n                    continue;\n                }\n                if(u(str[i])\u003c=u(st.top()))\n                {\n                    dS.push_back(st.top());\n                    st.pop();\n                    st.push(str[i]);\n                }\n                else\n                {\n                    st.push(str[i]);\n                }\n            }\n            else if(str[i]=='(')\n            {\n                st.push(str[i]);\n            }\n            else if(str[i]==')')\n            {\n                while(st.top()!='(')\n                {\n                    dS.push_back(st.top());\n                    st.pop();\n                }\n                st.pop();\n            }\n        }\n    }\n    while(!st.empty())\n    {\n        dS.push_back(st.top());\n        st.pop();\n    }\n    stack\u003cint\u003e st2;\n    for(int i=0;i\u003cdS.size();i++)\n    {\n        if(dS[i].type()==1)\n        {\n            if(dS[i].data()=='*')\n            {\n                st2.push(pop(st2)*pop(st2));\n            }\n            else if(dS[i].data()=='+')\n            {\n                st2.push(pop(st2)+pop(st2));\n            }\n            else if(dS[i].data()=='-')\n            {\n                int d=pop(st2);\n                int d2=pop(st2);\n                st2.push(d2-d);\n            }\n            else if(dS[i].data()=='/')\n            {\n                int d=pop(st2);\n                int d2=pop(st2);\n                int d3=d2/d;\n                st2.push(d3);\n            }\n        }\n        else\n        {\n            st2.push(dS[i].data());\n        }\n    }\n    cout\u003c\u003cst2.top();\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3115\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1736 kb\n****************************************************************/\n\n"},{"Number":"3127","Time":"2016/07/18","Title":"수식 계산 1","Code":"/**************************************************************\n# 문제 설명 \n 우리가 일상 생활에서 사용하는 수학식은 대부분 중위 표기법이다.\n중위 표기법은 어떠한 이항 연산에 대해 연산 대상 사이에 연산자를 표기하는 방식이다.\n예를 들면\n$ 3 + 5 * 7 $\n$ (6 + 9) * 8 $\n등이 있다.\n하지만 이런 중위 표기법은 연산자 우선 순위에 따라 괄호를 해야 한다는 단점이 있다.\n이에 반해 후위 표기법은 두 피연산자를 먼저 쓰고 그 뒤에 연산자를 표기하는 방식이다.\n위의 중위 표현을 예로 들면\n$ 3$ $5$ $7$ $* + $\n$ 6$ $9$ $+ 8 * $\n이다.\n후위 표기법은 연산자의 순서가 곧 계산 순서이므로 괄호가 필요 없다는 장점이 있다.\n후위 표기법으로 된 식을 입력 받아 계산 결과를 출력하는 프로그램을 작성하시오. \n# 입력 \n 후위 표기법으로 된 식이 입력된다.\n주어지는 식은 자연수와 덧셈, 뺄셈, 곱셈만으로 이루어져 있으며, 각 자연수와 연산자 사이는 띄어 쓰기 되어 있다.\n전체 식의 길이는 공백 문자 포함 200자 이하이다.\n식에 포함된 자연수 및 식의 계산 결과는 $2^{30}$을 넘지 않는다. \n# 출력 \n 식의 계산결과를 출력한다.\n \n# 입력 예시 \n 1 2 3 * + 4 5 - 6 * +  \n# 출력 예시 \n 1 \n# 도움말 \n   1 2 3 * + 4 5 - 6 * +\n= 1 + 2 * 3 + (4 - 5) * 6\n= 1 \n# 출처 \n SoulDomination \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstack\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nstack\u003cint\u003e st;\nint pop()\n{\n    int a=st.top();\n    st.pop();\n    return a;\n}\nint main()\n{\n    char str[200];\n    gets(str);\n    char* ptr;\n    ptr = strtok(str,\" \");\n    while(ptr!=0)\n    {\n        if(ptr[0]=='*')\n        {\n            st.push(pop()*pop());\n        }\n        else if(ptr[0]=='-')\n        {\n            int a=pop();\n            int b=pop();\n            st.push(b-a);\n        }\n        else if(ptr[0]=='+')\n        {\n            st.push(pop()+pop());\n        }\n        else\n        {\n            int i;\n            sscanf(ptr,\"%d\",\u0026i);\n            st.push(i);\n        }\n        ptr=strtok(0,\" \");\n    }\n    cout\u003c\u003cst.top();\n}\n\n/**************************************************************\n\t문제번호: 3127\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1708 kb\n****************************************************************/\n\n"},{"Number":"3127","Time":"2016/07/12","Title":"수식 계산 1","Code":"/**************************************************************\n# 문제 설명 \n 우리가 일상 생활에서 사용하는 수학식은 대부분 중위 표기법이다.\n중위 표기법은 어떠한 이항 연산에 대해 연산 대상 사이에 연산자를 표기하는 방식이다.\n예를 들면\n$ 3 + 5 * 7 $\n$ (6 + 9) * 8 $\n등이 있다.\n하지만 이런 중위 표기법은 연산자 우선 순위에 따라 괄호를 해야 한다는 단점이 있다.\n이에 반해 후위 표기법은 두 피연산자를 먼저 쓰고 그 뒤에 연산자를 표기하는 방식이다.\n위의 중위 표현을 예로 들면\n$ 3$ $5$ $7$ $* + $\n$ 6$ $9$ $+ 8 * $\n이다.\n후위 표기법은 연산자의 순서가 곧 계산 순서이므로 괄호가 필요 없다는 장점이 있다.\n후위 표기법으로 된 식을 입력 받아 계산 결과를 출력하는 프로그램을 작성하시오. \n# 입력 \n 후위 표기법으로 된 식이 입력된다.\n주어지는 식은 자연수와 덧셈, 뺄셈, 곱셈만으로 이루어져 있으며, 각 자연수와 연산자 사이는 띄어 쓰기 되어 있다.\n전체 식의 길이는 공백 문자 포함 200자 이하이다.\n식에 포함된 자연수 및 식의 계산 결과는 $2^{30}$을 넘지 않는다. \n# 출력 \n 식의 계산결과를 출력한다.\n \n# 입력 예시 \n 1 2 3 * + 4 5 - 6 * +  \n# 출력 예시 \n 1 \n# 도움말 \n   1 2 3 * + 4 5 - 6 * +\n= 1 + 2 * 3 + (4 - 5) * 6\n= 1 \n# 출처 \n SoulDomination \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstack\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nstack\u003cint\u003e st;\nint pop()\n{\n    int a=st.top();\n    st.pop();\n    return a;\n}\nint main()\n{\n    char str[200];\n    gets(str);\n    char* ptr;\n    ptr = strtok(str,\" \");\n    while(ptr!=0)\n    {\n        if(ptr[0]=='*')\n        {\n            st.push(pop()*pop());\n        }\n        else if(ptr[0]=='-')\n        {\n            int a=pop();\n            int b=pop();\n            st.push(b-a);\n        }\n        else if(ptr[0]=='+')\n        {\n            st.push(pop()+pop());\n        }\n        else\n        {\n            int i;\n            sscanf(ptr,\"%d\",\u0026i);\n            st.push(i);\n        }\n        ptr=strtok(0,\" \");\n    }\n    cout\u003c\u003cst.top();\n}\n\n/**************************************************************\n\t문제번호: 3127\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1708 kb\n****************************************************************/\n\n"},{"Number":"3125","Time":"2016/07/12","Title":"문자열 제거","Code":"/**************************************************************\n# 문제 설명 \n 지훈이는 학원에서 문자열 1차원 배열을 학습하고 있다가 궁금한게 생겼다.\nAB[A]C[D[E]F]G 라는 문자열을 보다가 [괄호와 ]괄호 사이의 문자열을 없애고 싶어진 것이다.\n그런데 실력이 모자라 실패를 하고 있다.\n지훈이를 도와 [와 ]사이의 문자열을 제거하여 출력해보자.\nAB[A]C[D[E]F]G 문자열이 입력되면 [와 ]사이의 문자열을 제거하면 다음과 같다.\nABCG \n# 입력 \n 첫줄에 문자열이 입력된다.\n문자열의 길이는 200자를 넘지 않는다.(공백은 입력되지 않는다.)\n[괄호와 ]괄호는 꼭 쌍으로 입력되지 않으며, [괄호의 개수는 ]괄호의 개수보다 크거나 같다. \n# 출력 \n 처리조건에 의해 출력된 문자열만 출력한다. \n# 입력 예시 \n AB[A]C[D[E]F]G \n# 출력 예시 \n ABCG \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstack\u003e\nusing namespace std;\nvoid setNull(char* str,int start,int end)\n{\n    for(int i=start;i\u003c=end;i++)\n    {\n        str[i]='/';\n    }\n}\nint main()\n{\n    stack\u003cint\u003e st;\n    char str[200]={0};\n    cin\u003e\u003estr;\n    for(int i=0;str[i]!=0;i++)\n    {\n        if(str[i]=='[')\n        {\n            st.push(i);\n        }\n        if(str[i]==']')\n        {\n            setNull(str,st.top(),i);\n            st.pop();\n        }\n    }\n    for(int i=0;str[i]!=0;i++)\n    {\n        if(str[i]!='/')\n        {\n            cout\u003c\u003cstr[i];\n        }\n    }\n}\n\n/**************************************************************\n\t문제번호: 3125\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1704 kb\n****************************************************************/\n\n"},{"Number":"3129","Time":"2016/07/12","Title":"올바른 괄호 2","Code":"/**************************************************************\n# 문제 설명 \n 여는 괄호와 닫는 괄호의 개수만으로는 올바른 괄호 문자열을 판단할 수 없다.\n예를 들어, )()( 이런 문자열도 개수는 같지만 올바른 괄호 문자열이 아니다.\n어떤 괄호 문자열이 주어지면 올바른 괄호 문자열인지 판단하시오.\n \n# 입력 \n '('와 ')'로 이루어딘 괄호 문자열이 입력된다.(50,000글자 이하)\n \n# 출력 \n 올바른 괄호 문자열이면 \"good\", 올바른 괄호 문자열이 아니면 \"bad\"를 출력하시오.\n \n# 입력 예시 \n ))()(( \n# 출력 예시 \n bad \n# 도움말 \n stack을 이용하면 쉽게 판단할 수 있습니다.\n \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstack\u003e\nusing namespace std;\nint main()\n{\n    int opening=0;\n    char str[50000]={0};\n    cin\u003e\u003estr;\n    int isBad=0;\n    for(int i=0;str[i]!=0;i++)\n    {\n        if(str[i]==')')\n        {\n            if(opening==0)\n            {\n                isBad=1;\n                break;\n            }\n            else\n            {\n                opening--;\n            }\n        }\n        else\n        {\n            opening++;\n        }\n    }\n    if(opening!=0)\n        isBad=1;\n    if(isBad)\n        cout\u003c\u003c\"bad\";\n    else\n        cout\u003c\u003c\"good\";\n}\n\n/**************************************************************\n\t문제번호: 3129\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4593","Time":"2016/07/09","Title":"경비원","Code":"/**************************************************************\n# 문제 설명 \n 문제 3) 경비원 (초등)\n\n\n 동근이는 무인 경비 회사 경비원으로 항상 대기하고 있다가 호출이 들어오면 경비차를 몰고 그 곳으로 달려가야 한다. 동근이가 담당하고 있는 곳은 직사각형 모양의 블록으로 블록 중간을 가로질러 차가 통과할만한 길이 없다. 이 블록 경계에 무인 경비를 의뢰한 상점들이 있다.\n 예를 들어 가로의 길이가 10, 세로의 길이가 5인 블록의 경계에 무인 경비를 의뢰한 3개의 상점이 있다고 하자. \u003c그림 1\u003e과 같이 이들은 1, 2, 3으로 표시되어 있고, 동근이는 X로 표시한 위치에 있다.\n\n\n  1번 상점에서 호출이 들어 왔을 때 동근이가 블록을 시계방향으로 돌아 이동하면 이동 거리가 12가 된다. 반면 반시계방향으로 돌아 이동하면 이동 거리는 18이 된다. 따라서 동근이가 1번 상점으로 가는 최단 거리는 12가 된다. 마찬가지로 동근이의 위치에서 2번 상점까지의 최단 거리는 6, 3번 상점까지의 최단 거리는 5가 된다.\n   \n  블록의 크기와 상점의 개수 및 위치 그리고 동근이의 위치가 주어질 때 동근이의 위치와 각 상점 사이의 최단 거리의 합을 구하는 프로그램을 작성하시오.\n\n\n\n \n# 입력 \n 첫째 줄에 블록의 가로의 길이와 세로의 길이가 차례로 주어진다. \n둘째 줄에 상점의 개수가 주어진다. 블록의 가로의 길이와 세로의 길이, 상점의 개수는 모두 100이하의 자연수이다. \n이어 한 줄에 하나씩 상점의 위치가 주어진다. 상점의 위치는 두 개의 자연수로 표시된다. \n첫째 수는 상점이 위치한 방향을 나타내는데, 1은 블록의 북쪽, 2는 블록의 남쪽, 3은 블록의 서쪽, 4는 블록의 동쪽에 상점이 있음을 의미한다. \n둘째 수는 상점이 불록의 북쪽 또는 남쪽에 위치한 경우 블록의 왼쪽 경계로부터의 거리를 나타내고, 상점이 블록의 동쪽 또는 서쪽에 위치한 경우 블록의 위쪽 경계로부터의 거리를 나타낸다. \n마지막 줄에는 동근이의 위치가 상점의 위치와 같은 방식으로 주어진다. 상점의 위치나 동근이의 위치는 블록의 꼭지점이 될 수 없다.\n \n# 출력 \n 첫째 줄에 동근이의 위치와 각 상점 사이의 최단 거리의 합을 출력한다.\n \n# 입력 예시 \n 10 5\n3\n1 4\n3 2\n2 8\n2 3 \n# 출력 예시 \n 23 \n# 도움말 \n  \n# 출처 \n 2007 지역본선 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cstdlib.h\u003e\nusing namespace std;\ntypedef struct\n{\n    int x,corner;\n}shop;\nint width,height;\nint getDistanceC(shop player,shop s,int d=0)\n{\n    if(player.corner==s.corner)\n    {\n        return abs(player.x-s.x)+d;\n    }\n    if(player.corner==1)\n    {\n        d+=width-player.x;\n        player.x=0;\n        player.corner=4;\n    }\n    else if(player.corner==4)\n    {\n        d+=height-player.x;\n        player.x=width;\n        player.corner=2;\n    }\n    else if(player.corner==2)\n    {\n        d+=player.x;\n        player.x=height;\n        player.corner=3;\n    }\n    else if(player.corner==3)\n    {\n        d+=player.x;\n        player.x=0;\n        player.corner=1;\n    }\n    return getDistanceC(player,s,d);\n}\nint getDistanceB(shop player,shop s,int d=0)\n{\n    if(player.corner==s.corner)\n    {\n        return abs(player.x-s.x)+d;\n    }\n    if(player.corner==1)\n    {\n        d+=player.x;\n        player.x=0;\n        player.corner=3;\n    }\n    else if(player.corner==3)\n    {\n        d+=height-player.x;\n        player.x=0;\n        player.corner=2;\n    }\n    else if(player.corner==2)\n    {\n        d+=width-player.x;\n        player.x=height;\n        player.corner=4;\n    }\n    else if(player.corner==4)\n    {\n        d+=player.x;\n        player.x=width;\n        player.corner=1;\n    }\n    return getDistanceB(player,s,d);\n}\nint main()\n{\n    shop player;\n    shop shops[100];\n    cin\u003e\u003ewidth;\n    cin\u003e\u003eheight;\n    int n;\n    cin\u003e\u003en;\n    int d=0;\n    for(int i=0;i\u003cn;i++)\n    {\n        cin\u003e\u003eshops[i].corner;\n        cin\u003e\u003eshops[i].x;\n    }\n    cin\u003e\u003eplayer.corner;\n    cin\u003e\u003eplayer.x;\n    for(int i=0;i\u003cn;i++)\n    {\n        d+=min(getDistanceB(player,shops[i]),\n               getDistanceC(player,shops[i]));\n    }\n    cout\u003c\u003cd;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4593\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3019","Time":"2016/07/05","Title":"스케줄 정리","Code":"/**************************************************************\n# 문제 설명 \n 순서없이 적힌 스케줄 메모가 있다.\n메모는 스케줄명, 연, 월, 일 의 형태로 구성되어 있다.\n이 메모를 토대로 날짜가 빠른 순서로 정렬하여 출력하고자 한다.\n만약 날짜가 동일한 경우 스케줄명의 사전식 순서로 오름차순 정렬한다. \n# 입력 \n 첫째줄에 데이터의 개수 n이 입력된다.(1\u003c=n\u003c=100)\n그 다음줄부터 n개의 데이터가 스케줄명, 년, 월, 일 형태로 한 줄에 하나씩 입력된다. 스케줄명은 공백없이 알파벳소문자 99글자 이하, 년월일은 유효한 날짜만 입력된다.\n \n# 출력 \n 가장 먼저 해야 할 스케줄명부터 정렬하여  출력한다.\n \n# 입력 예시 \n 5\nsleep 2014 05 23\ngolf 2014 06 02\ntravel 2015 11 22\nbaseball 2013 02 01\nstudy 2014 05 23\n \n# 출력 예시 \n baseball\nsleep\nstudy\ngolf\ntravel\n\n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\nclass schedule\n{\npublic:\n    schedule(string _name,int _year,int _month,int _day)\n    :year(_year),\n    month(_month),\n    day(_day),\n    name(_name)\n    {\n    }\n    int totalDay() const\n    {\n        return year*365+month*30+day;\n    }\n    bool operator\u003e(const schedule\u0026 d)\n    {\n        if(totalDay()==d.totalDay())\n        {\n            int na=min(name.size(),d.name.size());\n            for(int i=0;i\u003cna;i++)\n            {\n                if(name.c_str()[i]\u003ed.name.c_str()[i])\n                    return true;\n                else if(name.c_str()[i]\u003cd.name.c_str()[i])\n                    return false;\n            }\n            if(name.size()\u003ed.name.size())\n                return true;\n        }\n        else if(totalDay()\u003ed.totalDay())\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    int year,month,day;\n    string name;\nprivate:\n    schedule();\n    schedule(const schedule\u0026);\n    schedule\u0026 operator=(const schedule\u0026);\n};\nint main()\n{\n    schedule* arr[100];\n    int n;\n    cin\u003e\u003en;\n    for(int i=0;i\u003cn;i++)\n    {\n        string name;\n        int year,month,day;\n        cin\u003e\u003ename;\n        cin\u003e\u003eyear;\n        cin\u003e\u003emonth;\n        cin\u003e\u003eday;\n        schedule* s=new schedule(name,year,month,day);\n        arr[i]=s;\n    }\n    for(int i=0;i\u003cn-1;i++)\n    {\n        for(int j=0;j\u003cn-i-1;j++)\n        {\n            if((*arr[j])\u003e(*arr[j+1]))\n            {\n                swap(arr[j],arr[j+1]);\n            }\n        }\n    }\n    for(int i=0;i\u003cn;i++)\n    {\n        cout\u003c\u003carr[i]-\u003ename\u003c\u003cendl;\n    }\n}\n\n/**************************************************************\n\t문제번호: 3019\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"2055","Time":"2016/07/05","Title":"두 수의 약수 구하기","Code":"/**************************************************************\n# 문제 설명 \n 두 정수 a, b의 약수를 모두 출력하는 프로그램을 작성하시오.\n\n \n# 입력 \n 두 정수 a, b가 입력된다. (1 \u003c= a \u003c= b \u003c= 1,000,000,000)\n \n# 출력 \n 두 정수 a, b의 약수를 오름차순으로 출력한다.\n(중복된 약수는 한번만 출력한다.) \n# 입력 예시 \n 6 14 \n# 출력 예시 \n 1 2 3 6 7 14  \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint arr[100000];\nint index;\nint search(int a)\n{\n    int low=0, high = index,mid;\n    while(low\u003c=high)\n    {\n\n        mid=(low+high)/2;\n        if(arr[mid]\u003ea) high=mid-1;\n        else if(arr[mid]\u003ca) low=mid+1;\n        else return mid;\n    }\n    return -1;\n}\nvoid push(int a)\n{\n    int mid=search(a);\n    if(mid==-1)\n    {\n        if(index==0)\n        {\n            arr[0]=a;\n            index++;\n        }\n        else\n        {\n            int j;\n            for(j=index-1;j\u003e=0\u0026\u0026arr[j]\u003ea;j--)\n                arr[j+1]=arr[j];\n            arr[j+1]=a;\n            index++;\n        }\n    }\n}\nint main()\n{\n    int a,b,i;\n    cin\u003e\u003ea;\n    cin\u003e\u003eb;\n    for(i=1;i*i\u003ca;i++)\n    {\n        if(a%i==0)\n        {\n             push(i);\n            push(a/i);\n        }\n    }\n    if(i*i==a) push(i);\n    for(i=1;i*i\u003cb;i++)\n    {\n        if(b%i==0)\n        {\n            push(i);\n            push(b/i);\n        }\n    }\n    if(i*i==b) push(i);\n    for(i=0;i\u003cindex;i++)\n    {\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    }\n}\n\n/**************************************************************\n\t문제번호: 2055\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:2088 kb\n****************************************************************/\n\n"},{"Number":"2049","Time":"2016/07/05","Title":"2048게임 2","Code":"/**************************************************************\n# 문제 설명 \n 문제1에서는 판을 보고 전부 뭉칠 수 있는지를 확인했다.\n이번에는 판의 상태가 입력되면, 위로 올린 결과를 출력한다.\n예를 들어, 다음 판이 있는 경우,\n\n    \n        \n            2\n            2\n            2\n            2\n        \n        \n            2\n            2\n            2\n            2\n        \n        \n            2\n            0\n            2\n            0\n        \n        \n            4\n            0\n            0\n            0\n        \n    \n\n위로 올린 결과는,\n\n    \n        \n            4\n            4\n            4\n            4\n        \n        \n            2\n            0\n            2\n            0\n        \n        \n            4\n            0\n            0\n            0\n        \n        \n            0\n            0\n            0\n            0\n        \n    \n\n이다.\n\n \n# 입력 \n 4*4의 판이 입력된다. (게임 방법은 앞의 문제를 참고 바람)\n \n# 출력 \n 위로 한번 올린 결과를 출력한다. \n \n# 입력 예시 \n 2 2 2 2 \n0 0 0 0 \n4 4 4 4 \n4 4 4 4 \n \n# 출력 예시 \n 2 2 2 2 \n8 8 8 8 \n0 0 0 0 \n0 0 0 0 \n \n# 도움말 \n  \n# 출처 \n expoint \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nclass tile;\ntypedef tile* (*tileArr)[4];\nclass tile\n{\npublic:\n\ttile(int x, int y, int n, tileArr tArr) :_n(n), _x(x), _y(y), _arr(tArr),_isMoved(0) {};\n\tint isEmpty() { return !_n; };\n\tint N() { return _n; };\n\tvoid moveDown()\n\t{\n\t\tfor (; _y \u003e= 1; _y--)\n\t\t{\n\t\t\tif (!isEmpty())\n\t\t\t{\n\t\t\t\tif (_arr[_y-1][_x]-\u003eisEmpty())\n\t\t\t\t{\n\t\t\t\t\t_arr[_y-1][_x] = this;\n\t\t\t\t\t_arr[_y][_x] = new tile(_x, _y, 0, _arr);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (_arr[_y - 1][_x]-\u003e_n == _n\u0026\u0026 _n != 2048 \u0026\u0026 !_isMoved\u0026\u0026 !_arr[_y - 1][_x]-\u003e_isMoved)\n\t\t\t\t\t{\n\t\t\t\t\t\t_isMoved = 1;\n\t\t\t\t\t\t_n *= 2;\n\t\t\t\t\t\t_arr[_y-1][_x] = this;\n\t\t\t\t\t\t_arr[_y][_x] = new tile(_x, _y, 0, _arr);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_arr[_y - 1][_x]-\u003emoveDown();\n\t\t\t\t\t\tif(!_arr[_y-1][_x]-\u003eisEmpty()) break;\n\t\t\t\t\t\t_y++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t_arr[_y - 1][_x]-\u003emoveDown();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\nprivate:\n\ttileArr _arr;\n\tint _isMoved;\n\tint _x, _y;\n\tint _n;\n};\nint main()\n{\n\ttile* arr[4][4];\n\tint n;\n\tfor (int i = 0; i\u003c4; i++)\n\t{\n\t\tfor (int j = 0; j\u003c4; j++)\n\t\t{\n\t\t\tcin \u003e\u003e n;\n\t\t\tarr[i][j] = new tile(j, i, n, arr);\n\t\t}\n\t}\n\tfor (int i = 0; i \u003c 4; i++)\n\t{\n\t\tarr[3][i]-\u003emoveDown();\n\t}\n\tfor (int i = 0; i\u003c4; i++)\n\t{\n\t\tfor (int j = 0; j\u003c4; j++)\n\t\t{\n\t\t\tcout \u003c\u003c arr[i][j]-\u003eN() \u003c\u003c \" \";\n\t\t}\n\t\tcout \u003c\u003c endl;\n\t}\n\treturn 0;\n}\n\n\n/**************************************************************\n\t문제번호: 2049\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"2052","Time":"2016/07/05","Title":"완전수 구하기","Code":"/**************************************************************\n# 문제 설명 \n 승종이는 요즘 정보에 푹 빠져 있다.\n그런데 어느날 수학 공부를 하다 완전수를 배운 승종이는 완전수인지 아닌지 판별하는 것이 너무 어려워 골머리를 앓고 있다.\n승종이를 도와 줄 수 있는 프로그램을 작성하시오.\n 완전수는 그 수를 제외한 그 수의 약수의 합이 그 수가 되는 수를 말한다.\n예를 들어 6은 약수가 1, 2, 3, 6이고, 그 수를 제외한 약수의 합 = 1+2+3 = 6이므로 완전수이다.\n \n# 입력 \n 5개의 정수 n가 입력된다.( 0 \u003c n \u003c= 1,000,000,000)\n \n# 출력 \n 각 n이 완전수이면 \"yes\", 아니면 \"no\"를 한 줄에 하나씩 순서대로 출력한다.\n \n# 입력 예시 \n 67 6 3 55 28  \n# 출력 예시 \n no\nyes\nno\nno\nyes\n \n# 도움말 \n 6의 약수는 1,2,3,6. 1+2+3=6이므로 6은 완전수니 yes이다.\n28의 약수는 1,2,4,7,14,28, 1+2+4+7+14=28이니 28은 완전수이다. \n# 출처 \n hilululala \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(void)\n{\n\tint n;\n\tint total = 0;\n\tfor (int i = 0; i\u003c5; i++)\n\t{\n\t\tscanf(\"%d\", \u0026n);\n\t\ttotal = 1;\n\t\tfor (int i = 2; i*i\u003cn; i++)\n\t\t{\n\t\t\tif (n%i == 0)\n\t\t\t{\n\t\t\t\ttotal += i;\n\t\t\t\ttotal += n / i;\n\t\t\t}\n\t\t}\n\t\tif (i*i == n) total += i;\n\t\tif (total == n)\n\t\t\tprintf(\"yes\\n\");\n\t\telse\n\t\t\tprintf(\"no\\n\");\n\t}\n\treturn 0;\n}\n\n/**************************************************************\n\t문제번호: 2052\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"2048","Time":"2016/07/04","Title":"2048게임 1","Code":"/**************************************************************\n# 문제 설명 \n 2048이라는 게임이 있다.\n3*3의 판부터 8*8의 칸으로 할수 있는데, 이 문제에선 4*4라고 하자.\n\n2048게임 하러 가기(클릭)\n이 게임의 규칙은 이렇다.\n1.위, 아래, 왼쪽, 오른쪽으로 밀수 있다.\n2.밀 경우 모든 수가 그 방향으로 밀린다.\n3.만약 밀때 같은 숫자가 그 방향쪽으로 만나면 그수는 합쳐진다.\n4.만약 칸이 다 차고,밀어도 합칠수 없으면 게임은 끝난다.\n5.합친 수만큼 점수를 얻는다.\n\n\n일단 우린 기본으로 수의 합만 보고 하나로 통일할수 있는지 확인하는 프로그램을 만들자. \n# 입력 \n 4*4의 판을 구성하는 정수 n이 입력된다. ( n의 2 ~ 2048 사이의 2의 제곱수, 예: 2, 4, 8, 16, 32, ... , 2048)\n\n\n \n# 출력 \n 하나로 통일되면 yes, 통일이 안되면 no를 출력한다.\n \n# 입력 예시 \n 2 2 2 2\n4 4 0 0\n0 16 0 0\n16 16 64 0 \n# 출력 예시 \n yes \n# 도움말 \n  \n# 출처 \n expoint \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cstring.h\u003e\n#include \u003cmath.h\u003e\n#include \u003cassert.h\u003e\nusing namespace std;\nint sqrts(int n)\n{\n    if(n==2)\n    {\n        return 1;\n    }\n    return sqrts(n/2)+1;\n}\nint main()\n{\n    int p[11]={0};\n    int arr[4][4];\n    for(int i=0;i\u003c4;i++)\n    {\n        for(int j=0;j\u003c4;j++)\n        {\n            cin\u003e\u003earr[i][j];\n            if(arr[i][j]==0) continue;\n            p[sqrts(arr[i][j])-1]++;\n        }\n    }\n    int total=0;\n    for(int i=0;i\u003c10;i++)\n    {\n        if(p[i]==0) continue;\n        if(p[i]%2==0)\n            p[i+1]+=p[i]/2;\n        else\n            break;\n        p[i]=0;\n    }\n    for(int i=0;i\u003c11;i++)\n    {\n        total+=p[i];\n    }\n    if(total==1)\n    {\n        cout\u003c\u003c\"yes\";\n    }\n    else\n    {\n        cout\u003c\u003c\"no\";\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 2048\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"2023","Time":"2016/07/04","Title":"엑셀의 열 순서","Code":"/**************************************************************\n# 문제 설명 \n 대현이는 엑셀을 잘 한다고 자랑하기 위해 정답을 베낀 500점을 자신이 직접한 것이라며 선생님을 농락하고 있다.\n선생님은 처음엔 믿었으나 이런 일이 계속되자 거짓임을 눈치채고 대현이에게 프로그래밍 숙제를 내어 주었다.\n\n엑셀에는 행과 열이 있다.\n여기서 엑셀의 열 번호는 A, B, C, D, ..., Y, Z 순서로 되어있는데, Z 다음의 열은 AA이다.\n그리고 AA, AB, AC, ..., AY, AZ 순서이고, 그 다음은 BA, BB, BC, ..., BY, BZ, CA, CB, ... 이다.\nn이 입력되면, n번째 열의 값은 무엇인지 출력하시오.\n\n\n\n\n\n\n\n \n# 입력 \n n이 입력된다. ( 1 \u003c= n \u003c= 999,999,999 )\n \n# 출력 \n n번째 열의 값을 출력한다.\n \n# 입력 예시 \n 29 \n# 출력 예시 \n AC \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nvoid print(int n,char c)\n{\n    n--;\n    c='A'+n%26;\n    n/=26;\n    if(n!=0)\n    {\n        print(n,c);\n    }\n    cout\u003c\u003cc;\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    print(n,'A');\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 2023\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1711","Time":"2016/07/04","Title":"충돌 여부 확인","Code":"/**************************************************************\n# 문제 설명 \n 범진이는 닷지 게임을 만들기 위해 열공중이다. 닷지 게임은 아래와 같이 미사일을 피하는 게임이다.\n\n여기서 범진이는 아군 비행기와 붉은 점 미사일의 충돌 여부를 프로그래밍 해야 한다.\n아군 비행기는 사각형, 미사일은 한 점이며 (x, y)의 좌표가 입력되면 충돌여부를 결정하는 프로그램을 작성하시오. 단, 사각형 꼭지점이나 모서리에 점의 좌표가 일치하는 경우도 충돌한 것으로 본다.\n(※ 사각형의 좌표는 왼쪽 아래 꼭지점(x1, y1)과 오른쪽 위 꼭지점(x2, y2)의 좌표가 차례대로 입력된다.)\n\n예) \n\n\n\n.\n\n\n \n# 입력 \n 첫 줄에 사각형의 왼쪽 아래 좌표 (x1, y1)가 공백으로 구분되어 입력 되고,\n둘째 줄에 사각형의 오른쪽 위 좌표 (x2, y2)가 공백으로 구분되어 입력된다.\n셋째 줄에 점 미사일의 좌표 (x3, y3)가 공백으로 구분되어 입력된다.\n(모든 x, y의 값은 0보다 크다) \n# 출력 \n 충돌여부를 다음과 같이 출력하시오. \n사각형과 점이 충돌한다면 \"충돌\", 사각형과 점이 충돌하지 않는다면 \"비충돌\"을 출력하시오. \n# 입력 예시 \n 10 3\n15 8\n12 6 \n# 출력 예시 \n 충돌 \n# 도움말 \n  \n# 출처 \n 2012교내프로그래밍대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\ntypedef struct\n{\n    int minX,minY;\n    int maxX,maxY;\n}box;\ntypedef struct\n{\n    int x,y;\n}dot;\nint main()\n{\n    box b;\n    dot d;\n    cin\u003e\u003eb.minX;\n    cin\u003e\u003eb.minY;\n    cin\u003e\u003eb.maxX;\n    cin\u003e\u003eb.maxY;\n    cin\u003e\u003ed.x;\n    cin\u003e\u003ed.y;\n    if(b.minX\u003c=d.x\u0026\u0026\n       d.x\u003c=b.maxX\u0026\u0026\n       b.minY\u003c=d.y\u0026\u0026\n       d.y\u003c=b.maxY)\n    {\n        cout\u003c\u003c\"충돌\";\n    }\n    else\n    {\n        cout\u003c\u003c\"비충돌\";\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1711\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4596","Time":"2016/07/04","Title":"최대값 2","Code":"/**************************************************************\n# 문제 설명 \n 문제 1) 최대값 (중등1, 고등1)\n\n\n  \u003c그림 1\u003e과 같이 9×9 격자판에 쓰여진 81개의 자연수가 주어질 때, 이들 중 최대값을 찾고 그 최대값이 몇 행 몇 열에 위치한 수인지 구하는 프로그램을 작성하시오.\n   \n  예를 들어, 다음과 같이 81개의 수가 주어지면\n\n\n\n 이들 중 최대값은 90이고, 이 값은 5행 7열에 위치한다.\n\n\n\n \n# 입력 \n 첫 째 줄부터 아홉 번째 줄까지 한 줄에 아홉 개씩 자연수가 주어진다. 주어지는 자연수는 100보다 작다.\n \n# 출력 \n  첫째 줄에 최대값을 출력하고, 둘째 줄에 최대값이 위치한 행 번호와 열 번호를 빈칸을 사이에 두고 차례로 출력한다. \n답이 여러개인 경우 그 중 하나만 출력한다.(최대값이 두 개이상 존재하는 경우)\n \n# 입력 예시 \n 3 23 85 34 17 74 25 52 65\n10 7 39 42 88 52 14 72 63\n87 42 18 78 53 45 18 84 53\n34 28 64 85 12 16 75 36 55\n21 77 45 35 28 75 90 76 1\n25 87 65 15 28 11 37 28 74\n65 27 75 41 7 89 78 64 39\n47 47 70 45 23 65 3 41 44\n87 13 82 38 31 12 29 29 80 \n# 출력 예시 \n 90\n5 7 \n# 도움말 \n ※ Special Judge 적용됨(2013. 3. 4) \n# 출처 \n 2007 지역본선 중등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\n\nint main()\n{\n    int** arr;\n    arr=new int*[9];\n    for(int i=0;i\u003c9;i++)\n    {\n        arr[i]=new int[9];\n        memset(arr[i], 0, sizeof(int)*9);\n    }\n    for(int i=0;i\u003c9;i++)\n    {\n        for(int j=0;j\u003c9;j++)\n        {\n            cin\u003e\u003earr[i][j];\n        }\n    }\n    int max=0;\n    int maxI,maxJ;\n    for(int i=0;i\u003c9;i++)\n    {\n        for(int j=0;j\u003c9;j++)\n        {\n            if(arr[i][j]\u003emax)\n            {\n                max=arr[i][j];\n                maxI=i;\n                maxJ=j;\n            }\n        }\n    }\n    for(int i=0;i\u003c9;i++)\n    {\n        delete[] arr[i];\n    }\n    delete[] arr;\n    cout\u003c\u003cmax\u003c\u003cendl\u003c\u003c\n    maxI+1\u003c\u003c\" \"\u003c\u003cmaxJ+1;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4596\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1425","Time":"2016/07/04","Title":"자리 배치","Code":"/**************************************************************\n# 문제 설명 \n A중학교에 첫 발령을 받은 B교사는 1학년 1반 담임을 맡게 되었다.\n기대를  안고 첫 출근한 B교사는 너무 설렌 나머지 학생들이 등교하기도 전에 교실에  가서 학생들이 오기만을 기다리고 있었다.\n그리고 제일 먼저 무슨 일을 해야  될지 생각하던 중 학생들 자리 배치를 우선적으로 해야겠다고 생각했다.\n여러  가지 자리 배치 방법을 고려하다가 학생들의 키가 작은 순서대로 앞에서부터  앉히는 것이 제일 좋은 방법이라고 결정하게 되었다.\n예를 들어, 160, 165, 164, 165, 150, 165, 168, 145, 170의 학생들 키가  주어지고 한 줄에 6명씩 앉는다면 다음과 같이 앉으면 될 것이다.\n\n    \n        \n            145\n            150\n            160\n            164\n            165\n            165\n        \n        \n            165\n            168\n            170\n            \n            \n            \n        \n    \n\n\n왼쪽 위부터 차례대로 키 순서대로 앉으며 한 줄이 다 찼을 경우 다음 줄로 넘어간다. 다음 줄도 마찬가지로 왼쪽부터 채운다.\n이와 같이 학생의 키순서대로 자리를 배치하는 프로그램을 작성하시오.\n \n# 입력 \n 1. 첫 번째 줄에 학생 수(N)와 한줄에 앉을 수 있는 자리수(C)가 자연수로 주어진다. 단, (1≤N≤99), (1≤C≤10)\n2. 둘째 줄에는 N명의 학생 키들이 공백으로 구분되어 입력된다. \n# 출력 \n 학생들의 자리 배치 결과를 공백으로 분리하여 출력한다.\n(표현오류 조심 : 각 행의 마지막에 공백을 한 칸 넣어야 됨.)\n \n# 입력 예시 \n 9 6\n160 165 164 165 150 165 168 145 170  \n# 출력 예시 \n 145 150 160 164 165 165 \n165 168 170  \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003calgorithm\u003e\nusing namespace std;\n\nint main()\n{\n    int* arr;\n    int n,d;\n    cin\u003e\u003en;\n    cin\u003e\u003ed;\n    arr=new int[n];\n    for(int i=0;i\u003cn;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    for(int i=0;i\u003cn-1;i++)\n    {\n        for(int j=0;j\u003cn-i-1;j++)\n        {\n            if(arr[j]\u003earr[j+1])\n            {\n                swap(arr[j],arr[j+1]);\n            }\n        }\n    }\n    for(int i=0;i\u003cn;i++)\n    {\n        if(i%d==0 \u0026\u0026 i!=0)\n        {\n            cout\u003c\u003cendl;\n        }\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1425\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1405","Time":"2016/07/04","Title":"숫자 로테이션","Code":"/**************************************************************\n# 문제 설명 \n n개의 숫자가 입력되면,\nn개의 숫자를 왼쪽으로 하나씩 돌려서 출력하시오.\n예) 1 2 3 4 5가 입력된 경우,\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n5 1 2 3 4\n\n \n# 입력 \n 첫째 줄에 숫자의 개수 n이 입력된다.( 1 \u003c= n \u003c= 1,000)\n둘째 줄에 n개의 정수 k가 공백으로 구분되어 입력된다.(1 \u003c= k \u003c= 1,000)\n \n# 출력 \n 숫자를 로테이션한 결과를 출력한다.(단, 왼쪽으로만 돌린다.)\n \n# 입력 예시 \n 5\n1 2 3 4 5  \n# 출력 예시 \n 1 2 3 4 5 \n2 3 4 5 1 \n3 4 5 1 2 \n4 5 1 2 3 \n5 1 2 3 4 \n \n# 도움말 \n 출력할 때 각 행의 마지막에 공백이 있어야 합니다.(표현오류 조심)\n \n# 출처 \n expoint \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int* arr;\n    int n;\n    cin\u003e\u003en;\n    arr=new int[n];\n    for(int i=0;i\u003cn;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            if(j+i\u003e=n)\n            {\n                cout\u003c\u003carr[j+i-n]\u003c\u003c\" \";\n            }\n            else\n            {\n                cout\u003c\u003carr[j+i]\u003c\u003c\" \";\n            }\n        }\n        cout\u003c\u003cendl;\n    }\n    return 0;\n}\n/**************************************************************\n\t문제번호: 1405\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3014","Time":"2016/07/04","Title":"정렬을 빠르게!","Code":"/**************************************************************\n# 문제 설명 \n N개의 입력 데이터가 주어지면 정렬해서 출력하시오.\n\n입력 예)\n5\n2 5 8 1 2\n출력 예)\n1 2 2 5 8\n\n \n# 입력 \n 첫 줄에 데이터의 개수 N이 입력된다. ( 1 \u003c= N \u003c= 4,500,000 ) ※ 조건수정(2012.12.20)\n둘째 줄에 공백으로 분리되어 N개의 데이터가 입력된다. ( 데이터 값의 범위 : 0 ~ 100,000 )\n\n \n# 출력 \n 데이터를 오름차순으로 정렬하여 출력한다. \n# 입력 예시 \n 5\n2 6 4 8 6 \n# 출력 예시 \n 2 4 6 6 8  \n# 도움말 \n ※ 데이터 값의 범위가 있는 것이 힌트!\n 일반 정렬 기법으론 풀지 못합니다.(시간초과) 배열 활용.\n\n \n# 출처 \n  \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n#include \u003calgorithm\u003e\n\nusing namespace std;\nvoid quick(int *arr, int left, int right) {\n\tint i = left, j = right;\n\tint tmp;\n\tint pivot = arr[(left + right) / 2];\n\n\t/* partition */\n\twhile (i \u003c= j) {\n\t\twhile (arr[i] \u003c pivot)\n\t\t\ti++;\n\t\twhile (arr[j] \u003e pivot)\n\t\t\tj--;\n\t\tif (i \u003c= j) {\n\t\t\tswap(arr[i], arr[j]);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\n\t/* recursion */\n\tif (left \u003c j)\n\t\tquick(arr, left, j);\n\tif (i \u003c right)\n\t\tquick(arr, i, right);\n}\nint main(void)\n{\n\tint arr[4500000];\n\tint n;\n\tscanf(\"%d\", \u0026n);\n\tfor (int i = 0; i \u003c n; i++)\n\t{\n\t\tscanf(\"%d\", \u0026arr[i]);\n\t}\n\tquick(arr,0,n-1);\n\tfor (int i = 0; i \u003c n; i++)\n\t{\n\t\tprintf(\"%d \", arr[i]);\n\t}\n\treturn 0;\n}\n\n/**************************************************************\n\t문제번호: 3014\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:1984 ms\n\t메모리 사용량:18552 kb\n****************************************************************/\n\n"},{"Number":"3004","Time":"2016/07/04","Title":"데이터 재정렬","Code":"/**************************************************************\n# 문제 설명 \n 프로그래밍 문제를 풀다 보면 뒤죽박죽인 N개의 데이터를 숫자의 크기 순으로 0 ~ N-1까지의 숫자로 재정렬 해야되는 경우가 종종 있다.\n예를 들어 N=5 이고,\n50 23 54 24 123\n이라는 데이터가 있다면,\n2 0 3 1 4\n가 된다.\n데이터를 재정렬하는 프로그램을 작성하시오.\n \n# 입력 \n 첫째 줄에 데이터의 개수 N이 입력된다. ( 1 \u003c= N \u003c= 50,000)\n둘째 줄에 공백으로 분리되어 N개의 서로 다른 데이터가 입력된다. (값의 범위:0~500,000)\n \n# 출력 \n N개의 데이터를 0 ~ N-1로 재정렬하여 출력하라.\n \n# 입력 예시 \n 5\n50 23 54 24 123  \n# 출력 예시 \n 2 0 3 1 4  \n# 도움말 \n 50 23 54 24 123 에서\n23, 24, 50, 54, 123 순서로 0, 1, 2, 3, 4 가 된다.\n그리고 원래의 위치대로 출력한다.\n \n# 출처 \n  \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n#include \u003calgorithm\u003e\n\nusing namespace std;\nvoid quick(int (*arr)[2], int left, int right) {\n\tint i = left, j = right;\n\tint tmp;\n\tint pivot = arr[(left + right) / 2][0];\n\n\t/* partition */\n\twhile (i \u003c= j) {\n\t\twhile (arr[i][0] \u003c pivot)\n\t\t\ti++;\n\t\twhile (arr[j][0] \u003e pivot)\n\t\t\tj--;\n\t\tif (i \u003c= j) {\n\t\t\tswap(arr[i], arr[j]);\n\t\t\ti++;\n\t\t\tj--;\n\t\t}\n\t}\n\n\t/* recursion */\n\tif (left \u003c j)\n\t\tquick(arr, left, j);\n\tif (i \u003c right)\n\t\tquick(arr, i, right);\n}\nint main(void)\n{\n\tint arr[50000][2];\n\tint rank[50000];\n\tint n;\n\tscanf(\"%d\", \u0026n);\n\tfor (int i = 0; i \u003c n; i++)\n\t{\n\t\tscanf(\"%d\", \u0026arr[i][0]);\n\t\tarr[i][1] = i;\n\t}\n\tquick(arr,0,n-1);\n\tfor (int i = 0; i \u003c n; i++)\n\t{\n\t\trank[arr[i][1]] = i;\n\t}\n\tfor (int i = 0; i \u003c n; i++)\n\t{\n\t\tprintf(\"%d \", rank[i]);\n\t}\n\treturn 0;\n}\n\n/**************************************************************\n\t문제번호: 3004\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:32 ms\n\t메모리 사용량:1560 kb\n****************************************************************/\n\n"},{"Number":"4501","Time":"2016/07/02","Title":"백설공주와 난장이","Code":"/**************************************************************\n# 문제 설명 \n 문제1) 백설공주와 난장이 (초등1)\n안개 숲에는 백설 공주와 7명의 난장이가 함께 살고 있다.\n7명의 난장이의 키가 입력으로 주어질때 이 중 키가 가장 큰 난장이와 두 번째로 큰 난장이의 키를 출력하는 프로그램을 작성하시오.\n \n# 입력 \n 첫 째 줄부터 일곱 번째 줄까지 한 줄에 하나씩 난장이의 키가 주어진다. 주어지는 난장이의 키는 100보다 작은 자연수이다.\n \n# 출력 \n 첫째 줄에는 가장 키가 큰 난장이의 키를 출력한다. 두 번째로 키가 큰 난장이의 키를 출력한다.\n만약 가장 키가 큰 난장이가 둘 이상이라면 첫째 줄과 둘째 줄에 같은 값을 출력해야 한다.\n \n# 입력 예시 \n 79\n57\n88\n72\n95\n88\n64 \n# 출력 예시 \n 95\n88 \n# 도움말 \n  \n# 출처 \n 2004 지역본선 초등 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\nint main()\n{\n    int height[7];\n    for(int i=0;i\u003c7;i++)\n    {\n       cin\u003e\u003eheight[i];\n    }\n    for(int i=0;i\u003c6;i++)\n    {\n        for(int j=0;j\u003c6-i;j++)\n        {\n            if(height[j]\u003cheight[j+1])\n            {\n                int temp=height[j];\n                height[j]=height[j+1];\n                height[j+1]=temp;\n            }\n        }\n    }\n    cout\u003c\u003cheight[0]\u003c\u003c\"\\n\"\u003c\u003cheight[1];\n}\n/**************************************************************\n\t문제번호: 4501\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3016","Time":"2016/07/02","Title":"1등한 학생의 성적","Code":"/**************************************************************\n# 문제 설명 \n 세종이는 정보과학 선생님인 $JH$를 도와주기 위해 정보과학 성적처리 프로그램을 만들기로 했다.\n$JH$ 선생님은 특정 과목에서 $1$등한 학생이 다른 과목에서는 어떤 성적을 얻었는지 관심이 많다.\n다음 조건을 만족하는 프로그램을 작성해 보자. \n# 입력 \n 첫째 줄에 데이터의 개수 $n$ ($3 \u003c= n \u003c= 100$)\n둘째 줄부터 $n+1$줄에 학생 이름과 $3$과목 점수들이 공백으로 구분되어 입력된다. (입력 예시 참고)\n단 이름의 길이는 최대 $10$바이트 이내이다 \n# 출력 \n 첫 번째 과목을 $1$등한 학생의 이름과 두 번째, 세 번째 과목의 석차를 공백으로 구분하여 출력한다.\n단 첫 번째 과목의 $1$등은 $1$명이라고 가정한다. \n# 입력 예시 \n 4\nJeon 95 80 100\nKim 59 85 75\nLee 90 100 75\nBae 100 82 80\n \n# 출력 예시 \n Bae 3 2 \n# 도움말 \n  \n# 출처 \n wildsam \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\ntypedef struct\n{\n    char name[10];\n    int first,second,third;\n    int rankFirst,rankSecond,rankThird;\n}student;\nvoid increaseRank(int\u0026 x,int\u0026 y,int\u0026 z)\n{\n    if(x\u003cy)\n    {\n        z++;\n    }\n}\nint main()\n{\n   student students[100];\n   int size;\n   cin\u003e\u003esize;\n   for(int i=0;i\u003csize;i++)\n   {\n       cin\u003e\u003estudents[i].name;\n       cin\u003e\u003estudents[i].first;\n       cin\u003e\u003estudents[i].second;\n       cin\u003e\u003estudents[i].third;\n       students[i].rankFirst=0;\n       students[i].rankSecond=0;\n       students[i].rankThird=0;\n   }\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            increaseRank(students[i].first,students[j].first,students[i].rankFirst);\n            increaseRank(students[i].second,students[j].second,students[i].rankSecond);\n            increaseRank(students[i].third,students[j].third,students[i].rankThird);\n        }\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        if(students[i].rankFirst==0)\n        {\n            cout\u003c\u003cstudents[i].name\u003c\u003c\" \"\u003c\u003c\n            students[i].rankSecond+1\u003c\u003c\" \"\u003c\u003c\n            students[i].rankThird+1;\n            break;\n        }\n    }\n}\n/**************************************************************\n\t문제번호: 3016\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3016","Time":"2016/07/02","Title":"1등한 학생의 성적","Code":"/**************************************************************\n# 문제 설명 \n 세종이는 정보과학 선생님인 $JH$를 도와주기 위해 정보과학 성적처리 프로그램을 만들기로 했다.\n$JH$ 선생님은 특정 과목에서 $1$등한 학생이 다른 과목에서는 어떤 성적을 얻었는지 관심이 많다.\n다음 조건을 만족하는 프로그램을 작성해 보자. \n# 입력 \n 첫째 줄에 데이터의 개수 $n$ ($3 \u003c= n \u003c= 100$)\n둘째 줄부터 $n+1$줄에 학생 이름과 $3$과목 점수들이 공백으로 구분되어 입력된다. (입력 예시 참고)\n단 이름의 길이는 최대 $10$바이트 이내이다 \n# 출력 \n 첫 번째 과목을 $1$등한 학생의 이름과 두 번째, 세 번째 과목의 석차를 공백으로 구분하여 출력한다.\n단 첫 번째 과목의 $1$등은 $1$명이라고 가정한다. \n# 입력 예시 \n 4\nJeon 95 80 100\nKim 59 85 75\nLee 90 100 75\nBae 100 82 80\n \n# 출력 예시 \n Bae 3 2 \n# 도움말 \n  \n# 출처 \n wildsam \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\ntypedef struct\n{\n    char name[10];\n    int first,second,third;\n    int rankFirst,rankSecond,rankThird;\n}student;\nvoid increaseRank(int\u0026 x,int\u0026 y,int\u0026 z)\n{\n    if(x\u003cy)\n    {\n        z++;\n    }\n}\nint main()\n{\n   student students[100];\n   int size;\n   cin\u003e\u003esize;\n   for(int i=0;i\u003csize;i++)\n   {\n       cin\u003e\u003estudents[i].name;\n       cin\u003e\u003estudents[i].first;\n       cin\u003e\u003estudents[i].second;\n       cin\u003e\u003estudents[i].third;\n       students[i].rankFirst=0;\n       students[i].rankSecond=0;\n       students[i].rankThird=0;\n   }\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            increaseRank(students[i].first,students[j].first,students[i].rankFirst);\n            increaseRank(students[i].second,students[j].second,students[i].rankSecond);\n            increaseRank(students[i].third,students[j].third,students[i].rankThird);\n        }\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        if(students[i].rankFirst==0)\n        {\n            cout\u003c\u003cstudents[i].name\u003c\u003c\" \"\u003c\u003c\n            students[i].rankSecond+1\u003c\u003c\" \"\u003c\u003c\n            students[i].rankThird+1;\n            break;\n        }\n    }\n}\n/**************************************************************\n\t문제번호: 3016\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3011","Time":"2016/07/02","Title":"거품 정렬(Bubble Sort)","Code":"/**************************************************************\n# 문제 설명 \n 버블 정렬이란 이웃하는 숫자들끼리 크기를 비교하여 자리를 바꾸는 정렬 기법이다.\n버블 정렬은 구현이 쉬운 반면 속도가 빠른 편은 아니다.\n그리고 가장 큰 단점으로 정렬이 이미 다 끝났는데도, 끝까지 대소비교를 하는 문제점이 있다.\n예를 들어, 10 50 30 20 40 이 있고 오름차순으로 정렬한다면 총 4단계를 거치게되는데,\n1단계 : 10 30 20 40 50\n2단계 : 10 20 30 40 50  (정렬 완료)\n3단계 : 10 20 30 40 50\n4단계 : 10 20 30 40 50\n4단계중 이미 2단계에서 정렬이 완료가 된다.\n이 단계를 구하는것이 문제이다. 이 단계를 찾아 프로그램을 종료시키면 정렬속도를 향상 시킬수있다.\n이 단계를 찾아 내는 프로그램을 작성하시오. \n# 입력 \n 첫 줄에 데이터의 개수 n이 입력된다. (2 \u003c= n \u003c= 1,000)\n둘째 줄에 n개의 데이터가 공백을 기준으로 입력된다.\n \n# 출력 \n 정렬이 끝나는 단계를 출력한다.\n \n# 입력 예시 \n 5\n10 50 30 20 40 \n# 출력 예시 \n 2 \n# 도움말 \n  위키백과\n\n거품 정렬(위키_영문)\n거품 정렬(위키_한글)\n \n# 출처 \n 알고리즘(정렬) \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\nint main()\n{\n    int arr[1000];\n    int size;\n    cin\u003e\u003esize;\n    for(int i=0;i\u003csize;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    int i;\n    for(i=0;i\u003csize-1;i++)\n    {\n        int isArr=0;\n        for(int j=0;j\u003csize-1-i;j++)\n        {\n            if(arr[j]\u003earr[j+1])\n            {\n                int temp=arr[j];\n                arr[j]=arr[j+1];\n                arr[j+1]=temp;\n                isArr=1;\n            }\n        }\n        if(isArr==0)\n        {\n            break;\n        }\n    }\n    cout\u003c\u003ci;\n}\n/**************************************************************\n\t문제번호: 3011\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:4 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1172","Time":"2016/07/02","Title":"세 수 정렬하기","Code":"/**************************************************************\n# 문제 설명 \n 세 수를 오름차순으로 정렬하려고 한다. (낮은 숫자 -\u003e 높은 숫자)\n예)\n5 8 2   ====\u003e 2 5 8    로 출력\n\n \n# 입력 \n 세 정수가 입력된다. \n# 출력 \n 낮은 숫자 부터 출력한다.\n \n# 입력 예시 \n 8 7 6 \n# 출력 예시 \n 6 7 8 \n# 도움말 \n  숫자가 같을 때도 생각하세요~ \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int arr[3];\n    for(int i=0;i\u003c3;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    int j,key;\n    for(int i=0;i\u003c3;i++)\n    {\n        key=arr[i];\n        for(j=i-1;j\u003e=0\u0026\u0026arr[j]\u003ekey;j--)\n        {\n            arr[j+1] = arr[j];\n        }\n        arr[j+1]=key;\n    }\n    for(int i=0;i\u003c3;i++)\n    {\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    }\n}\n\n/**************************************************************\n\t문제번호: 1172\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1167","Time":"2016/07/02","Title":"두 번째로 작은 수","Code":"/**************************************************************\n# 문제 설명 \n 세 개의 숫자가 주어질 때 두번째로 작은 수를출력해보자.\n예를 들어, 5 9 2 가 있다면 두번째로 작은 수는 5이다.\n \n# 입력 \n 세 개의 정수가 공백으로 구분되어 입력된다.  \n# 출력 \n 세 개의 정수 중 두번째로 작은 숫자를 출력한다.\n \n# 입력 예시 \n 201 20 3 \n# 출력 예시 \n 20 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int arr[3];\n    for(int i=0;i\u003c3;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    int j,key;\n    for(int i=0;i\u003c3;i++)\n    {\n        key=arr[i];\n        for(j=i-1;j\u003e=0\u0026\u0026arr[j]\u003ekey;j--)\n        {\n            arr[j+1] = arr[j];\n        }\n        arr[j+1]=key;\n    }\n    cout\u003c\u003carr[1];\n}\n\n/**************************************************************\n\t문제번호: 1167\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"2603","Time":"2016/07/02","Title":"성적 그래프 출력하기","Code":"/**************************************************************\n# 문제 설명 \n Kninfo 학교에서는 10개의 과목을 시험친다.\n이번에 성적 처리를 맡게 된 vega선생님은 올해부터는 성적표를 그래프로 출력하기로 결정했다.\n하지만 일일이 그래프를 그리기에는 시간이 너무 걸린다.\nvega선생님을 위해 10개의 과목 점수가 입력되면 막대그래프로 출력하는 프로그램을 작성하시오.\n10점당 #을 출력하고, 10점 미만은 #을 출력하지 않는다. 100점은 #이 10개임.\n(그래프 형식은 아래 출력예시를 참고할것) \n# 입력 \n 10과목의 점수가 공백으로 구분되어 입력된다.\n(과목의 점수는 0~100점 사이이다.)\n \n# 출력 \n 입력된 점수에 따라 출력예시를 참고하여 막대그래프를 출력한다.\n \n# 입력 예시 \n 25 20 30 40 56 79 8 15 90 52 \n# 출력 예시 \n                     \n                #   \n                #   \n          #     #   \n          #     #   \n        # #     # # \n      # # #     # # \n    # # # #     # # \n# # # # # #     # # \n# # # # # #   # # # \n \n# 도움말 \n 2차원 배열 활용.\n각 줄의 마지막에 공백을 하나 넣어 출력해야 합니다. (안 넣으면 표현 오류 발생)\n예) printf(\"%d \", a[i][j]);\n \n# 출처 \n 2012진주시정보화경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int points[10][10]={0};\n    int point;\n    for(int i=0;i\u003c10;i++)\n    {\n        cin\u003e\u003epoint;\n        for(int j=0;j\u003cpoint/10;j++)\n        {\n            points[9-j][i]=1;\n        }\n    }\n    for(int i=0;i\u003c10;i++)\n    {\n        for(int j=0;j\u003c10;j++)\n        {\n            if(points[i][j]==1)\n            {\n                cout\u003c\u003c\"# \";\n            }\n            else\n            {\n                cout\u003c\u003c\"  \";\n            }\n        }\n        cout\u003c\u003cendl;\n    }\n}\n\n/**************************************************************\n\t문제번호: 2603\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4012","Time":"2016/07/02","Title":"석차 계산","Code":"/**************************************************************\n# 문제 설명 \n [문제 2]\n정렬되지 않은 학생들의 임의의 점수를 입력하여 석차를 계산하는 프로그램을 작성하시오. 점수는 동점이 있을 수 있으며, 이러한 경우 같은 석차로 처리한다. 예를 들어 5명의 점수 100, 90, 76, 60, 90이 입력되었다면 석차는 2등이 2명이고 3등은 없다.  (단, 점수가 가장 높은 학생을 1등으로 한다.)\n \n# 입력 \n 1) 첫 번째 줄은 처리할 점수의 개수 n ( n \u003c= 200 ) ※ 조건수정:2012.10.6\n2) 두 번째 줄은 처리할 점수 데이터 (0~100점)\n   (단, 각각의 점수는 빈칸으로 구별한다.)\n \n# 출력 \n 석차를 계산한 후 점수와 석차를  출력한다.\n \n# 입력 예시 \n 10\n60 34 55 100 90 76 60 90 80 87 \n# 출력 예시 \n 60 7\n34 10\n55 9\n100 1\n90 2\n76 6\n60 7\n90 2\n80 5\n87 4 \n# 도움말 \n  \n# 출처 \n 2006 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n\nusing namespace std;\n\nint main()\n{\n    int arr[200],ranks[200]={0};\n    int size;\n    cin\u003e\u003esize;\n    for(int i=0;i\u003csize;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            if(arr[i]\u003carr[j])\n            {\n                ranks[i]++;\n            }\n        }\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        cout\u003c\u003carr[i]\u003c\u003c\" \"\u003c\u003cranks[i]+1\u003c\u003cendl;\n    }\n}\n\n/**************************************************************\n\t문제번호: 4012\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3001","Time":"2016/06/29","Title":"선형 탐색(Linear Search)","Code":"/**************************************************************\n# 문제 설명 \n n개의 데이터가 있을 때, 특정 데이터가 어떤 위치에 있는지 찾는 것이 문제이다.\n이 특정 데이터를 찾는 방법의 가장 기본적인 방법으로 선형탐색이 있다.\n이는 데이터 셋에서 처음부터 차례대로 찾는 방법이다.\n\n \n# 입력 \n 첫째 줄에 데이터의 개수 n이 입력된다.(1 \u003c= n \u003c= 100,000)\n둘째 줄에 n개의 양의 정수 데이터가 공백으로 분리되어 입력된다.\n셋째 줄에 찾고자 하는 특정데이터 정수k 가 입력된다.\n \n# 출력 \n k를 찾았으면 데이터 k의 위치를 출력하고, 찾지 못했으면 -1을 출력한다. \n# 입력 예시 \n 10\n2 3 7 4 9 10 223 111 23 39\n111 \n# 출력 예시 \n 8 \n# 도움말 \n  \n# 출처 \n 알고리즘(선형탐색) \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int arr[100000]={0};\n    int size;\n    int location=-1;\n    cin\u003e\u003esize;\n    for(int i=0;i\u003csize;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    int n;\n    cin\u003e\u003en;\n    for(int i=0;i\u003csize;i++)\n    {\n        if(arr[i]==n)\n        {\n            location=i+1;\n            break;\n        }\n    }\n    cout\u003c\u003clocation;\n}\n\n/**************************************************************\n\t문제번호: 3001\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:12 ms\n\t메모리 사용량:1968 kb\n****************************************************************/\n\n"},{"Number":"3420","Time":"2016/06/29","Title":"하노이 탑 1","Code":"/**************************************************************\n# 문제 설명 \n 하노이 탑 문제를 프로그래밍해보자.\n\n하노이탑의 규칙은 다음과 같다.\n1. 각 탑의 제일 위의 원판만 이동할 수 있다.\n2. 한번에 하나의 원판을 이동할 수 있다.\n3. 이동하는 원판보다 작은 원판 위로는 이동할 수 없다. (반드시 큰 원판이 아래에 있어야 한다.)\n\nBy André Karwath aka Aka (자작) [CC-BY-SA-2.5], via Wikimedia Commons\n원판의 개수가 주어질 때 이동하는 최단 경로를 출력하시오.\n \n# 입력 \n 원판의 개수가 입력된다.(1\u003c=n\u003c=10)\n \n# 출력 \n 원판이 이동되는 최단 경로를 양식에 맞추어 출력하시오.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n Disk 1 : A to C\nDisk 2 : A to B\nDisk 1 : C to B\nDisk 3 : A to C\nDisk 1 : B to A\nDisk 2 : B to C\nDisk 1 : A to C\n \n# 도움말 \n 중간에 공백을 잘보고 표현 오류를 조심하시기 바랍니다.(콜론(:) 앞뒤로 공백있음)\n\n \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\n#include\u003ciostream\u003e\nusing namespace std;\nvoid hanoi(int n,char from,char mid,char to)\n{\n    if(n==1)\n    {\n        printf(\"Disk %d : %c to %c\\n\",n,from,to);\n    }\n    else\n    {\n        hanoi(n-1,from,to,mid);\n        printf(\"Disk %d : %c to %c\\n\",n,from,to);\n        hanoi(n-1,mid,from,to);\n    }\n}\nint main()\n{\n   int n;\n   cin\u003e\u003en;\n   hanoi(n,'A','B','C');\n}\n/**************************************************************\n\t문제번호: 3420\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1916","Time":"2016/06/29","Title":"(재귀함수) 피보나치 수열 (Large)","Code":"/**************************************************************\n# 문제 설명 \n 피보나치 수열이란 앞의 두 수를 더하여 나오는 수열이다.\n첫 번째 수와 두 번째 수는 모두 $1$이고, 세 번째 수부터는 이전의 두 수를 더하여 나타낸다. 피보나치 수열을 나열해 보면 다음과 같다.\n   \n$1, 1, 2, 3, 5, 8, 13 …$\n   \n자연수 $N$을 입력받아 $N$번째 피보나치 수를 출력하는 프로그램을 작성하시오.\n단, $N$이 커질 수 있으므로 출력값에 $10,009$를 나눈 나머지를 출력한다.\n※ 이 문제는 반드시 재귀함수를 이용하여 작성 해야한다.\n \n# 입력 \n 자연수 $N$이 입력된다. ($N$은 $200$보다 같거나 작다.)\n \n# 출력 \n $N$번째 피보나치 수를 출력하되, $10,009$를 나눈 나머지 값을 출력한다.\n \n# 입력 예시 \n 7 \n# 출력 예시 \n 13 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint pBo(int n,int n1=1,int n2=1,int p=1)\n{\n    if(p==n)\n    {\n        return n1;\n    }\n    else if(n\u003c=1)\n    {\n        return 1;\n    }\n    else\n    {\n        return pBo(n,n2,(n1+n2)%10009,p+1);\n    }\n}\nint main()\n{\n   int n;\n   cin\u003e\u003en;\n   cout\u003c\u003cpBo(n);\n}\n\n\n\n/**************************************************************\n\t문제번호: 1916\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"3421","Time":"2016/06/29","Title":"하노이 탑 2","Code":"/**************************************************************\n# 문제 설명 \n n이 입력으로 주어진다.   n개의 원판을 사용했을때의 하노이 탑 문제의 원판의 최소 이동 횟수를 출력한다. (단, 1\u003c=n\u003c=20) \n# 입력 \n n이 입력된다.(1\u003c=n\u003c=20)\n \n# 출력 \n 최소 이동 횟수를 출력한다.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n 7 \n# 도움말 \n  \n# 출처 \n moonrabbit2 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    cout\u003c\u003c(1\u003c\u003cn)-1;\n}\n\n/**************************************************************\n\t문제번호: 3421\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1953","Time":"2016/06/28","Title":"(재귀함수) 삼각형 출력하기 1","Code":"/**************************************************************\n# 문제 설명 \n $n$이 입력되면 다음과 같은 삼각형을 출력하시오.\n\n예)\n$n$ 이 $5$ 이면\n*\n**\n***\n****\n*****\n\n이 문제는 반복문 for, while 등을 이용하여 풀수 없습니다. \n# 입력 \n 길이 $n$이 입력된다.$(1\u003c=n\u003c=150)$\n \n# 출력 \n 삼각형을 출력한다.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n *\n**\n*** \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n/*void convert(int n,int n2)\n{\n    if(n!=1\u0026\u0026n!=0)\n    {\n        n2=n%2;\n        n/=2;\n        convert(n,n2);\n    }\n    else\n    {\n        n2=n;\n    }\n    cout\u003c\u003cn2;\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    convert(n,1);\n}\n*/\nvoid printStar(int n)\n{\n    if(n!=0)\n    {\n        cout\u003c\u003c\"*\";\n        printStar(n-1);\n    }\n}\nvoid printStars(int n,int p=1)\n{\n    if(n+1!=p)\n    {\n        printStar(p);\n        cout\u003c\u003cendl;\n        printStars(n,p+1);\n    }\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    printStars(n);\n}\n\n/**************************************************************\n\t문제번호: 1953\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1920","Time":"2016/06/28","Title":"(재귀함수) 2진수 변환","Code":"/**************************************************************\n# 문제 설명 \n 어떤 $10$진수 $n$이 주어지면 $2$진수로 변환해서 출력하시오.\n\n예)\n10    -----\u003e  1010\n0    -----\u003e  0\n1    -----\u003e  1\n2    -----\u003e  10\n1024    -----\u003e  10000000000\n이 문제는 반복문을 이용하여 풀 수 없습니다.\n \n# 입력 \n $10$진수 정수 $n$이 입력된다.\n$(0\u003c=n\u003c=2,100,000,000)$\n \n# 출력 \n $2$진수로 변환해서 출력한다.\n \n# 입력 예시 \n 7 \n# 출력 예시 \n 111 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\nvoid convert(int n,int n2)\n{\n    if(n!=1\u0026\u0026n!=0)\n    {\n        n2=n%2;\n        n/=2;\n        convert(n,n2);\n    }\n    else\n    {\n        n2=n;\n    }\n    cout\u003c\u003cn2;\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    convert(n,1);\n}\n\n/**************************************************************\n\t문제번호: 1920\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1915","Time":"2016/06/28","Title":"(재귀함수) 피보나치 수열","Code":"/**************************************************************\n# 문제 설명 \n 피보나치 수열이란 앞의 두 수를 더하여 나오는 수열이다.\n첫 번째 수와 두 번째 수는 모두 1이고, 세 번째 수부터는 이전의 두 수를 더하여 나타낸다. 피보나치 수열을 나열해 보면 다음과 같다.\n   \n1, 1, 2, 3, 5, 8, 13 …\n   \n자연수 N을 입력받아 N번째 피보나치 수를 출력하는 프로그램을 작성하시오.\n※ 이 문제는 반드시 재귀함수를 이용하여 작성 해야한다.\n \n# 입력 \n 자연수 N이 입력된다. (N은 20보다 같거나 작다.)\n \n# 출력 \n N번째 피보나치 수를 출력한다.\n \n# 입력 예시 \n 7 \n# 출력 예시 \n 13 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint pBo(int n1,int n2,int p)\n{\n    if(p==1)\n    {\n        return 1;\n    }\n    else if(p==2)\n    {\n        return n2;\n    }\n    else\n    {\n        return pBo(n2,n2+n1,p-1);\n    }\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    cout\u003c\u003cpBo(1,1,n);\n}\n\n/**************************************************************\n\t문제번호: 1915\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"4506","Time":"2016/06/28","Title":"최대공약수와 최소공배수","Code":"/**************************************************************\n# 문제 설명 \n 문제1) 최대공약수와 최소공배수 (중등1, 고등1)\n두개의 자연수를 입력받아 최대 공약수와 최소 공배수를 출력하는 프로그램을 작성하시오.\n \n# 입력 \n 입력 파일의 첫째 줄에는 두 개의 자연수가 주어진다. 이 둘은 10,000이하의 자연수이며 사이에 한 칸의 공백이 주어진다.\n \n# 출력 \n 첫째 줄에는 입력으로 주어진 두 수의 최대공약수를,둘째 줄에는 입력으로 주어진 두 수의 최소 공배수를 출력한다.\n \n# 입력 예시 \n 24 18 \n# 출력 예시 \n 6\n72 \n# 도움말 \n  \n# 출처 \n 2004 지역본선 중등 \n\n*************************************************************/\n    #include \u003ciostream\u003e\n    #include \u003cstdio.h\u003e\n    #include \u003cmath.h\u003e\n    using namespace std;\n\n    int getBigOne(int n1,int n2)\n    {\n        if(n1\u003e=n2)\n        {\n            return n1;\n        }\n        else\n        {\n            return n2;\n        }\n    }\n    int getMax(int n1,int n2,int p)\n    {\n        if(n1%p==0 \u0026\u0026 n2%p==0)\n        {\n            return p;\n        }\n        else\n        {\n            return getMax(n1,n2,p-1);\n        }\n    }\n    int getMin(int n1,int n2,int p=1)\n    {\n        while(p%n1!=0||p%n2!=0)\n        {\n            p++;\n        }\n        return p;\n    }\n    int main()\n    {\n        int n1,n2;\n        cin\u003e\u003en1;\n        cin\u003e\u003en2;\n        cout\u003c\u003cgetMax(n1,n2,getBigOne(n1,n2))\u003c\u003cendl\u003c\u003cgetMin(n1,n2);\n    }\n\n/**************************************************************\n\t문제번호: 4506\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:192 ms\n\t메모리 사용량:1816 kb\n****************************************************************/\n\n"},{"Number":"1912","Time":"2016/06/28","Title":"(재귀함수) 팩토리얼 계산","Code":"/**************************************************************\n# 문제 설명 \n 팩토리얼(!)은 다음과 같이 정의된다.\n$n!=n\\times(n-1)\\times(n-2)\\times\\cdots \\times2\\times1$\n즉, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120$ 이다.\n\n$n$이 입력되면 $n!$의 값을 출력하시오.\n이 문제는 반복문 for, while 등을 이용하여 풀수 없습니다.\n \n# 입력 \n 자연수 $n$이 입력된다. $(n \u003c= 12)$\n \n# 출력 \n $n!$의 값을 출력한다.\n \n# 입력 예시 \n 5 \n# 출력 예시 \n 120 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\n\nint getInt(int end,int start=1)\n{\n    if(start!=end)\n    {\n        return getInt(end,start+1)*start;\n    }\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    cout\u003c\u003cgetInt(n);\n}\n\n/**************************************************************\n\t문제번호: 1912\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1905","Time":"2016/06/28","Title":"(재귀함수) 1부터 n까지 합 구하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 $n$이 입력으로 들어오면 $1$부터 $n$까지의 합을 구하시오.\n이 문제는 반복문 for, while 등을 이용하여 풀수 없습니다.\n \n# 입력 \n 입력으로 자연수 $n$이 입력된다. $(1 \u003c= n \u003c= 10,000)$ \n# 출력 \n $1$부터 $n$까지의 합을 출력한다.\n \n# 입력 예시 \n 100 \n# 출력 예시 \n 5050 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\n\nint getInt(int end,int start=1)\n{\n    if(start!=end)\n    {\n        return getInt(end,start+1)+start;\n    }\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    cout\u003c\u003cgetInt(n);\n}\n\n/**************************************************************\n\t문제번호: 1905\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1960 kb\n****************************************************************/\n\n"},{"Number":"1904","Time":"2016/06/28","Title":"(재귀함수) 두 수 사이의 홀수 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 시작수($a$)와 마지막 수($b$)가 입력되면\n\n$a$부터 $b$까지의 모든 홀수를 출력하시오.\n이 문제는 반복문 for, while 등을 이용하여 풀수 없습니다. \n# 입력 \n 두 수 $a$, $b$ 가 입력된다. ($1 \u003c= a \u003c= b \u003c= 100$) \n# 출력 \n $a$~$b$의 홀수를 모두 출력한다. \n# 입력 예시 \n 2 7 \n# 출력 예시 \n 3 5 7  \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\n\nvoid printInt(int start,int end)\n{\n    if(start%2==1)\n    {\n        cout\u003c\u003cstart\u003c\u003c\" \";\n    }\n    if(start!=end)\n    {\n        printInt(start+1,end);\n    }\n}\nint main()\n{\n    int n,n2;\n    cin\u003e\u003en;\n    cin\u003e\u003en2;\n    printInt(n,n2);\n}\n\n/**************************************************************\n\t문제번호: 1904\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1902","Time":"2016/06/28","Title":"(재귀 함수) 1부터 n까지 역순으로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 $n$부터 $1$까지 출력하는 재귀함수를 설계하시오.\n이 문제는 반복문 for, while 등을 이용하여 풀수 없습니다.\n\n \n# 입력 \n 정수 n이 입력된다$(1\u003c=n\u003c=200)$\n \n# 출력 \n n부터 1까지 한 줄에 하나씩 출력한다. \n# 입력 예시 \n 10 \n# 출력 예시 \n 10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n \n# 도움말 \n  \n# 출처 \n 재귀함수  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\n\nvoid printInt(int i,int end)\n{\n    cout\u003c\u003ci\u003c\u003cendl;\n    if(i!=end)\n    {\n        printInt(i-1,end);\n    }\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    printInt(n,1);\n}\n\n/**************************************************************\n\t문제번호: 1902\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1901","Time":"2016/06/28","Title":"(재귀 함수) 1부터 n까지 출력하기","Code":"/**************************************************************\n# 문제 설명 \n $1$부터 정수 $n$까지 출력하는 재귀함수를 설계하시오.\n이 문제는 반복문 for, while 등을 이용하여 풀수 없습니다.\n\n \n# 입력 \n 정수 n이 입력된다$(1\u003c=n\u003c=200)$\n \n# 출력 \n 1부터 n까지 한 줄에 하나씩 출력한다. \n# 입력 예시 \n 10 \n# 출력 예시 \n 1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n \n# 도움말 \n  \n# 출처 \n 재귀함수  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\n\nvoid printInt(int i,int end)\n{\n    cout\u003c\u003ci\u003c\u003cendl;\n    if(i!=end)\n    {\n        printInt(i+1,end);\n    }\n}\nint main()\n{\n    int n;\n    cin\u003e\u003en;\n    printInt(1,n);\n}\n\n/**************************************************************\n\t문제번호: 1901\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1760","Time":"2016/06/28","Title":"비밀 전화번호","Code":"/**************************************************************\n# 문제 설명 \n 코드업 초등학교에 재학중인 명철이는 친구들과 함께 비밀방범대를 만들었다.\n그래서 서로 연락처를 공유하던 중, 명철이는 연락처가 새어나가지 않도록 암호로 바꿔서 공유하기로 했다.\n여기서 암호를 해독하는 방법은 다음과 같다.\n예)\n\n    \n        \n            0\n            1\n            2\n            3\n            4\n            5\n            6\n            7\n            8\n            9\n        \n        \n            l\n            o\n            h\n            c\n            g\n            p\n            d\n            a\n            b\n            k\n        \n    \n\n \n# 입력 \n 첫 번째 줄에 코드표의 문자 10개가 주어진다. (순서대로 0~9이다. 알파벳 소문자만 입력됨. 중복x)\n두번째 줄에 암호화된 전화번호 3블럭이 띄워쓰기로 구분되어 입력된다.\n \n# 출력 \n 암호를 풀은 전화번호를 출력한다. \n주의) 반드시 블럭간에 띄워쓰기를 하여 출력한다.(표현오류)\n \n# 입력 예시 \n lohcgpdabk\nlol abk abk \n# 출력 예시 \n 010 789 789 \n# 도움말 \n  \n# 출처 \n hgss1004 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\n\nint main()\n{\n    int code['z'-'a'+1]={0};\n    char c;\n    char phone[12]={0};\n    char phone2[7]={0};\n    for(int i=0;i\u003c10;i++)\n    {\n        scanf(\"%c\",\u0026c);\n        code[c-'a']=i+'0';\n    }\n    for(int i=0;i\u003c3;i++)\n    {\n        cin\u003e\u003ephone2;\n        for(int j=0;phone2[j]!=0;j++)\n        {\n            printf(\"%c\",code[phone2[j]-'a']);\n        }\n        cout\u003c\u003c\" \";\n    }\n}\n\n\n/**************************************************************\n\t문제번호: 1760\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1760","Time":"2016/06/28","Title":"비밀 전화번호","Code":"/**************************************************************\n# 문제 설명 \n 코드업 초등학교에 재학중인 명철이는 친구들과 함께 비밀방범대를 만들었다.\n그래서 서로 연락처를 공유하던 중, 명철이는 연락처가 새어나가지 않도록 암호로 바꿔서 공유하기로 했다.\n여기서 암호를 해독하는 방법은 다음과 같다.\n예)\n\n    \n        \n            0\n            1\n            2\n            3\n            4\n            5\n            6\n            7\n            8\n            9\n        \n        \n            l\n            o\n            h\n            c\n            g\n            p\n            d\n            a\n            b\n            k\n        \n    \n\n \n# 입력 \n 첫 번째 줄에 코드표의 문자 10개가 주어진다. (순서대로 0~9이다. 알파벳 소문자만 입력됨. 중복x)\n두번째 줄에 암호화된 전화번호 3블럭이 띄워쓰기로 구분되어 입력된다.\n \n# 출력 \n 암호를 풀은 전화번호를 출력한다. \n주의) 반드시 블럭간에 띄워쓰기를 하여 출력한다.(표현오류)\n \n# 입력 예시 \n lohcgpdabk\nlol abk abk \n# 출력 예시 \n 010 789 789 \n# 도움말 \n  \n# 출처 \n hgss1004 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\n\nint main()\n{\n    int code['z'-'a'+1]={0};\n    char c;\n    char phone[12]={0};\n    char phone2[7]={0};\n    for(int i=0;i\u003c10;i++)\n    {\n        scanf(\"%c\",\u0026c);\n        code[c-'a']=i+'0';\n    }\n    for(int i=0;i\u003c3;i++)\n    {\n        cin\u003e\u003ephone2;\n        for(int j=0;phone2[j]!=0;j++)\n        {\n            printf(\"%c\",code[phone2[j]-'a']);\n        }\n        cout\u003c\u003c\" \";\n    }\n}\n\n\n/**************************************************************\n\t문제번호: 1760\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1754","Time":"2016/06/28","Title":"큰 수 비교","Code":"/**************************************************************\n# 문제 설명 \n 우리는 숫자를 int나 long long으로 숫자를 처리하였다.\n이번엔 그보다 더 큰 숫자를 비교해보자.\n최대 100자리의 두 숫자가 입력되면 작은수와 큰 수를 차례대로 출력하시오.\n \n# 입력 \n 정수 두개가 입력된다.(최대 100자리) - 같은 숫자는 입력되지 않는다.\n \n# 출력 \n 작은수 큰수 순서로 출력한다.\n \n# 입력 예시 \n 9999999999999999999999999 9999999999999999999999998 \n# 출력 예시 \n 9999999999999999999999998 9999999999999999999999999 \n# 도움말 \n  \n# 출처 \n expoint \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\n\nint main()\n{\n    char n1[108]={NULL},n2[108]={NULL};\n    int o1[10]={0},o2[10]={0};\n    int n1Isbigger=0;\n    cin\u003e\u003en1;\n    cin\u003e\u003en2;\n    for(int i=0;n1[i]!=0;i+=9)\n    {\n        int p=0;\n        for(int j=8;j\u003e=0;j--)\n        {\n            if(n1[i+j]!=0)\n            {\n                o1[i/9]+=(int)(pow(10,p++))*(n1[i+j]-'0');\n\n            }\n        }\n    }\n    for(int i=0;n2[i]!=0;i+=9)\n    {\n        int p=0;\n        for(int j=8;j\u003e=0;j--)\n        {\n            if(n2[i+j]!=0)\n            {\n                o2[i/9]+=(int)(pow(10,p++))*(n2[i+j]-'0');\n            }\n        }\n    }\n    for(int i=9;i\u003e=0;i--)\n    {\n        if(o1[i]\u003eo2[i])\n        {\n            n1Isbigger=1;\n            break;\n        }\n        else if(o1[i]\u003co2[i])\n        {\n\n            break;\n        }\n    }\n    if(n1Isbigger==1)\n    {\n        cout\u003c\u003cn2\u003c\u003c\" \"\u003c\u003cn1;\n    }\n    else\n    {\n        cout\u003c\u003cn1\u003c\u003c\" \"\u003c\u003cn2;\n    }\n}\n\n\n/**************************************************************\n\t문제번호: 1754\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1892 kb\n****************************************************************/\n\n"},{"Number":"1715","Time":"2016/06/28","Title":"기약분수","Code":"/**************************************************************\n# 문제 설명 \n 용준이와 봉찬이는 분수를 아는 학생이다.ㅋ\n분수 공부를 하다가 기약분수로 만드는 프로그램을 만들기로 했다.\n분자, 분모가 입력되면 기약분수의 형태로 출력하는 프로그램을 작성하시오.\n\n.\n※ 기약분수 : 더 이상 약분할 수 없는 분수이다.\n\n\n\n예를 들어 5 / 25 를 기약분수로 바꾸면 1 / 5 이다. \n\n\n\n\n\n\n\n 5     5로 나눈다      1\n---  ----------------\u003e  ---\n25    5로 나눈다      5\n\n\n이 순서로 으로 기약분수가 된다.\n \n# 입력 \n 분자(a)와 분모(b)가 자연수로 입력된다.(단, a와 b는 같지 않고, a, b값은 10,000이하의 자연수이다.)\n \n# 출력 \n 입력된 분수를 기약분수로 출력한다. 출력 순서는 분자, 분모 순서이다.\n \n# 입력 예시 \n 5 25 \n# 출력 예시 \n 1 5 \n# 도움말 \n  \n# 출처 \n 2012교내프로그래밍대회 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\n\nint main()\n{\n    int mother,son;\n    cin\u003e\u003eson;\n    cin\u003e\u003emother;\n    int n=2;\n    int son2=son;\n    while(n!=son2+1)\n    {\n        while(mother%n==0\u0026\u0026son%n==0)\n        {\n            mother/=n;\n            son/=n;\n        }\n        n++;\n    }\n    cout\u003c\u003cson\u003c\u003c\" \"\u003c\u003cmother;\n}\n\n/**************************************************************\n\t문제번호: 1715\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1709","Time":"2016/06/28","Title":"내림차순 정렬","Code":"/**************************************************************\n# 문제 설명 \n   데이터를 입력받아 내림차순으로 정렬하는 프로그램을 작성하시오.\n \n# 입력 \n   첫줄에는 데이터의 개수를 입력받는다.(100이하의 정수)\n  다음 줄에는 데이터가 입력된다.(100이하의 정수)\n \n# 출력 \n   정렬된 데이터가 출력된다.\n \n# 입력 예시 \n 7\n51 44 81 1 9 12 25 \n# 출력 예시 \n 81 51 44 25 12 9 1  \n# 도움말 \n  \n# 출처 \n 2012 3학년 프그 수행 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\n\nint main()\n{\n    int arr[100];\n    int size;\n    cin\u003e\u003esize;\n    for(int i=0;i\u003csize;i++)\n    {\n        cin\u003e\u003earr[i];\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            if(arr[i]\u003earr[j])\n            {\n                int temp=arr[i];\n                arr[i]=arr[j];\n                arr[j]=temp;\n            }\n        }\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        cout\u003c\u003carr[i]\u003c\u003c\" \";\n    }\n}\n\n/**************************************************************\n\t문제번호: 1709\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1708","Time":"2016/06/28","Title":"순위 구하기","Code":"/**************************************************************\n# 문제 설명 \n  학생의 점수를 입력받아 순위를 구하는 프로그램을 작성하시오. \n동점자의 경우 같은 순위를 부여한다. \n(예를 들어, 85 100 85 74 점이면, 2등 1등 2등 4등 과 같이 순위가 매겨진다.)\n \n# 입력 \n 첫 줄에 학생의 수가 입력된다.(1000이하의 정수)\n   다음줄에는 각 학생의 점수가 주어진다.\n \n# 출력 \n 입력된 순서대로 각 학생이 몇 등인지 출력한다.\n \n# 입력 예시 \n 5\n97 65 84 84 91\n \n# 출력 예시 \n 97 1\n65 5\n84 3\n84 3\n91 2\n \n# 도움말 \n  \n# 출처 \n 2012 3학년 프그 수행 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\n\nint main()\n{\n    int student[1000]={0};\n    int ranks[1000]={0};\n    int total;\n    cin\u003e\u003etotal;\n    int count=total;\n    while(count--)\n    {\n        cin\u003e\u003estudent[count];\n    }\n    for(int i=0;i\u003ctotal;i++)\n    {\n        for(int j=0;j\u003ctotal;j++)\n        {\n            if(i==j){}\n            else if(student[i]\u003cstudent[j])\n            {\n                ranks[i]++;\n            }\n        }\n    }\n    for(int i=total-1;i\u003e=0;i--)\n    {\n        cout\u003c\u003cstudent[i]\u003c\u003c\" \"\u003c\u003cranks[i]+1\u003c\u003cendl;\n    }\n}\n\n/**************************************************************\n\t문제번호: 1708\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:16 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1661","Time":"2016/06/27","Title":"파싱(parsing) 2","Code":"/**************************************************************\n# 문제 설명 \n 이번에는 정수, 컴마(,), 공백, 세미콜론(;)이 입력된다.\n컴마는 없애고, 공백은 무시하고, 세미콜론(;)은 줄을 바꾼다.\n예를 들어 입력이\n4,52,   600;  -5, 0\n인 경우,\n4 52 600 \n-5 0 \n을 출력한다. \n# 입력 \n 정수와 컴마(,), 세미콜론(;)으로 이루어진 문자열이 입력된다.(최대길이 100글자)\n \n# 출력 \n 파싱한 결과를 출력한다. \n# 입력 예시 \n 4,52,   600;  -5, 0\n \n# 출력 예시 \n 4 52 600 \n-5 0  \n# 도움말 \n 각 줄의 마지막에 공백을 출력해야 한다.(표현오류 조심)\n \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\nusing namespace std;\nint main()\n{\n    char ch[105];\n    gets(ch);\n    for(int i=0;ch[i]!=NULL;i++)\n    {\n        if(ch[i]==',')\n        {\n            cout\u003c\u003c\" \";\n        }\n        else if(ch[i]==';')\n        {\n            cout\u003c\u003c\" \"\u003c\u003cendl;\n        }\n        else if(ch[i]==' ')\n        {\n        }\n        else\n        {\n            cout\u003c\u003cch[i];\n        }\n    }\n    cout\u003c\u003c\" \";\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1661\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1660","Time":"2016/06/27","Title":"파싱(parsing) 1","Code":"/**************************************************************\n# 문제 설명 \n 문자열을 파싱해보자.\n입력되는 글자는 정수, 컴마(,)이다.\n예를 들어 입력이\n4,52,600,-5,0\n인 경우,\n4 52 600 -5 0\n을 출력한다.\n\n\n \n# 입력 \n 정수와 컴마로 이루어진 문자열이 공백없이 입력된다.(최대길이 100글자)\n \n# 출력 \n 컴마(,)를 분리한 결과를 출력한다.\n \n# 입력 예시 \n 4,52,600,-5,0 \n# 출력 예시 \n 4 52 600 -5 0  \n# 도움말 \n 출력의 마지막에 공백을 출력한다. \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    char ch[105];\n    scanf(\"%s\",ch);\n    for(int i=0;ch[i]!=NULL;i++)\n    {\n        if(ch[i]==',')\n        {\n            cout\u003c\u003c\" \";\n        }\n        else\n        {\n            cout\u003c\u003cch[i];\n        }\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1660\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1625","Time":"2016/06/27","Title":"자릿수의 합 2","Code":"/**************************************************************\n# 문제 설명 \n n개의 자연수(k)가 한 줄에 하나씩 입력된다.\n각 k에 대해 각 자릿수의 합이 한 자릿수가 될 때 까지 각각 계산하여 하나씩 출력하시오.\n\n \n# 입력 \n 첫째 줄에 자연수의 개수 n이 입력된다.( 1 \u003c= n \u003c= 6,000,000 )\n둘째 줄 ~ n+1째 줄에 자연수 k가 입력된다.( 각 k는 1 ~ 100,000) \n# 출력 \n n행에 걸쳐 각 k에 대한 자릿수를 계산하여 출력한다.\n \n# 입력 예시 \n 3\n123\n1234\n1\n \n# 출력 예시 \n 6\n1\n1\n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint main()\n{\n    unsigned int size;\n    unsigned int num,num2=0;\n    scanf(\"%d\",\u0026size);\n    for(int j=0;j\u003csize;j++){\n        scanf(\"%d\",\u0026num);\n        while(1)\n        {\n            while(num)\n            {\n                num2+=num % 10;\n                num = num / 10;\n            }\n            num=num2;\n            num2=0;\n            if(num%10==num) break;\n        }\n        printf(\"%d\\n\",num);\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1625\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:1772 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1625","Time":"2016/06/27","Title":"자릿수의 합 2","Code":"/**************************************************************\n# 문제 설명 \n n개의 자연수(k)가 한 줄에 하나씩 입력된다.\n각 k에 대해 각 자릿수의 합이 한 자릿수가 될 때 까지 각각 계산하여 하나씩 출력하시오.\n\n \n# 입력 \n 첫째 줄에 자연수의 개수 n이 입력된다.( 1 \u003c= n \u003c= 6,000,000 )\n둘째 줄 ~ n+1째 줄에 자연수 k가 입력된다.( 각 k는 1 ~ 100,000) \n# 출력 \n n행에 걸쳐 각 k에 대한 자릿수를 계산하여 출력한다.\n \n# 입력 예시 \n 3\n123\n1234\n1\n \n# 출력 예시 \n 6\n1\n1\n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint main()\n{\n    int size;\n    int num,num2=0;\n    scanf(\"%d\",\u0026size);\n    for(int j=0;j\u003csize;j++){\n        scanf(\"%d\",\u0026num);\n        while(1)\n        {\n            while(num)\n            {\n                num2+=num % 10;\n                num = num / 10;\n            }\n            num=num2;\n            num2=0;\n            if(num%10==num) break;\n        }\n        printf(\"%d\\n\",num);\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1625\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:1528 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1620","Time":"2016/06/27","Title":"자릿수의 합","Code":"/**************************************************************\n# 문제 설명 \n 어떤 수 n이 입력되면 n의 각 자릿수의 합이 한 자리가 될때까지 계산하여 출력하시오.\n\n예) 1234567\n1234567 → 1+2+3+4+5+6+7 = 28 → 2 + 8 = 10 → 1 + 0 = 1\n \n# 입력 \n 자연수 n이 입력된다. (1 \u003c= n \u003c= 10,000,000)\n \n# 출력 \n 자릿수의 합이 한자리가 될때까지 계산하여 출력한다.\n \n# 입력 예시 \n 1234567 \n# 출력 예시 \n 1 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cvector\u003e\nusing namespace std;\nint main()\n{\n    int num,i,num2=0;\n    cin\u003e\u003enum;\n    while(1)\n    {\n        while(num)\n        {\n            num2+=num %10;\n            num = num / 10;\n        }\n        num=num2;\n        num2=0;\n        if(num%10==num) break;\n    }\n    cout\u003c\u003cnum;\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1620\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1523","Time":"2016/06/27","Title":"와드 설치","Code":"/**************************************************************\n# 문제 설명 \n Roit games라는 회사에서 만든 대작. 리그오브레전드\n2년 전부터 사람 인생을 꼬박꼬박 망치고 있다는 악마의 게임이다. 이 게임에서 가장 중요한 요소는 바로 시야\n그 시야를 장악하기 위해서는 '와드' 아이템이 있다. 그 아이템을 사고 원하는 위치에 설치하면 그 반경을 일정 시간동안 밝혀 준다고 한다.\n철수는 리그오브레전드의 브론즈 이다. 철수의 친구 영희는 챌린저 이며 매일 매일 브론즈에서 나오고 싶다는 철수의 말에 와드를 연구해 보라 라는 말을 들었고 그 와드를 연구하기 위하여 프로그램을 작성 하기로 했다.  그 프로그램은 이렇다.\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n\n이렇게 된 9 * 9판에서 한곳에 와드를 설치해보자\n\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 1 2 2 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 2 2 2 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n와드를 1이라 가정하고\n저렇게 와드를 설치하면 \n2의 위치와 1의 위치 전부 시야를 밝힌다고 한다.\n단 와드의 변수는 부쉬이다\n\n시야 한에 부쉬를 설치해보자\n\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 1 2 2 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 3 3 3 3 3\n0 0 0 0 3 3 3 3 3\n0 0 0 0 3 3 3 3 3\n부쉬를 3이라 가정하자\n부쉬밖에 와드를 설치하면 2의 시야는 밝힐수 있지만 3의 위치인 부쉬는 밝힐수 없다\n\n단,\n\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 4 3 3 3 3\n0 0 2 2 3 3 3 3 3\n0 0 2 2 3 3 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n문제에 대한 이해를 위하여 부쉬 + 와드의 위치는 4로 표현한다\n이렇게 부쉬 안에 와드를 설치하면\n그 와드가 밝힐수 있는 범위 + 지금 내가 속해있는 부쉬 전부를 밝혀준다.\n\n하지만 롤은 또 체계적으로 구성된 게임이기에 와드를 무력화 시켜주는 렌즈가 있다.\n렌즈는 와드에 비해 비교적 간단하다\n\n0 0 0 0 0 b b b b\n0 0 0 0 0 b b a b\n0 0 2 2 2 c c b b\n0 0 2 2 2 c c b b\n0 0 2 2 1 2 2 0 0\n0 0 2 2 2 2 2 0 0\n0 0 2 2 2 2 2 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n\n렌즈의 위치를 a라고 하고 렌즈의 영향범위는 b 와드가 밝혀줄수 있는 시야 + 렌즈의 영향범위는 c라 하면, c의 범위는 와드가 밝혀 줄수 있는 범위에서 제외된다고 한다.\n즉 렌즈의 영향범위 안에 와드가 밝혀줄수 있는 범위가 포함되어 있으면 그 범위는 와드가 밝혀 줄수 있는 범위에서 제외되는 것이다.\n또 하나의 경우인 렌즈의 영향범위에 와드가 포함되있을 경우이다 만약에 그런 경우에는 와드는 즉시 삭제되어 와드의 기능을 잃어 버린다고 한다.\n철수를 위하여 와드가 밝혀 줄 수 있는 넓이를 계산하여라.\n \n# 입력 \n 첫쨋줄에 와드의 위치인 a1 a2를\n둘쨋줄에 렌즈의 위치인 b1 b2가 입력된다\n셋쨋줄과 넷쨋줄에는 부쉬의 가장 왼쪽위인 c1,  c2와 가장 오른쪽 아래의 위치인 d1, d2가 입력된다.(부쉬는 직사각형이다.)\n(1 \u003c= a1, a2, b1, b2, c1, c2, d1, d2 \u003c= 9 )\n \n# 출력 \n 와드가 밝혀줄 수 있는 칸의 수를 출력하여라.\n \n# 입력 예시 \n 5 5\n8 8\n3 1\n5 5\n \n# 출력 예시 \n 27 \n# 도움말 \n  \n# 출처 \n rodlxm973 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cmath.h\u003e\nusing namespace std;\ntypedef struct\n{\n    int x,y;\n}vec2;\nint isNotTrash(int x)\n{\n    return x\u003e=0\u0026\u0026x\u003c=8;\n}\nvoid cinVec2(vec2\u0026 v)\n{\n    cin\u003e\u003ev.x;\n    cin\u003e\u003ev.y;\n    v.x--;v.y--;\n}\nint main()\n{\n    int arr[9][9]={0};\n    int totalWardSee=0;\n    int wardIsInBush=0;\n    vec2 ward;\n    cinVec2(ward);\n    vec2 lens;\n    cinVec2(lens);\n    vec2 bush1;\n    vec2 bush2;\n    cinVec2(bush1);\n    cinVec2(bush2);\n    for(int i=lens.y-2;i\u003c=lens.y+2;i++)\n    {\n        for(int j=lens.x-2;j\u003c=lens.x+2;j++)\n        {\n            if(isNotTrash(i)\u0026\u0026isNotTrash(j))\n            {\n                arr[i][j]=2;\n                if(i==ward.y\u0026\u0026j==ward.x)\n                {\n                    ward.x=-1;\n                }\n            }\n        }\n    }\n    if(ward.x!=-1)\n    {\n        for(int i=bush1.y;i\u003c=bush2.y;i++)\n        {\n            for(int j=bush1.x;j\u003c=bush2.x;j++)\n            {\n                if(i==ward.y\u0026\u0026j==ward.x)\n                {\n                    wardIsInBush=1;\n                }\n                if(arr[i][j]!=2)\n                {\n                    arr[i][j]=3;\n                }\n            }\n        }\n        if(wardIsInBush)\n        {\n            for(int i=bush1.y;i\u003c=bush2.y;i++)\n            {\n                for(int j=bush1.x;j\u003c=bush2.x;j++)\n                {\n                    if(arr[i][j]!=2)\n                    {\n                        totalWardSee++;\n                    }\n                }\n            }\n        }\n        for(int i=ward.y-2;i\u003c=ward.y+2;i++)\n        {\n            for(int j=ward.x-2;j\u003c=ward.x+2;j++)\n            {\n                if(isNotTrash(i)\u0026\u0026isNotTrash(j))\n                {\n                    if(arr[i][j]==3){}\n                    else if(arr[i][j]==2){}\n                    else{\n                        totalWardSee++;\n                    }\n                }\n            }\n        }\n    }\n    cout\u003c\u003ctotalWardSee;\n}\n\n/**************************************************************\n\t문제번호: 1523\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1521","Time":"2016/06/27","Title":"인삼밭(택배 수령)","Code":"/**************************************************************\n# 문제 설명 \n 철수는 지난해부터 아버지의 $K \\times K$ 크기의 인삼밭을 물려받아 농사를 짓고 있다.\n어느 날 철수는 인삼밭을 살펴보다가 햇빛 가리개가 설치되어 있지 않다는 것을 알아챘다.\n철수는 한창 자라고 있는 인삼에만 햇빛 가리개를 설치하려고 한다.\n불행하게도 철수는 인삼 농사를 시작한지 얼마 되지 않아, 인삼이 자랐는지 다 자라지 않았는지 모른다.\n철수는 $N$일 뒤에 택배로 오는 햇빛 가리개를 설치해야 하는 인삼의 개수를 알고 싶어 한다.\n우리가 철수를 도와주자. 인삼이 없거나 너무 많이 자라서 농사에 실패한 인삼에는 햇빛 가리개를 설치할 수 없다.  \n# 입력 \n 인삼밭의 크기인 $K(0 \u003c K \u003c 50)$가 첫 번째 줄에 입력되고,\n택배가 오는데 걸리는 날짜의 수 $N(0 \u003c N \u003c 10)$이 두 번째 줄에 입력된다.\n그 다음 세 번째 줄부터 $10$줄에 걸쳐 인삼밭의 정보를 입력한다.$ -1$은 인삼이 없는 곳이고, 인삼의 숫자가 $0~5$이면 적당히 자란 것이며, $6$이상 이면 농사에 실패한 것이다. 인삼은 하루가 지날 때 마다 $1$씩 자란다. \n# 출력 \n 햇빛 가리개가 필요한 인삼의 개수를 출력한다. 없다면 $0$을 출력한다. \n# 입력 예시 \n 5 2\n-1 -1 0 6 7\n0 0 -1 1 3 \n-1 1 1 3 4\n 0 3 2 4 -1\n-1 -1 -1 -1 -1 \n# 출력 예시 \n 11 \n# 도움말 \n  \n# 출처 \n tmdgh1110 \n\n*************************************************************/\n#include \u003ciostream\u003e\nusing namespace std;\n\nint main()\n{\n    int arr[50][50];\n    int rLayer=0;\n\n    int size;\n    cin\u003e\u003esize;\n\n    int rDay;\n    cin\u003e\u003erDay;\n\n    int insam;\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            cin\u003e\u003einsam;\n            if(insam!=-1)\n            {\n                insam+=rDay;\n                if(insam\u003c=5)\n                {\n                    rLayer++;\n                }\n            }\n        }\n    }\n    cout\u003c\u003crLayer;\n}\n\n/**************************************************************\n\t문제번호: 1521\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1520","Time":"2016/06/27","Title":"생명 게임 2","Code":"/**************************************************************\n# 문제 설명 \n 생명 게임을 일반화 시켜보자.\n이번에는 격자판의 크기 a * b가 주어지고,\n생명이 태어나기 위한 조건(x), 생명을 유지하기 위한 최소 조건(y), 생명이 죽는 최소 조건(z)이 입력으로 주어진다.\n룰은 아래 링크를 따라 생명게임 1을 참고하고(생명게임 1에서 조건들을 일반화 시킴),\nk세대가 지난 후의 모습을 출력하시오. \n\n\n참고) 생명게임 1\n\n \n# 입력 \n 첫번째 줄에 격자판의 크기 행 a, 열 b가 입력된다. (1\u003c=a\u003c=170, 1\u003c=b\u003c=170)\n두번째 줄에는 생명이 태어나기 위한 이웃의 수 x, 생명이 살기 위해 필요한 최소 이웃 수 y, 생명이 죽는 최소 이웃수 z가 입력된다. (0 \u003c= x, y, z \u003c= 8)\n세번째 줄부터는 a*b 격자판의 크기에 격자값이 입력된다. 1은 생명이 존재하는 것이고, 0은 생명이 존재하지 않는다는 것이다.\n마지막 줄에 k가 입력된다. ( 1 \u003c= k \u003c= 1,000 ) \n# 출력 \n k 세대가 지난 후의 모습을 출력하시오.\n \n# 입력 예시 \n 5 5\n2 1 5\n1 1 1 0 0\n0 1 0 1 1\n0 0 1 1 0\n0 1 0 1 0\n0 0 1 1 1\n1 \n# 출력 예시 \n 1 1 1 0 1 \n0 1 0 1 1 \n1 0 0 1 0 \n0 1 0 0 0 \n0 1 1 1 1 \n \n# 도움말 \n 격자판의 크기 5*5가 입력됩니다.\n주변에 2마리의 생명이 존재하면 생명이 탄생하고,\n생명을 유지하기 위해선 최소 1명의 이웃이 있어야 되고,\n5명 이상의 이웃이 있을 시 죽습니다.\n한 세대가 지난 후에 생명이 있는 경우를 1, 없는 경우를 0으로 출력합니다.\nk가 1이므로 1세대 지난 후의 모습을 출력한 것입니다. \n# 출처 \n gbs91413 \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n#include \u003cmalloc.h\u003e\n\nint **arr;\nint **arr2;\nint getSurrounding(int y,int x)\n{\n    return arr[y-1][x-1]+arr[y-1][x]+arr[y-1][x+1]+\n            arr[y][x-1]+arr[y][x+1]+\n            arr[y+1][x-1]+arr[y+1][x]+arr[y+1][x+1];\n}\nint** arrMalloc(int sizeY,int sizeX)\n{\n    int **arr3 = new int*[sizeY];\n    for(int i=0; i\u003csizeY; i++){\n        arr3[i] = new int[sizeX];\n        memset(arr3[i],0,sizeof(int)*sizeX);\n    }\n    return arr3;\n}\nint main()\n{\n    int n,n2;\n    int x,y,z;\n    scanf(\"%d %d\",\u0026n,\u0026n2);\n    arr = arrMalloc(n+2,n2+2);\n    arr2 = arrMalloc(n+2,n2+2);\n\n    scanf(\"%d\", \u0026x);\n    scanf(\"%d\", \u0026y);\n    scanf(\"%d\", \u0026z);\n\n    for(int i=1;i\u003cn+1;i++)\n    {\n        for(int j=1;j\u003cn2+1;j++)\n        {\n            scanf(\"%d\",\u0026arr[i][j]);\n        }\n    }\n    int s;\n    scanf(\"%d\",\u0026s);\n    for(int d=0;d\u003cs;d++)\n    {\n        for(int i=1;i\u003cn+1;i++)\n        {\n            for(int j=1;j\u003cn2+1;j++)\n            {\n                if(arr[i][j]==1)\n                {\n                    if(getSurrounding(i,j)\u003e=y)\n                    {\n                        arr2[i][j]=1;\n                    }\n                    if(getSurrounding(i,j)\u003e=z)\n                    {\n                        arr2[i][j]=0;\n                    }\n                }\n                else if(arr[i][j]==0)\n                {\n                    if(getSurrounding(i,j)==x)\n                    {\n                        arr2[i][j]=1;\n                    }\n                }\n            }\n        }\n        arr=arr2;\n        arr2=arrMalloc(n+2,n2+2);\n    }\n\n    for(int i=1;i\u003cn+1;i++, puts(\"\"))\n    {\n        for(int j=1;j\u003cn2+1;j++)\n        {\n            printf(\"%d \",arr[i][j]);\n        }\n    }\n}\n\n/**************************************************************\n\t문제번호: 1520\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:344 ms\n\t메모리 사용량:52300 kb\n****************************************************************/\n\n"},{"Number":"1515","Time":"2016/06/25","Title":"생명 게임 1","Code":"/**************************************************************\n# 문제 설명 \n 생명 게임은 25×25 격자에서 하는 게임이다.\n각 칸에는 최대 1마리의 생명이 존재 할 수 있으며, 한 \"세대\"가 지날때 마다 생명이 탄생하거나 죽는다.\n생명이 탄생하거나 죽는 조건은 다음과 같다:\n\n1. 생명이 없는 칸의 주위 8칸에 정확히 3마리의 생명이 존재하는 경우 다음 세대에 그 칸에서 생명이 탄생한다.\n2. 생명이 있는 칸의 주위 8칸에 4마리 이상 또는 1마리 이하의 생명이 존재하는 경우 다음 세대에 그 칸의 생명은 죽는다.\n3. 생명이 있는 칸의 주위 8칸에 2마리 또는 3마리의 생명이 존재하는 경우 다음 세대에 그 칸의 생명은 생존한다.\n\n25×25 격자의 생명의 위치가 주어질 때, 다음 세대의 모습을 출력하시오. \n# 입력 \n 25x25격자 정보가 입력된다. 총 25행, 25열이 입력된다.\n생명이 있는 경우 1, 생명이 없는 경우 0으로 표시하며, 각 정보는 띄어쓰기로 구분된다. \n# 출력 \n 다음 세대의 25×25 격자의 모습을 출력한다.\n역시 마찬가지로 생명이 있는 경우 1, 생명이 없는 경우 0으로 표시한다. \n# 입력 예시 \n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 \n0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 1 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 \n0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 \n0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 \n0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n \n# 출력 예시 \n 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 \n0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 \n0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 \n0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 \n0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n \n# 도움말 \n 출력할때 각 행의 마지막 25열의 정보(1또는 0)를 출력 후 반드시 공백을 출력해야 합니다.(표현오류때문)\n \n# 출처 \n SoulDomination \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint arr2[27][27]={0};\nint arr[27][27]={0};\nint getSurrounding(int y,int x)\n{\n    return arr[y-1][x-1]+arr[y-1][x]+arr[y-1][x+1]+\n            arr[y][x-1]+arr[y][x+1]+\n            arr[y+1][x-1]+arr[y+1][x]+arr[y+1][x+1];\n}\nint main()\n{\n    for(int i=1;i\u003c26;i++)\n    {\n        for(int j=1;j\u003c26;j++)\n        {\n            scanf(\"%d\",\u0026arr[i][j]);\n        }\n    }\n    for(int i=1;i\u003c26;i++)\n    {\n        for(int j=1;j\u003c26;j++)\n        {\n            if(arr[i][j]==1)\n            {\n                if(getSurrounding(i,j)\u003e=4 || getSurrounding(i,j) \u003c=1)\n                {\n                    arr2[i][j]=0;\n                }\n                else\n                {\n                    arr2[i][j]=1;\n                }\n            }\n            else if(arr[i][j]==0)\n            {\n                if(getSurrounding(i,j)==3)\n                {\n                    arr2[i][j]=1;\n                }\n            }\n        }\n    }\n    for(int i=1;i\u003c26;i++, puts(\"\"))\n    {\n        for(int j=1;j\u003c26;j++)\n        {\n            printf(\"%d \",arr2[i][j]);\n        }\n    }\n}\n\n/**************************************************************\n\t문제번호: 1515\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1096 kb\n****************************************************************/\n\n"},{"Number":"1514","Time":"2016/06/25","Title":"레이저 체스","Code":"/**************************************************************\n# 문제 설명 \n 맨사들이 주로 즐겨 한다는 레이저 체스 게임.\n레이저 체스는 레이저 장기라는 이름으로 더 지니어스의 데스매치 게임으로 나오기도 했다\n그 레이저 체스에는 스플리터라는 장치가 있다\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0 \n이렇게 $7*7$의 판이 있다고 하자.\n여기에 화살표 방향으로 레이저를 쏘면, (레이저는 $1$로 표시)\n 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0\n 1 1 1 1 1 1 1  --\u003e 레이저 방향\n 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0\n 0 0 0 0 0 0 0 \n이렇게 된다.\n그런데 중간에 스필리터를 끼워 넣으면, (스플리터는 $2$로 표시)\n 0 0 0 1 0 0 0\n 0 0 0 1 0 0 0\n 0 0 0 1 0 0 0\n 1 1 1 2 1 1 1\n 0 0 0 1 0 0 0\n 0 0 0 1 0 0 0\n 0 0 0 1 0 0 0\n\n\n\n\n이렇게 레이저가 위/아래로 분산된다.\n맵안에는 스필리터가 $3$개 있고, $4$번째 줄에 레이저를 쏜다고 했을 때 맵의 상태를 출력하시오.\n\n\n \n# 입력 \n 세 줄에 걸쳐 (행, 열)의 형태로 스플리터 위치가 입력된다.\n \n# 출력 \n 스플리터가 각 레이저를 분산했을때 레이저가 차지하는 부분을 $1$로 레이저가 차지하지 않는 부분을 $0$ 스플리터를 $2$으로 하여 $7*7$의 맵을 출력하라\n \n# 입력 예시 \n 2 4\n4 4\n6 4 \n# 출력 예시 \n 0 0 0 1 0 0 0 \n1 1 1 2 1 1 1 \n0 0 0 1 0 0 0 \n1 1 1 2 1 1 1 \n0 0 0 1 0 0 0 \n1 1 1 2 1 1 1 \n0 0 0 1 0 0 0 \n \n# 도움말 \n  \n# 출처 \n rodlxm973 \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint arr[7][7] = {0};\nvoid razer(int y,int x)\n{\n    for(int i=0;i\u003c7;i++)\n    {\n        if(arr[y][i]==2 \u0026\u0026 i != x)\n        {\n            arr[y][i]=3;\n            razer(y,i);\n        }\n        else if(arr[y][i]==0)\n        {\n            arr[y][i]=1;\n        }\n        if(arr[i][x]==2 \u0026\u0026 i != y)\n        {\n            arr[i][x]=3;\n            razer(i,x);\n        }\n        else if(arr[i][x]==0)\n        {\n            arr[i][x]=1;\n        }\n    }\n}\nint main()\n{\n    int x,y;\n    for(int i=0;i\u003c3;i++)\n    {\n        scanf(\"%d %d\",\u0026y,\u0026x);\n        arr[y-1][x-1]=2;\n    }\n    for(int i=0;i\u003c7;i++)\n    {\n        if(arr[3][i]==2)\n        {\n            razer(3,i);\n        }\n        else if(arr[3][i]==0)\n        {\n            arr[3][i]=1;\n        }\n\n    }\n    for(int i=0;i\u003c7;i++,puts(\"\"))\n    {\n        for(int j=0;j\u003c7;j++)\n        {\n            if(arr[i][j]==3)\n            {\n                printf(\"2 \");\n            }\n            else\n            {\n                printf(\"%d \",arr[i][j]);\n            }\n        }\n    }\n}\n\n/**************************************************************\n\t문제번호: 1514\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1513","Time":"2016/06/25","Title":"지그재그 배열 3","Code":"/**************************************************************\n# 문제 설명 \n 하나의 정수 n을 입력받아 n*n사각형에서 다음과 같은 삼각형 모양으로 지그재그로 출력하시오.\n예를 들어, n이 5이면,\n0 0 0 0 5\n0 0 0 4 6\n0 0 3 7 12\n0 2 8 11 13\n1 9 10 14 15\n\n를 출력한다. \n# 입력 \n 정수 n이 입력된다.( 1 \u003c= n \u003c= 99) \n# 출력 \n n*n사각형에서 삼각형 모양으로 지그재그 출력한다.\n \n# 입력 예시 \n 5 \n# 출력 예시 \n 0 0 0 0 5 \n0 0 0 4 6 \n0 0 3 7 12 \n0 2 8 11 13 \n1 9 10 14 15 \n \n# 도움말 \n 왼쪽 아래에서 오른쪽 위로 올라간 후 다시 왼쪽 아래로 내려오는 것을 반복한다. \n# 출처 \n moonrabbit2 \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint main()\n{\n    int arr[100][100];\n    int n;\n    scanf(\"%d\",\u0026n);\n    int o=0;\n\n    for(int j=0;j\u003cn;j++)\n    {\n        if(j%2==0)\n        {\n            for(int i=1;i\u003cn-j+1;i++)\n            {\n                arr[n-i][j+i-1]=++o;\n            }\n        }\n        else\n        {\n            for(int i=n-j;i\u003e=1;i--)\n            {\n                arr[n-i][j+i-1]=++o;\n            }\n        }\n    }\n    for(int i=0;i\u003cn;i++, puts(\"\"))\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            printf(\"%d \",arr[i][j]);\n        }\n    }\n}\n\n/**************************************************************\n\t문제번호: 1513\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1512","Time":"2016/06/25","Title":"숫자 등고선","Code":"/**************************************************************\n# 문제 설명 \n 어느날 등산을하다가 길을 찾기 위해 지도를 보다가 땅의 높낮이를 표시되어 있는 등고선을 보면서 문득 2차원 배열로 숫자등고선을 만드는 문제가 생각났다.\n여러분들은 배열크기 N과 시작위치 X , Y를 입력받아 숫자등고선을 만드시오.\n예를 들어 배열크기가 5이고 시작위치가 3 , 4 라면 3,4로 시작하는 다음과같은 숫자등고선을 만들수 있다.\n6 5 4 3 4\n5 4 3 2 3\n4 3 2 1 2\n5 4 3 2 3\n6 5 4 3 4 \n# 입력 \n 배열의 크기 N의 범위는 1\u003c=N\u003c=100 이며 좌표값 X,Y는 배열크기보다 작다. \n# 출력 \n 숫자등고선을 출력한다. 숫자와 숫자 사이는 공백을 출력한다. \n# 입력 예시 \n 5\n3 4 \n# 출력 예시 \n 6 5 4 3 4 \n5 4 3 2 3 \n4 3 2 1 2 \n5 4 3 2 3 \n6 5 4 3 4 \n \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint main()\n{\n    int arr[100][100]={0};\n    int n;\n    scanf(\"%d\",\u0026n);\n    int x,y;\n    scanf(\"%d %d\",\u0026y,\u0026x);\n    int o=0;\n\n    while(1)\n    {\n        o++;\n        int size=2*(o-1)+1;\n        int middle = (size-1)/2;\n        for(int i=0;i\u003csize;i++)\n        {\n            if(i\u003c=middle)\n            {\n                int rX=x-1;\n                int rY=i+y-1;\n                if(rY\u003e=0 \u0026\u0026 rY\u003cn)\n                {\n                    if(rX+i\u003cn \u0026\u0026 rX+i\u003e=0) arr[rY][rX+i] = o;\n                    if(rX-i\u003e=0 \u0026\u0026 rX-i\u003cn) arr[rY][rX-i] = o;\n                }\n            }\n            else\n            {\n                int rX=x-1;\n                int rY=i+y-1;\n                if(rY\u003e=0 \u0026\u0026 rY\u003cn)\n                {\n                    int i2=size-i-1;\n                    if(rX+i2\u003cn \u0026\u0026 rX+i2\u003e=0) arr[rY][rX+i2] = o;\n                    if(rX-i2\u003e=0 \u0026\u0026 rX-i2\u003cn) arr[rY][rX-i2] = o;\n                }\n            }\n        }\n        y--;\n        if(arr[0][0]!=0\u0026\u0026\n           arr[n-1][0]!=0\u0026\u0026\n           arr[0][n-1]!=0\u0026\u0026\n           arr[n-1][n-1]!=0)\n        {\n            break;\n        }\n    }\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            printf(\"%d \",arr[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\n\n\n/**************************************************************\n\t문제번호: 1512\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1511","Time":"2016/06/25","Title":"테두리의 합","Code":"/**************************************************************\n# 문제 설명 \n 정수 N을 입력받아 1~N*N까지 2차원 배열에 저장한 후 사각 테두리에 있는 배열값들만 합하여 출력하시오.\n예를 들어) 3을 입력한다면\n1 2 3\n4 5 6\n7 8 9 와 같이 배열에 저장한 후 테두리의 값인 1+2+3+6+9+8+7+4 = 40을 출력하는 프로그램을 작성하시오. \n# 입력 \n 정수 N 입력(1\u003c=N\u003c=100) \n# 출력 \n 테두리의 합을 출력한다. \n# 입력 예시 \n 3 \n# 출력 예시 \n 40 \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint main()\n{\n    int n;\n    scanf(\"%d\",\u0026n);\n    int sum=0;\n    int o=0;\n\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            o++;\n            if(i==0 || i==n-1)\n            {\n                sum+=o;\n            }\n            else if(j==0 || j==n-1)\n            {\n                sum+=o;\n            }\n        }\n    }\n    printf(\"%d\",sum);\n}\n\n/**************************************************************\n\t문제번호: 1511\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1510","Time":"2016/06/25","Title":"홀수 마방진","Code":"/**************************************************************\n# 문제 설명 \n 마방진(magic square)이란 가로, 세로, 대각선의 합이 같은 사각형을 말한다.\n홀수 n 을 입력으로 받아 n * n 홀수 마방진을 구하고자 한다.\n구현 방법은\n1. 시작은 첫 행 , 중간 열 에서 1 을 두고\n2. 행을 감소, 열을 증가하면서 순차적으로 수를 넣어간다.\n3. 행은 감소하므로 행이 첫 행보다 작아지는 경우는 행은 마지막 행으로 넘어간다.\n4. 열은 증가하므로 열이 끝 열을 넘어가는 경우 열은 첫 열로 넘어간다.\n5. 테이블에 들어간 수가 n 의 배수이면 행만 증가(열은 변화없음) \n# 입력 \n 홀수 n이 입력된다.(n\u003c=49)\n \n# 출력 \n 위의 조건을 토대로 크기가 n인 마방진을 출력한다.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n 8 1 6 \n3 5 7 \n4 9 2 \n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint main()\n{\n    int arr[50][50] = {0};\n    int n;\n    scanf(\"%d\",\u0026n);\n    int o = 0;\n    int x = (n-1) / 2;\n    int y = 0;\n\n    while(o!=n*n)\n    {\n        arr[y][x] = ++o;\n        if(o%n==0) y++;\n        else y--;\n        if(y\u003c0) y=n-1;\n        if(o%n!=0) x++;\n        if(x\u003en-1) x=0;\n    }\n\n    for(int i=0;i\u003cn;i++)\n    {\n        for(int j=0;j\u003cn;j++)\n        {\n            printf(\"%d \",arr[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 1510\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1509","Time":"2016/06/21","Title":"진격 후 결과","Code":"/**************************************************************\n# 문제 설명 \n 10*10 크기의 보드판이 있다.\n각 말들은 제일 아래쪽에서 위쪽 방향으로 진격한다.\n장애물은 0이 아닌 숫자로 나타내며, 0보다 크면 블럭 장애물, 0보다 작으면 구덩이 장애물, 0이면 평지이다.\n10*10 보드판의 정보가 입력되고, 각 세로줄 아래에 말이 있으면 1, 없으면 0이 입력될 때 각 말의 생존여부를 구하는 프로그램을 구현하시오. \n# 입력 \n 10*10의 보드판의 정보가 입력된다.\n11째줄에 각 말의 위치 여부가 입력된다.(1:있음, 0:없음)\n \n# 출력 \n 블럭 장애물에 부딪혀서 실패시 \"세로줄 번호 crash\", \n구덩이에 떨어져서 실패시 \"세로줄 번호 fall\",\n무사히 통과하면 \"세로줄 번호 safe\"를 출력한다.\n(단, 말이 없는 줄은 아무결과도 출력하지 않는다.)\n \n# 입력 예시 \n 0 0 0 0 0 0 0 0 0 0 \n0 2 0 0 0 0 0 0 0 0 \n0 0 -1 0 0 0 0 0 2 0 \n0 0 0 0 0 0 0 6 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 -4 2 0 0 0 \n0 0 2 0 0 0 0 0 0 0 \n0 0 0 0 3 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n1 1 0 0 1 1 0 1 0 1 \n \n# 출력 예시 \n 1 safe\n2 crash\n5 crash\n6 fall\n8 crash\n10 safe\n \n# 도움말 \n 1번 줄 말은 무사 통과\n2번 줄 말은 2 크기의 장애물에서 부딪혀 실패.\n5번 줄 말은 3 장애물에서 부딪혀 실패\n6번 줄 말은 -4 장애물에서 빠져 실패\n8번 줄 말은 6 장애물에서 부딪혀 실패\n10번 줄 말은 무사 통과 \n# 출처 \n moonrabbit2 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int arr[11][10];\n    for(int i=0;i\u003c11;i++)\n    {\n        for(int j=0;j\u003c10;j++)\n        {\n           scanf(\"%d\",\u0026arr[i][j]);\n        }\n    }\n    for(int j=0;j\u003c10;j++)\n    {\n        if(arr[10][j] == 1)\n        {\n\n            for(int i=9;i\u003e=0;i--)\n            {\n                if(arr[i][j]\u003e0)\n                {\n                    cout\u003c\u003cj+1\u003c\u003c\" crash\\n\";\n                    break;\n                }\n                else if(arr[i][j]\u003c0)\n                {\n                    cout\u003c\u003cj+1\u003c\u003c\" fall\\n\";\n                    break;\n                }\n                else if(i==0)\n                {\n                    cout\u003c\u003cj+1\u003c\u003c\" safe\\n\";\n                }\n            }\n        }\n    }\n}\n\n/**************************************************************\n\t문제번호: 1509\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1509","Time":"2016/06/21","Title":"진격 후 결과","Code":"/**************************************************************\n# 문제 설명 \n 10*10 크기의 보드판이 있다.\n각 말들은 제일 아래쪽에서 위쪽 방향으로 진격한다.\n장애물은 0이 아닌 숫자로 나타내며, 0보다 크면 블럭 장애물, 0보다 작으면 구덩이 장애물, 0이면 평지이다.\n10*10 보드판의 정보가 입력되고, 각 세로줄 아래에 말이 있으면 1, 없으면 0이 입력될 때 각 말의 생존여부를 구하는 프로그램을 구현하시오. \n# 입력 \n 10*10의 보드판의 정보가 입력된다.\n11째줄에 각 말의 위치 여부가 입력된다.(1:있음, 0:없음)\n \n# 출력 \n 블럭 장애물에 부딪혀서 실패시 \"세로줄 번호 crash\", \n구덩이에 떨어져서 실패시 \"세로줄 번호 fall\",\n무사히 통과하면 \"세로줄 번호 safe\"를 출력한다.\n(단, 말이 없는 줄은 아무결과도 출력하지 않는다.)\n \n# 입력 예시 \n 0 0 0 0 0 0 0 0 0 0 \n0 2 0 0 0 0 0 0 0 0 \n0 0 -1 0 0 0 0 0 2 0 \n0 0 0 0 0 0 0 6 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 -4 2 0 0 0 \n0 0 2 0 0 0 0 0 0 0 \n0 0 0 0 3 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 \n1 1 0 0 1 1 0 1 0 1 \n \n# 출력 예시 \n 1 safe\n2 crash\n5 crash\n6 fall\n8 crash\n10 safe\n \n# 도움말 \n 1번 줄 말은 무사 통과\n2번 줄 말은 2 크기의 장애물에서 부딪혀 실패.\n5번 줄 말은 3 장애물에서 부딪혀 실패\n6번 줄 말은 -4 장애물에서 빠져 실패\n8번 줄 말은 6 장애물에서 부딪혀 실패\n10번 줄 말은 무사 통과 \n# 출처 \n moonrabbit2 \n\n*************************************************************/\n#include \u003ciostream\u003e\n#include \u003cstdio.h\u003e\nusing namespace std;\nint main()\n{\n    int arr[11][10];\n    for(int i=0;i\u003c11;i++)\n    {\n        for(int j=0;j\u003c10;j++)\n        {\n           scanf(\"%d\",\u0026arr[i][j]);\n        }\n    }\n    for(int j=0;j\u003c10;j++)\n    {\n        if(arr[10][j] == 1)\n        {\n\n            for(int i=9;i\u003e=0;i--)\n            {\n                if(arr[i][j]\u003e0)\n                {\n                    cout\u003c\u003cj+1\u003c\u003c\" crash\\n\";\n                    break;\n                }\n                else if(arr[i][j]\u003c0)\n                {\n                    cout\u003c\u003cj+1\u003c\u003c\" fall\\n\";\n                    break;\n                }\n                else if(i==0)\n                {\n                    cout\u003c\u003cj+1\u003c\u003c\" safe\\n\";\n                }\n            }\n        }\n    }\n}\n\n/**************************************************************\n\t문제번호: 1509\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1696 kb\n****************************************************************/\n\n"},{"Number":"1508","Time":"2016/06/21","Title":"나도 IQ 150","Code":"/**************************************************************\n# 문제 설명 \n 오늘 뉴스기사에 다음과 같은 기사가 났다.\n\n?에 들어갈 숫자가 무엇인지 알면 IQ 150이라는 문제이다.\n원리는 조금만 생각해보면 쉽게 알 수 있다. 따라서 우리는 충분히 IQ 150이라는...\n이 상황을 좀 더 일반화하여 각 행의 제일 첫 번째 숫자들만 주어지면 N크기의 모든 격자판 정보를 출력하는 프로그램을 작성하시오.\n \n# 입력 \n 첫 줄에 이 삼각격자의 세로 길이 N이 입력된다.(2 \u003c= N \u003c= 20)\n둘째 줄부터 N+1째 줄까지 (k, 1)의 격자판의 정보가 입력된다. ( 1 \u003c= k \u003c= N)\n\n \n# 출력 \n N크기의 삼각 격자판을  출력하시오.\n(출력할 때 각 행의 마지막에 공백을 넣어 출력하세요.(표현 오류때문))\n \n# 입력 예시 \n 4\n4\n6\n9\n19 \n# 출력 예시 \n 4 \n6 2 \n9 3 1 \n19 10 7 6  \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main()\n{\n    int arr[20][20];\n    int size;\n    scanf(\"%d\",\u0026size);\n    for(int i=0;i\u003csize;i++)\n    {\n        int a;\n        scanf(\"%d\",\u0026a);\n        arr[i][0]=a;\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=1;j\u003ci+1;j++)\n        {\n            arr[i][j] = arr[i][j-1] - arr[i-1][j-1];\n        }\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003ci+1;j++)\n        {\n            printf(\"%d \",arr[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 1508\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1507","Time":"2016/06/21","Title":"4개의 직사각형 넓이","Code":"/**************************************************************\n# 문제 설명 \n \n평면에 네 개의 직사각형이 놓여 있는데 그 밑변은 모두 가로축에 평행하다.\n이 네 개의 직사각형들은 서로 떨어져 있을 수도 있고, 겹쳐 있을 수도 있고, 하나가 다른 하나를 포함할 수도 있으며, 변이나 꼭지점이 겹칠 수도 있다.\n이 직사각형들이 차지하는 면적을 구하는 프로그램을 작성하시오.  \n# 입력 \n  네 줄에 걸쳐 직사각형의 왼쪽 위 꼭지점 (x1, y1)와 오른쪽 아래 꼭지점 (x2, y2)가 입력된다. (0\u003c=평면의  범위\u003c100) \n# 출력 \n 네개의 직사각형이 차지하는 넓이를 출력한다. \n# 입력 예시 \n 1 2 3 4 \n2 3 5 7 \n3 1 6 5 \n7 3 8 6 \n \n# 출력 예시 \n 26 \n# 도움말 \n  \n# 출처 \n salia \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\ntypedef struct\n{\n    int x,y;\n}vec2;\n\nint main()\n{\n    int arr[100][100]={0};\n    int n=0;\n    vec2 a,b;\n    while(n++ != 4)\n    {\n        scanf(\"%d %d %d %d\",\u0026a.x,\u0026a.y,\u0026b.x,\u0026b.y);\n        for(int x=a.x;x\u003cb.x;x++)\n        {\n            for(int y=a.y;y\u003cb.y;y++)\n            {\n                arr[y][x]=1;\n            }\n        }\n    }\n    int width=0;\n    for(int i=0;i\u003c100;i++)\n    {\n        for(int j=0;j\u003c100;j++)\n        {\n            if(arr[i][j] == 1)\n            {\n                width++;\n            }\n        }\n    }\n    printf(\"%d\",width);\n}\n\n/**************************************************************\n\t문제번호: 1507\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1506","Time":"2016/06/21","Title":"2차원 배열 채우기 4(역달팽이 배열)","Code":"/**************************************************************\n# 문제 설명 \n \n평소 호기심이 많은 남호는 정보고 사이트에 있는 달팽이 배열 문제를 다르게 만들고 싶었다.\n입력 예시와 출력 예시를 참고 하여 n을 입력 받아 출력하는 프로그램을 작성하시오. \n# 입력 \n 배열의 크기 n이 입력된다. (n은 15보다 작은 홀수) \n# 출력 \n 역 달팽이 배열을 출력한다. \n# 입력 예시 \n 5 \n# 출력 예시 \n 1 16 15 14 13 \n2 17 24 23 12 \n3 18 25 22 11 \n4 19 20 21 10 \n5 6 7 8 9 \n \n# 도움말 \n  \n# 출처 \n salia \n\n*************************************************************/\n#include \u003cstdio.h\u003e\ntypedef struct\n{\n    int x,y;\n}vec2;\n\nint dir = 0;\nvec2 dirVs[4]={{1,0},{0,1},{-1,0},{0,-1}};\n\nvoid turn()\n{\n    if(dir==3)\n    {\n        dir=0;\n    }\n    else\n    {\n        dir++;\n    }\n}\n\nvec2 dirV()\n{\n    return dirVs[dir];\n}\n\nint main()\n{\n    int arr[50][50]={0};\n    int number = 0;\n    int size;\n    scanf(\"%d\",\u0026size);\n    vec2 arrV = {0,0};\n\n    int maxSize = size*size;\n    while(number != maxSize)\n    {\n        arr[arrV.x][arrV.y]=++number;\n\n        arrV.x += dirV().x;\n        arrV.y += dirV().y;\n\n        if(arrV.x==size||\n           arrV.x==-1||\n           arrV.y==size||\n           arrV.y==-1)\n        {\n            arrV.x-= dirV().x;\n            arrV.y-= dirV().y;\n            turn();\n            arrV.x += dirV().x;\n            arrV.y += dirV().y;\n        }\n        else if(arr[arrV.x][arrV.y] != 0)\n        {\n            arrV.x-= dirV().x;\n            arrV.y-= dirV().y;\n            turn();\n            arrV.x += dirV().x;\n            arrV.y += dirV().y;\n        }\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            printf(\"%d \",arr[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 1506\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1505","Time":"2016/06/21","Title":"2차원 배열 채우기 3(달팽이 배열)","Code":"/**************************************************************\n# 문제 설명 \n n이 입력되면 크기가 n인 다음과 같은 2차원 배열을 출력하시오.\n\n입력 예)\n3\n출력 예)\n1 2 3\n8 9 4\n7 6 5\n\n \n# 입력 \n 2차원 배열의 크기 n이 입력된다.(n\u003c=50)\n \n# 출력 \n 크기가 n인 달팽이 배열을 출력한다.(설명참조)\n \n# 입력 예시 \n 2 \n# 출력 예시 \n 1 2 \n4 3 \n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003cstdio.h\u003e\ntypedef struct\n{\n    int x,y;\n}vec2;\n\nint dir = 0;\nvec2 dirVs[4]={{0,1},{1,0},{0,-1},{-1,0}};\n\nvoid turn()\n{\n    if(dir==3)\n    {\n        dir=0;\n    }\n    else\n    {\n        dir++;\n    }\n}\n\nvec2 dirV()\n{\n    return dirVs[dir];\n}\n\nint main()\n{\n    int arr[50][50]={0};\n    int number = 0;\n    int size;\n    scanf(\"%d\",\u0026size);\n    vec2 arrV = {0,0};\n\n    int maxSize = size*size;\n    while(number != maxSize)\n    {\n        arr[arrV.x][arrV.y]=++number;\n\n        arrV.x += dirV().x;\n        arrV.y += dirV().y;\n\n        if(arrV.x==size||\n           arrV.x==-1||\n           arrV.y==size||\n           arrV.y==-1)\n        {\n            arrV.x-= dirV().x;\n            arrV.y-= dirV().y;\n            turn();\n            arrV.x += dirV().x;\n            arrV.y += dirV().y;\n        }\n        else if(arr[arrV.x][arrV.y] != 0)\n        {\n            arrV.x-= dirV().x;\n            arrV.y-= dirV().y;\n            turn();\n            arrV.x += dirV().x;\n            arrV.y += dirV().y;\n        }\n    }\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            printf(\"%d \",arr[i][j]);\n        }\n        printf(\"\\n\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 1505\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1504","Time":"2016/06/21","Title":"지그재그 배열 2","Code":"/**************************************************************\n# 문제 설명 \n 하나의 정수 N을 입력받아 다음과 같이 지그재그로 출력하시오.\nN이 3이라면,\n1 6 7\n2 5 8\n3 4 9\n \n# 입력 \n 정수 n이 입력된다. ( 1 \u003c= n \u003c= 100)\n \n# 출력 \n n * n 배열을 수직으로 채워서 출력한다.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n 1 6 7 \n2 5 8 \n3 4 9 \n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint main()\n{\n    int size;\n    int number=1;\n    scanf(\"%d\",\u0026size);\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            if(j%2==0)\n            {\n                //짝수\n                printf(\"%d \",(j*size)+i+1);\n            }\n            else\n            {\n                //홀수\n                printf(\"%d \",((j+1)*size)-i);\n            }\n        }\n        printf(\"\\n\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 1504\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1503","Time":"2016/06/21","Title":"지그재그 입력(2차원 배열)","Code":"/**************************************************************\n# 문제 설명 \n 하나의 정수N을 입력받아 다음과 같이 작성하시오.\n지그재그로 출력하시오.\nN이 5라면 다음과 같이 출력한다.\n1 2 3 4 5\n10 9 8 7 6\n11 12 13 14 15\n20 19 18 17 16\n21 22 23 24 25 \n# 입력 \n 한개의 정수가 입력된다. (2\u003c=N\u003c=50) \n# 출력 \n N*N배열을 지그재그 형태로 출력한다. (숫자와 숫자사이는 공백으로 구분한다.) \n# 입력 예시 \n 3 \n# 출력 예시 \n 1 2 3 \n6 5 4 \n7 8 9 \n \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint main()\n{\n    int size;\n    int number=1;\n    scanf(\"%d\",\u0026size);\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            if(i%2==0)\n            {\n                //짝수\n                printf(\"%d \",(i*size)+j+1);\n            }\n            else\n            {\n                //홀수\n                printf(\"%d \",((i+1)*size)-j);\n            }\n        }\n        printf(\"\\n\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 1503\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1502","Time":"2016/06/21","Title":"2차원 배열 채우기 2","Code":"/**************************************************************\n# 문제 설명 \n n이 입력되면 크기가 n인 다음과 같은 2차원 배열을 출력하시오.\n입력 예)\n3\n출력 예)\n1 4 7\n2 5 8\n3 6 9\n\n \n# 입력 \n 2차원 배열의 크기 n이 입력된다. (n\u003c=50)\n \n# 출력 \n 크기가 n인 배열을 출력한다.(설명 참조)\n \n# 입력 예시 \n 2 \n# 출력 예시 \n 1 3 \n2 4 \n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint main()\n{\n    int size;\n    scanf(\"%d\",\u0026size);\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            printf(\"%d \",(i+1)+(j*size));\n        }\n        printf(\"\\n\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 1502\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1501","Time":"2016/06/21","Title":"2차원 배열 채우기 1","Code":"/**************************************************************\n# 문제 설명 \n n이 입력되면 크기가 n인 다음과 같은 2차원 배열을 출력하시오.\n입력 예)\n3\n출력 예)\n1 2 3\n4 5 6\n7 8 9\n \n# 입력 \n 2차원 배열의 크기 n이 입력된다.(n\u003c=50)\n \n# 출력 \n 크기 n인 배열을 출력한다.(설명 참조) \n# 입력 예시 \n 2 \n# 출력 예시 \n 1 2 \n3 4 \n \n# 도움말 \n  \n# 출처 \n 배열(2차원) \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n\nint main()\n{\n    int size;\n    int number = 1;\n    scanf(\"%d\",\u0026size);\n    for(int i=0;i\u003csize;i++)\n    {\n        for(int j=0;j\u003csize;j++)\n        {\n            printf(\"%d \",number++);\n        }\n        printf(\"\\n\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 1501\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"4040","Time":"2014/04/01","Title":"펜션","Code":"/**************************************************************\n# 문제 설명 \n [문제5] 펜션 (24점, 제한시간 1초)\n부산과 거제도를 잇는 거가대교가 개통된 이래로 거제도에는 많은 피서객들이 방문한다. 거제도 펜션 예약 담당자의 업무는 고객이 요구하는 일정에 맞추어 방을 예약해 주는 것이다. 여름 성수기 동안은 고객이 요청한 일정 내내 같은 방을 예약해 줄 수 없는 경우가 많다. 그런 경우 여러 방을 옮겨 지낼 수 있는 방법을 찾아서 고객에게 제시해 주는데, 가능한 방을 옮기는 횟수가 최소가 되도록 해 주어야 한다. 고객은 항상 정오 이후에 펜션에 도착하여 정오 이전에 떠나야 한다.\n  \n현재 펜션의 예약 상태와 고객의 일정이 주어질 때, 펜션 직원의 업무를 도와줄 수 있는 프로그램을 작성하시오.\n  \n \n# 입력 \n 1. 첫째 줄에 두 개의 정수 n과 m이 주어진다. n은 펜션에서 관리하는 여름 성수기 총 기간을 나타내고, m은 펜션이 보유하고 있는 방의 개수이다(1≤n≤100, 3≤m≤30). 편의상 성수기 기간을 1일부터 n일까지로 표시하고, 펜션의 방을 1부터 m까지의 번호로 구분한다.\n2. 그 다음 n개의 줄에는 각 줄마다 길이가 m인 문자열이 주어진다. 입력에서 i+1 번째 줄의 j-번째 문자는 여름 성수기 기간 중 i-번째 날에 방 번호가 j인 방의 예약 상태를 나타낸다(1≤i≤n, 1≤j≤m). 이 문자는 방이 이미 예약된 경우에는 'X', 그렇지 않으면 'O'이다. k-번째 날을 예약하면 그 다음 날 정오까지 방을 사용할 수 있다는 것을 의미한다. \n3. 마지막 줄에는 고객의 일정을 나타내는 두 개의 정수 s, t가 주어진다, s는 펜션에 도착하는 날이고 t는 펜션을 떠나는 날이다(1≤s\u003ct≤n+1).\n \n# 출력 \n 1. 첫째 줄에 예약 기간 동안 방을 옮기는 최소 횟수를 출력한다.\n2. 만일, 방을 옮기지 않아도 되는 경우는 0, 예약이 불가능한 경우는 -1을 출력한다.\n3. 고객이 1번 방, 2번 방, 1번 방을 차례로 이용하게 된다면 방을 두 번 옮긴 것으로 본다.\n \n# 입력 예시 \n 10 7\nXXXXXXX\nXOXXXXO\nXOXXXXO\nXOXXXOX\nOXXOXOX\nXOXOXOX\nOXXOXOX\nOXXXXOX\nXXXXXXX\nXXXXXXX\n2 9 \n# 출력 예시 \n 1 \n# 도움말 \n 고객은 2일에 도착하여 9일에 떠난다. 2일 정오에서 5일 정오까지는 2번 방을 배정하고, 5일 정오부터 9일 정오까지는 6번 방을 배정해 준다. 따라서 고객은 방을 한 번 옮기면 된다.\n\n \n# 출처 \n 2011 교원프로그래밍경진대회 \n\n*************************************************************/\n#include \u003ccstdio\u003e\n#include \u003ccstring\u003e\n#include \u003carray\u003e\nusing namespace std;\nint main(){\n    int mbg,line;\n    bool yec[101][31];\n    scanf(\"%d %d\",\u0026line,\u0026mbg);\n    char ss[mbg+1];\n    for(int i=0;i\u003cline;i++){\n        scanf(\"%s\",\u0026ss);\n        for(int j=0;j\u003cmbg;j++){\n            if(ss[j]=='O'){\n                yec[i][j]=true;\n            }\n            else{\n                yec[i][j]=false;\n            }\n        }\n    }\n    int s,l;\n    scanf(\"%d %d\",\u0026s,\u0026l);\n    int ts=0;\n    int ret=-1;\n    int h=-1;\n    int temp=0;\n    s--;\n    l--;\n    for(int i=s;i\u003cl;i++){\n        if(i==s||ts==0){\n            h=-1;\n            for(int j=0;j\u003cmbg;j++){\n                if(yec[i][j]==true){\n                    temp=0;\n                    h=1;\n                    for(int t=i+1;t\u003cl;t++){\n                        if(yec[t][j]==true){\n                            temp++;\n                        }\n                        else{\n                            break;\n                        }\n                    }\n                    if(temp\u003ets){\n                        ts=temp;\n                    }\n                }\n            }\n            if(h==-1){\n                ret=-1;\n                break;\n            }\n            ret++;\n        }\n        else if(ts\u003e0){\n            ts--;\n            continue;\n        }\n    }\n    printf(\"%d\",ret);\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4040\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"3301","Time":"2014/04/01","Title":"거스름돈","Code":"/**************************************************************\n# 문제 설명 \n 어떤 가게의 욕심쟁이 점원은 거스름돈을 나눠줄때 거스름돈의 개수를 적게해서 주고자 한다.\n거스름돈을 입력 받아 점원이 줄 수 있는 최소 거스름돈의 개수를 출력하시오.\n예를 들어 54520원인 경우,\n거스름돈으로 50000원권 1장, 1000원권 4장, 500원 1개, 10원 2개 해서 총 8개이다.\n(※ 현재 우리나라가 사용하고 있는 화폐를 사용한다. 10원 50원 100원 500원 1,000원 5,000원 10,000원 50,000원) \n# 입력 \n 거스름돈 n이 입력된다. ( n은10이상의  int 범위 ) \n# 출력 \n 최소 거스름돈의 개수를 출력한다. \n# 입력 예시 \n 54520 \n# 출력 예시 \n 8 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ccstdio\u003e\n#include \u003carray\u003e\nusing namespace std;\nint main(){\n    int m,btp=0;\n    scanf(\"%d\",\u0026m);\n    while(m!=0){\n        if(m\u003e=50000){\n            m-=50000;\n        }\n        else if(m\u003e=10000){\n            m-=10000;\n        }\n        else if(m\u003e=5000){\n            m-=5000;\n        }\n        else if(m\u003e=1000){\n            m-=1000;\n        }\n        else if(m\u003e=500){\n            m-=500;\n        }\n        else if(m\u003e=100){\n            m-=100;\n        }\n        else if(m\u003e=50){\n            m-=50;\n        }\n        else{\n            m-=10;\n        }\n        btp++;\n    }\n    printf(\"%d\",btp);\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3301\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"3120","Time":"2014/04/01","Title":"리모컨","Code":"/**************************************************************\n# 문제 설명 \n 컴퓨터실에서 수업 중인 정보 선생님은 냉난방기의 온도를 조절하려고 한다.\n냉난방기가 멀리 있어서 리모컨으로 조작하려고 하는데, 리모컨의 온도 조절 버튼은 다음과 같다.\n1) 온도를 1도 올리는 버튼\n2) 온도를 1도 내리는 버튼\n3) 온도를 5도 올리는 버튼\n4) 온도를 5도 내리는 버튼\n5) 온도를 10도 올리는 버튼\n6) 온도를 10도 내리는 버튼\n이와 같이 총 6개의 버튼으로 목표 온도를 조절해야 한다.\n현재 설정 온도와 변경하고자하는 목표 온도가 주어지면 이 버튼들을 이용하여 목표 온도로 변경하고자 한다.\n이 때 버튼 누름의 최소 횟수를 구하시오.\n예를 들어, 7도에서 34도로 변경하는 경우,\n7 -\u003e 17 -\u003e 27 -\u003e 32 -\u003e 33 -\u003e 34\n이렇게 총 5번 누르면 된다.\n\n \n# 입력 \n 현재 온도a 와 목표 온도b가 입력된다. ( 0 \u003c= a , b \u003c= 40 )\n \n# 출력 \n 최소한의 버튼 사용으로 목표온도가 되는 버튼의 횟수를 출력한다.\n \n# 입력 예시 \n 7 34 \n# 출력 예시 \n 5 \n# 도움말 \n 10도 -\u003e 10도 -\u003e 5도 -\u003e 1도 -\u003e 1도\n \n# 출처 \n  \n\n*************************************************************/\n#include \u003ccstdio\u003e\n#include \u003carray\u003e\nusing namespace std;\nint main(){\n    int i,m,btp=0;\n    scanf(\"%d %d\",\u0026i,\u0026m);\n    while(i!=m){\n        if(i\u003em){\n            if(i-10\u003em-3){\n                i-=10;\n            }\n            else if(i-5\u003e=m-1){\n                i-=5;\n            }\n            else{\n                i-=1;\n            }\n        }\n        else{\n            if(i+10\u003cm+3){\n                i+=10;\n            }\n            else if(i+5\u003c=m+1){\n                i+=5;\n            }\n            else{\n                i+=1;\n            }\n        }\n        btp++;\n    }\n    printf(\"%d\",btp);\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 3120\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"2001","Time":"2014/04/01","Title":"최소 대금","Code":"/**************************************************************\n# 문제 설명 \n 파파 파스타 가게는 점심 추천 파스타와 생과일 쥬스 세트 메뉴가 인기가 좋다.\n이 세트 메뉴를 주문하면 그 날의 3 종류의 파스타와 2 종류의 생과일 쥬스에서 하나씩 선택한다.\n파스타와 생과일 쥬스의 가격 합계에서 10%를 더한 금액이 대금된다.\n어느 날의 파스타와 생과일 쥬스의 가격이 주어 졌을 때, 그 날 세트 메뉴의 대금의 최소값을 구하는 프로그램을 작성하라. \n# 입력 \n 입력은 5 행으로 이루어지며, 한 줄에 하나씩 양의 정수가 적혀있다.\n1행의 정수는 첫 번째 파스타 가격이다.\n2행의 정수는 두 번째 파스타 가격이다.\n3행의 정수는 세 번째 파스타 가격이다.\n4행의 정수는 첫 번째 생과일 쥬스 가격이다.\n5행의 정수는 두 번째 생과일 쥬스의 가격이다.\n(모든 파스타와 생과일 쥬스의 가격은 100 원이상 2000원 이하이다.) \n# 출력 \n 그날 세트 메뉴의 최소 대금을 소수 첫째자리까지 출력하시오.\n \n# 입력 예시 \n 800\n700\n900\n198\n330 \n# 출력 예시 \n 987.8 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ccstdio\u003e\n#include \u003carray\u003e\nusing namespace std;\nint main(){\n    array\u003cint,3\u003e pas;\n    array\u003cint,2\u003e juc;\n    int minipas=3000,minijus=3000;\n    for(int i:pas){\n        scanf(\"%d\",\u0026i);\n        if(i\u003cminipas){\n            minipas=i;\n        }\n    }\n    for(int i:juc){\n        scanf(\"%d\",\u0026i);\n        if(i\u003cminijus){\n            minijus=i;\n        }\n    }\n    printf(\"%.1f\",(minijus+minipas)*1.1);\n\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 2001\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"2601","Time":"2014/03/20","Title":"피보나치 수열","Code":"/**************************************************************\n# 문제 설명 \n 피보나치 수열이란 앞의 두 수를 더하여 나오는 수열이다.\n첫 번째 수와 두 번째 수는 모두 1이고, 세 번째 수부터는 이전의 두 수를 더하여 나타낸다. 피보나치 수열을 나열해 보면 다음과 같다.\n   \n1, 1, 2, 3, 5, 8, 13 …\n   \n자연수 N을 입력받아 N번째 피보나치 수를 출력하는 프로그램을 작성하시오.\n \n# 입력 \n 자연수 N이 입력된다. (N은 40보다 같거나 작다.)\n \n# 출력 \n N번째 피보나치 수를 출력한다.\n \n# 입력 예시 \n 7 \n# 출력 예시 \n 13 \n# 도움말 \n  \n# 출처 \n 2012진주시정보화경진대회 \n\n*************************************************************/\n#include \u003ccstdio\u003e\n\nvoid pi(int n,int n1=0,int n2=0,int i=0,int N=0){\n\ti++;\n\tN=n1+n2;\n\tif(n1==0\u0026\u0026n2==0){\n\t\tN=1;\n\t\tn1=1;\n\t}\n\telse if(n1==1\u0026\u0026n2==0){\n\t\tN=1;\n\t\tn2=1;\n\t}\n\telse{\n\t\tn2=n1;\n\t\tn1=N;\n\t}\n\tif(i!=n){\n\t\tpi(n,n1,n2,i,N);\n\t}\n\telse{\n\t\tprintf(\"%d\",N);\n\t}\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",\u0026n);\n\tpi(n);\n}\n\n/**************************************************************\n\t문제번호: 2601\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1807","Time":"2014/03/20","Title":"우박수 길이 (3n+1) (small)","Code":"/**************************************************************\n# 문제 설명 \n 콜라츠의 추측, 3n+1 문제, 우박수 문제라고 불리는 이 문제는 다음과 같다.\n\n1, 어떤 자연수 n이 입력되면,\n2. n이 홀수이면 3n+1을 하고,\n3. n이 짝수이면 n/2를 한다.\n4. 이 n이 1이 될때까지 2~3과정을 반복한다.\n\n예를 들어 5는 5 → 16 → 8 → 4 → 2 → 1 이 된다.\n여기서 5가 1이되기 위해 6개의 숫자를 나열하게 된다. 이것을 길이라고 하면 5의 길이는 6이된다.\n시작수와 마지막 수가 입력되면 그 두 사이게 길이가 가장긴 우박수와 그 길이를 출력하시오.\n\n \n# 입력 \n 두 자연수 a, b가 공백으로 분리되어 입력된다. ( 1 \u003c= a \u003c= b \u003c= 10,000 )\n \n# 출력 \n a에서 b사이에 길이가 가장긴 우박수와 그 길이를 출력한다. 만약 가장 긴 수가 두 개이상인 경우, 작은 숫자를 출력하시오.\n \n# 입력 예시 \n 1 10 \n# 출력 예시 \n 9 20 \n# 도움말 \n  \n# 출처 \n 유명한 문제 \n\n*************************************************************/\n#include \u003ccstdio\u003e\n//int o=0;\nint ai=0;\nint MAX=0,MAXB=0;\nvoid handle(int i){\n\tif(i!=1){\n\t\tif(i%2==1){\n\t\t\ti=3*i+1;\n\t\t}\n\t\telse{\n\t\t\ti=i/2;\n\t\t}\n\t\tai++;\n\t\tif(i!=1){\n\t\t\thandle(i);\n\t\t}\n\t}\n\n}\nvoid uback(int c,int i,int maxs=-1,int maxb=-1){\n\t//printf(\"%d\",c);\n\tai=0;\n\thandle(c);\n\tif(ai\u003emaxs){\n\t\tmaxb=c;\n\t\tmaxs=ai;\n\t}\n\tc++;\n\tif(i\u003e=c){\n\t\tuback(c,i,maxs,maxb);\n\t}\n\telse{\n\t\tMAXB=maxb;\n\t\tMAX=maxs;\n\t}\n}\nint main(){\n\tint n,n2;\n\tscanf(\"%d %d\",\u0026n,\u0026n2);\n\tuback(n,n2);\n\tprintf(\"%d %d\\n\",MAXB,MAX+1);\n\t//printf(\"%d\",o);\n}\n\n/**************************************************************\n\t문제번호: 1807\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:12 ms\n\t메모리 사용량:1280 kb\n****************************************************************/\n\n"},{"Number":"1929","Time":"2014/03/20","Title":"(재귀함수) 우박수 (3n+1) (reverse)","Code":"/**************************************************************\n# 문제 설명 \n \n콜라츠의 추측, $3n+1$ 문제, 우박수 문제라고 불리는 이 문제는 다음과 같다.\n\n1, 어떤 자연수 $n$이 입력되면,\n2. $n$이 홀수이면 $3n+1$을 하고,\n3. $n$이 짝수이면 $\\frac{n}{2}$를 한다.\n4. 이 $n$이 $1$이 될때까지 $2~3$과정을 반복한다.\n\n예를 들어 $5$는 $5$ → $16$ → $8$ → $4$ → $2$ → $1$ 이 된다.\n그런데 이번에는 이 순서의 역순을 출력하고자 한다.\n즉, $1$ $2$ $4$ $8$ $16$ $5$ 가 출력되어야 한다.\n이 처럼 어떤 자연수 $n$이 입력되면 위 알고리즘에 의해 $1$이 되는 과정을 모두 출력하시오.\n이 문제는 반복문 for, while 등을 이용하여 풀수 없습니다. \n# 입력 \n 자연수 $n$이 입력된다.$(1 \u003c= n \u003c= 10,000,000)$ \n# 출력 \n $3n + 1$의 과정을 출력한다.\n \n# 입력 예시 \n 5 \n# 출력 예시 \n 1\n2\n4\n8\n16\n5\n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ccstdio\u003e\n//int o=0;\nint arr[999999];\nint ai=0;\nvoid handle(int i){\n\tif(i!=1){\n\t\t\tif(i%2==1){\n\t\t\t\ti=3*i+1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\ti=i/2;\n\t\t\t}\n\t\t\tarr[ai]=i;\n\t\t\tai++;\n\t\t\tif(i!=1){\n\t\t\t\thandle(i);\n\t\t\t}\n\t}\n\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",\u0026n);\n\thandle(n);\n\tfor(int i=ai-1;i\u003e=0;i--){\n\t\tprintf(\"%d\\n\",arr[i]);\n\t}\n\tprintf(\"%d\\n\",n);\n\t//printf(\"%d\",o);\n}\n\n/**************************************************************\n\t문제번호: 1929\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:4988 kb\n****************************************************************/\n\n"},{"Number":"1928","Time":"2014/03/20","Title":"(재귀함수) 우박수 (3n+1) (basic)","Code":"/**************************************************************\n# 문제 설명 \n 콜라츠의 추측, $3n+1$ 문제, 우박수 문제라고 불리는 이 문제는 다음과 같다.\n\n1, 어떤 자연수 $n$이 입력되면,\n2. $n$이 홀수이면 $3n+1$을 하고,\n3. $n$이 짝수이면 $\\frac{n}{2}$를 한다.\n4. 이 $n$이 $1$이 될때까지 $2~3$과정을 반복한다.\n\n예를 들어 $5$는 $5$ → $16$ → $8$ → $4$ → $2$ → $1$ 이 된다.\n이 처럼 어떤 자연수 $n$이 입력되면 위 알고리즘에 의해 $1$이 되는 과정을 모두 출력하시오.\n이 문제는 반복문 for, while 등을 이용하여 풀수 없습니다. \n# 입력 \n 자연수 $n$이 입력된다.$(1 \u003c= n \u003c= 10,000,000)$\n \n# 출력 \n $3n + 1$의 과정을 출력한다. \n# 입력 예시 \n 5 \n# 출력 예시 \n 5\n16\n8\n4\n2\n1\n \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ccstdio\u003e\n//int o=0;\nvoid handle(int i){\n\tif(i!=1){\n\t\tif(i%2==1){\n\t\ti=3*i+1;\n\t}\n\telse{\n\t\ti=i/2;\n\t}\n\tif(i==1){\n\t\tprintf(\"%d\",i);\n\t}\n\telse{\n\t\tprintf(\"%d\\n\",i);\n\t}\n\tif(i!=1){\n\t\thandle(i);\n\t}\n\t}\n\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",\u0026n);\n\tprintf(\"%d\\n\",n);\n\thandle(n);\n\t//printf(\"%d\",o);\n}\n\n/**************************************************************\n\t문제번호: 1928\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1256","Time":"2014/03/20","Title":"별 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 별(*)을 n개 만큼 출력한다.\n \n# 입력 \n 별의 개수인 n이 입력된다.(1 \u003c= n \u003c=1000) \n# 출력 \n 별(*)을 개수만큼 출력한다.\n \n# 입력 예시 \n 5 \n# 출력 예시 \n ***** \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include \u003ccstdio\u003e\n//int o=0;\nvoid printStar(int i){\n\t//o++;\n\tprintf(\"*\");\n\ti--;\n\tif(i!=0){\n\t\tprintStar(i);\n\t}\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",\u0026n);\n\tprintStar(n);\n\t//printf(\"%d\",o);\n}\n\n/**************************************************************\n\t문제번호: 1256\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"3130","Time":"2014/03/20","Title":"소들의 헤어스타일","Code":"/**************************************************************\n# 문제 설명 \n 농부 존의 N마리의 소들이 있다.\n소들은 헤어스타일에 예민하기 때문에, 다른 소들의 헤어 스타일을 보고 싶어한다.\ni번째 소들의 키가 hi이고, 모든 소들은 일렬로 서 있고 오른쪽으로만 볼 수 있다.\ni번째 소가 볼 수 있는 다른 소의 헤어 스타일은 i+1, i+2, .... 이다.\n그런데 자기 보다 키가 같거나 큰 소가 있으면 그 다음에 있는 모든 소들의 헤어스타일은 보지 못한다.\n예) N=6, H = { 10, 3, 7, 4, 12, 2 }인 경우\n          = \n =        = \n =   -    = \n =   =    =        -\u003e 소가 보는 방향\n = - = =  =   \n = = = =  = = \n10 3 7 4 12 2\n\n1번소는 2, 3, 4소의 머리스타일을 확인할 수 있다.\n2번소는 다른 소들의 머리스타일을 확인할 수 없다.\n3번소는 4번소의 머리스타일을 확인할 수 있다.\n4번소는 다른 소의 머리스타일을 확인할 수 없다.\n5번소는 6번소의 머리스타일을 확인할 수 있다.\n6번소는 마지막이므로 다른 소의 머리스타일을 확인할 수 없다.\n따라서, 머리스타일을 확인할 수 있는 총 수는 3 + 0 + 1 + 0 + 1 + 0 = 5이다.\n\n\n \n# 입력 \n 첫번째 줄에 소의 수 N이 입력된다.(1 \u003c= N \u003c= 80,000)\n두 번째 줄 부터 N+1번째 줄까지 각 소들의 키가 입력된다. ( 1 \u003c= hi \u003c= 1,000,000,000 )\n\n \n# 출력 \n 각 소들이 헤어 스타일을 확인할 수 있는 소들의 수를 출력한다.\n \n# 입력 예시 \n 6\n10\n3\n7\n4\n12\n2\n \n# 출력 예시 \n 5 \n# 도움말 \n  \n# 출처 \n 2006 USACO November (Silver)\nhttp://usaco.org \n\n*************************************************************/\n#include \u003ccstdio\u003e\ntypedef struct _S{\n\tlong long key;\n\tlong long ss;\n\tint lastss;\n}so;\nso* sss;\nint top=0;\nvoid push(so S){\n\tsss[top]=S;\n\ttop++;\n}\nint main(){\n\tint i,N;\n\tlong long n;\n\tscanf(\"%d\",\u0026N);\n\tlong long MAX=0;\n\tsss=new so[N+1];\n\t//top=N-1;\n\tfor(i=0;i\u003cN;i++){\n\t\tscanf(\"%d\",\u0026n);\n\t\tpush({n,0,0});\n\t}\n\tfor(i=N-1;i\u003e=0;i--){\n\t\t//printf(\"----\\ni:%d   key:%d\\n\",i,sss[i].key);\n\t\tfor(int j=i+1;j\u003cN;j++){\n\t\t\tif(sss[i].key\u003esss[j].key){\n\t\t\t\tif(sss[j].lastss!=0){\n\t\t\t\t\tj=sss[j].lastss;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tsss[i].ss=j-i-1;\n\t\t\t\t//printf(\"%d %d\\n\\n\",j,j-i-1);\n\t\t\t\tsss[i].lastss=j-1;\n\t\t\t\tMAX+=sss[i].ss;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(j==N-1){\n\t\t\t\tsss[i].ss=j-i;\n\t\t\t\t//printf(\"%d %d\\n\\n\",j,j-i);\n\t\t\t\tsss[i].lastss=j-1;\n\t\t\t\tMAX+=sss[i].ss;\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%lld\",MAX);\n}\n\n/**************************************************************\n\t문제번호: 3130\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:29 ms\n\t메모리 사용량:3080 kb\n****************************************************************/\n\n"},{"Number":"4654","Time":"2014/03/18","Title":"탑","Code":"/**************************************************************\n# 문제 설명 \n \n문제 4) 탑 (초등 4)\n  KOI 통신연구소는 레이저를 이용한 새로운 비밀 통신 시스템 개발을 위한 실험을 하고 있다. 실험을 위하여 일직선 위에 N개의 높이가 서로 다른 탑을 수평 직선의 왼쪽부터 오른쪽 방향으로 차례로 세우고, 각 탑의 꼭대기에 레이저 송신기를 설치하였다. 모든 탑의 레이저 송신기는 레이저 신호를 지표면과 평행하게 수평 직선의 왼쪽 방향으로 발사하고, 탑의 기둥 모두에는 레이저 신호를 수신하는 장치가 설치되어 있다. 하나의 탑에서 발사된 레이저 신호는 가장 먼저 만나는 단 하나의 탑에서만 수신이 가능하다. \n  예를 들어 높이가 6, 9, 5, 7, 4인 다섯 개의 탑이 수평 직선에 일렬로 서 있고, 모든 탑에서는 주어진 탑 순서의 반대 방향(왼쪽 방향)으로 동시에 레이저 신호를 발사한다고 하자. 그러면, 높이가 4인 다섯 번째 탑에서 발사한 레이저 신호는 높이가 7인 네 번째 탑이 수신을 하고, 높이가 7인 네 번째 탑의 신호는 높이가 9인 두 번째 탑이, 높이가 5인 세 번째 탑의 신호도 높이가 9인 두 번째 탑이 수신을 한다. 높이가 9인 두 번째 탑과 높이가 6인 첫 번째 탑이 보낸 레이저 신호는 어떤 탑에서도 수신을 하지 못한다.\n  탑들의 개수 N과 탑들의 높이가 주어질 때, 각 각의 탑에서 발사한 레이저 신호를 어느 탑에서 수신하는지를 알아내는 프로그램을 작성하라. \n\n\n \n# 입력 \n \n첫째 줄에 탑의 수를 나타내는 정수 N이 주어진다. N은 1 이상 500,000 이하이다. \n둘째 줄에는 N개의 탑들의 높이가 직선상에 놓인 순서대로 하나의 빈칸을 사이에 두고 주어진다. 탑들의 높이는 1 이상 100,000,000 이하의 정수이다.\n\n\n \n# 출력 \n 첫째 줄에 주어진 탑들의 순서대로 각각의 탑들에서 발사한 레이저 신호를 수신한 탑들의 번호를 하나의 빈칸을 사이에 두고 출력한다. \n만약 레이저 신호를 수신하는 탑이 존재하지 않으면 0을 출력한다.\n \n# 입력 예시 \n 5\n6 9 5 7 4 \n# 출력 예시 \n 0 0 2 2 4 \n# 도움말 \n  \n# 출처 \n 2009 지역본선 초등 \n\n*************************************************************/\ntypedef unsigned int uint;\n#include \u003cstdio.h\u003e\ntypedef struct _IP{\n    uint n;\n    uint i;\n}ip;\nip tops[500000];\nint index=0;\nvoid push(int i){\n    tops[index]=ip{i,0};\n    index++;\n}\n\nint main(){\n    uint N;\n    scanf(\"%u\",\u0026N);\n    uint maxs=N;\n    uint n;\n    for(int i=0;i\u003cmaxs;i++){\n       // fputs(\"abc\", stdout);\n       scanf(\"%u\",\u0026n);\n       push(n);\n       for(int j=i-1;j\u003e=0;j--){\n           // printf(\"%d %d\",i,j);\n            if(tops[j].n\u003cn){\n                if(tops[j].i!=0)\n                {\n                    j=tops[j].i;\n                }\n                else{\n                    j=0;\n                }\n            }\n            else{\n                tops[i].i=j+1;\n                break;\n            }\n       }\n       //printf(\"\\n\");\n    }\n    for(int i=0;i\u003cmaxs;i+=1){\n            if(tops[i].i!=0){\n                printf(\"%d \",tops[i].i);\n            }\n            else{\n                printf(\"0 \");\n            }\n    }\n}\n\n/**************************************************************\n\t문제번호: 4654\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:94 ms\n\t메모리 사용량:4988 kb\n****************************************************************/\n\n"},{"Number":"4654","Time":"2014/03/18","Title":"탑","Code":"/**************************************************************\n# 문제 설명 \n \n문제 4) 탑 (초등 4)\n  KOI 통신연구소는 레이저를 이용한 새로운 비밀 통신 시스템 개발을 위한 실험을 하고 있다. 실험을 위하여 일직선 위에 N개의 높이가 서로 다른 탑을 수평 직선의 왼쪽부터 오른쪽 방향으로 차례로 세우고, 각 탑의 꼭대기에 레이저 송신기를 설치하였다. 모든 탑의 레이저 송신기는 레이저 신호를 지표면과 평행하게 수평 직선의 왼쪽 방향으로 발사하고, 탑의 기둥 모두에는 레이저 신호를 수신하는 장치가 설치되어 있다. 하나의 탑에서 발사된 레이저 신호는 가장 먼저 만나는 단 하나의 탑에서만 수신이 가능하다. \n  예를 들어 높이가 6, 9, 5, 7, 4인 다섯 개의 탑이 수평 직선에 일렬로 서 있고, 모든 탑에서는 주어진 탑 순서의 반대 방향(왼쪽 방향)으로 동시에 레이저 신호를 발사한다고 하자. 그러면, 높이가 4인 다섯 번째 탑에서 발사한 레이저 신호는 높이가 7인 네 번째 탑이 수신을 하고, 높이가 7인 네 번째 탑의 신호는 높이가 9인 두 번째 탑이, 높이가 5인 세 번째 탑의 신호도 높이가 9인 두 번째 탑이 수신을 한다. 높이가 9인 두 번째 탑과 높이가 6인 첫 번째 탑이 보낸 레이저 신호는 어떤 탑에서도 수신을 하지 못한다.\n  탑들의 개수 N과 탑들의 높이가 주어질 때, 각 각의 탑에서 발사한 레이저 신호를 어느 탑에서 수신하는지를 알아내는 프로그램을 작성하라. \n\n\n \n# 입력 \n \n첫째 줄에 탑의 수를 나타내는 정수 N이 주어진다. N은 1 이상 500,000 이하이다. \n둘째 줄에는 N개의 탑들의 높이가 직선상에 놓인 순서대로 하나의 빈칸을 사이에 두고 주어진다. 탑들의 높이는 1 이상 100,000,000 이하의 정수이다.\n\n\n \n# 출력 \n 첫째 줄에 주어진 탑들의 순서대로 각각의 탑들에서 발사한 레이저 신호를 수신한 탑들의 번호를 하나의 빈칸을 사이에 두고 출력한다. \n만약 레이저 신호를 수신하는 탑이 존재하지 않으면 0을 출력한다.\n \n# 입력 예시 \n 5\n6 9 5 7 4 \n# 출력 예시 \n 0 0 2 2 4 \n# 도움말 \n  \n# 출처 \n 2009 지역본선 초등 \n\n*************************************************************/\ntypedef unsigned int uint;\n#include \u003cstdio.h\u003e\ntypedef struct _IP{\n    uint n;\n    uint i;\n}ip;\nip tops[500000];\nint index=0;\nvoid push(int i){\n    tops[index]=ip{i,0};\n    index++;\n}\n\nint main(){\n    uint N;\n    scanf(\"%u\",\u0026N);\n    uint maxs=N;\n    uint n;\n    for(int i=0;i\u003cmaxs;i++){\n       // fputs(\"abc\", stdout);\n       scanf(\"%u\",\u0026n);\n       push(n);\n       for(int j=i-1;j\u003e=0;j--){\n           // printf(\"%d %d\",i,j);\n            if(tops[j].n\u003cn){\n                if(tops[j].i!=0)\n                {\n                    j=tops[j].i;\n                }\n                else{\n                    j=0;\n                }\n            }\n            else{\n                tops[i].i=j+1;\n                break;\n            }\n       }\n       //printf(\"\\n\");\n    }\n    for(int i=0;i\u003cmaxs;i+=1){\n            if(tops[i].i!=0){\n                printf(\"%d \",tops[i].i);\n            }\n            else{\n                printf(\"0 \");\n            }\n    }\n}\n\n/**************************************************************\n\t문제번호: 4654\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:94 ms\n\t메모리 사용량:4988 kb\n****************************************************************/\n\n"},{"Number":"2016","Time":"2014/02/27","Title":"천단위 구분기호","Code":"/**************************************************************\n# 문제 설명 \n 우리는 흔히 숫자를 쓸때 천단위 구분기호인 콤마(,)를 많이 쓴다.\n숫자가 입력되면 천단위 구분기호를 넣어 숫자를 출력하시오.\n \n# 입력 \n 첫째 줄에 숫자의 길이 n이 입력된다. (1 \u003c= n \u003c= 200)\n둘째 줄에 길이가 n인 숫자가 입력된다.\n \n# 출력 \n 첫단위 구분기호 콤마를 넣어 출력하시오.\n \n# 입력 예시 \n 8\n12421421 \n# 출력 예시 \n 12,421,421 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003ccstdio\u003e\n#define USE_STACK\n//#define STACK_PRINT_ERROR\n#ifdef USE_STACK\n/*\n    SSSSS   TTTTT   AAAAA   CCCCC   K  K    1       1       1\n    S         T     A   A   C       K K     1       1       1\n    SSSSS     T     AAAAA   C       KK      1       1       1\n        S     T     A   A   C       K K     1       1       1\n    SSSSS     T     A   A   CCCCC   K  K    1   .   1   .   1\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n                        by sunhokim.\n*/\nclass stack\n{\n private:\n     int len;\n     int index;\n     int *st;\n public:\n    //stack 1.1.1 by sunhokim\n    stack(int lens){\n        if(lens\u003e0){\n            st=new int[lens];\n            index=0;\n            len=lens;\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack length error---\\n\");\n            #endif\n        }\n    }\n    bool push(int n){\n        if(index\u003clen){\n            st[index]=n;\n            index++;\n            return true;\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack over error---\\n\");\n            #endif\n            return false;\n        }\n    }\n    int pop(){\n        if(index\u003e0){\n            index--;\n            return st[index];\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack min error---\\n\");\n            #endif\n        }\n    }\n    #ifndef STACK_MORE_SHORT\n    int getTop(){\n        return index;\n    }\n    int getLen(){\n        return len;\n    }\n    #ifndef STACK_SHORT\n    int spop(){\n        if(index\u003e0){\n            return st[index-1];\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack min error---\\n\");\n            #endif\n            return -279958905890;\n        }\n    }\n    int getVal(int idx){\n        if(idx\u003clen){\n            if(idx\u003c=index){\n                return st[idx];\n            }\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---no val---\\n\");\n            #endif\n            return 0;\n        }\n    }\n    #endif\n    #endif\n};\n#endif\n#include\u003ccstring\u003e\nint main(){\n    char str[1024];\n    int N;\n    scanf(\"%d\",\u0026N);\n    scanf(\"%s\",str);\n    int sl=strlen(str);\n    int s=(sl-(sl%3))/3;\n    N-=1;\n    int d=(N-N%3)/3;\n    int n=0;\n    stack st(N);\n    for(int i=sl-1;i\u003e=0;i--){\n        if(n==3){\n            st.push(i);\n            n=0;\n        }\n        n++;\n            //printf(\"%d\\n\",i);\n    }\n   // printf(\"d\\n\");\n\n    for(int i=0;i\u003csl;i++){\n        if(st.spop()+1==i){\n            printf(\",\");\n            st.pop();\n        }\n        printf(\"%c\",str[i]);\n\n      //  printf(\"%d %d\\n\",st.spop(),i);\n    }\n}\n\n/**************************************************************\n\t문제번호: 2016\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1208 kb\n****************************************************************/\n\n"},{"Number":"3140","Time":"2014/02/27","Title":"기차 교차로","Code":"/**************************************************************\n# 문제 설명 \n 무지개 마을과 달님 마을을 연결하는 외기인 기찻길이 있다.\n두 마을의 중간에 T자 모양의 교차로를 설치하기로 했다.\n교차로에서의 작업은 다음 두 가지가 있을 수 있다.\n\nS작업:무지개 마을에서 오는 기차를 교차로로 넣는다.\nX작업:교차로에 있는 기차를 달님 마을로 보낸다.\n1, 2, .. N의 번호를 가진 N대의 기차가 있다고 가정하자.\n이 기차들이 무지개 마을에서 어떤 순서로 출발하더라도 달님 마을에 번호 순서대로 도착하게 하려한다.\n예를 들어, 무지개 마을에서 4 3 2 1의 순서로 출발시켰다면 교차로에서는 SSSSXXXX의 작업을 수행하면 달님 마을에는 무사히 원하는 순서대로 기차를 보낼 수 있게 된다.\n만약 도착하지 못한다면 IMPOSSIBLE를 출력한다.\n기차의 출발 순서를 입력 받아, 기차를 달님 마을에 번호 순서대로 도착하게 하는 S, X작업 순서를 출력하는 프로그램을 작성하시오. \n# 입력 \n 첫째 줄에 기차의 대수인 N이 입력된다. ( 1 \u003c= N \u003c= 1,000 )\n둘째 줄에 출발하는 기차 번호가 공백으로 구분되어 차례대로 입력된다.\n \n# 출력 \n 순서대로 도착하기 위한 조작법을 출력한다.\n만약 불가능한 순서이면 \"IMPOSSIBLE\"을 출력한다.\n \n# 입력 예시 \n 4\n4 3 2 1  \n# 출력 예시 \n SSSSXXXX \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include\u003ccstdio\u003e\n#define USE_STACK\n#define STACK_PRINT_ERROR\n#ifdef USE_STACK\n/*\n    SSSSS   TTTTT   AAAAA   CCCCC   K  K    1       1\n    S         T     A   A   C       K K     1       1\n    SSSSS     T     AAAAA   C       KK      1       1\n        S     T     A   A   C       K K     1       1\n    SSSSS     T     A   A   CCCCC   K  K    1   .   1\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n                        by sunhokim.\n*/\nclass stack\n{\n private:\n     int len;\n     int index;\n     int *st;\n public:\n    //stack 1.1 by sunhokim\n    stack(int lens){\n        if(lens\u003e0){\n            st=new int[lens];\n            index=0;\n            len=lens;\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack length error---\\n\");\n            #endif\n        }\n    }\n    bool push(int n){\n        if(index\u003clen){\n            st[index]=n;\n            index++;\n            return true;\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack over error---\\n\");\n            #endif\n            return false;\n        }\n    }\n    int pop(){\n        if(index\u003e0){\n            index--;\n            return st[index];\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack min error---\\n\");\n            #endif\n        }\n    }\n    #ifndef STACK_MORE_SHORT\n    int getIndex(){\n        return index;\n    }\n    int getLen(){\n        return len;\n    }\n    #ifndef STACK_SHORT\n    int spop(){\n        if(index\u003e0){\n            return st[index-1];\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack min error---\\n\");\n            #endif\n            return 0;\n        }\n    }\n    int getVal(int idx){\n        if(idx\u003clen){\n            if(idx\u003c=index){\n                return st[idx];\n            }\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---no val---\\n\");\n            #endif\n            return 0;\n        }\n    }\n    #endif\n    #endif\n};\n#endif\nint go[1024];\nint ai=0;\nvoid push2(int n){\n    go[ai]=n;\n    ai++;\n}\nint splash(stack \u0026st){\n    int smax=0;\n    while(st.getIndex()!=0){\n        int n=st.pop();\n        if(n\u003esmax){\n            smax=n;\n        }\n        push2(1);\n    }\n    return smax;\n}\nint main(){\n    int n,N,t=1;\n    scanf(\"%d\",\u0026N);\n    stack st(N);\n    bool sr=false;\n    for(int i=0;i\u003cN;i++){\n        scanf(\"%d\",\u0026n);\n        if(t==n){\n            push2(0);\n            push2(1);\n            if(st.getIndex()!=0){\n                t=splash(st);\n            }\n            if(t\u003cn){\n              t=n;\n            }\n            t++;\n        }\n        else if(t\u003cn){\n            st.push(n);\n            push2(0);\n        }\n        else{\n            sr=true;\n            break;\n        }\n       // printf(\"%d\\n\",t);\n    }\n    if(sr==false){\n        for(int i=0;i\u003cai;i++){\n            if(go[i]==0){\n                printf(\"S\");\n            }\n            else{\n                printf(\"X\");\n            }\n        }\n    }\n    else{\n        printf(\"IMPOSSIBLE\");\n    }\n\n}\n\n/**************************************************************\n\t문제번호: 3140\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1212 kb\n****************************************************************/\n\n"},{"Number":"3140","Time":"2014/02/27","Title":"기차 교차로","Code":"/**************************************************************\n# 문제 설명 \n 무지개 마을과 달님 마을을 연결하는 외기인 기찻길이 있다.\n두 마을의 중간에 T자 모양의 교차로를 설치하기로 했다.\n교차로에서의 작업은 다음 두 가지가 있을 수 있다.\n\nS작업:무지개 마을에서 오는 기차를 교차로로 넣는다.\nX작업:교차로에 있는 기차를 달님 마을로 보낸다.\n1, 2, .. N의 번호를 가진 N대의 기차가 있다고 가정하자.\n이 기차들이 무지개 마을에서 어떤 순서로 출발하더라도 달님 마을에 번호 순서대로 도착하게 하려한다.\n예를 들어, 무지개 마을에서 4 3 2 1의 순서로 출발시켰다면 교차로에서는 SSSSXXXX의 작업을 수행하면 달님 마을에는 무사히 원하는 순서대로 기차를 보낼 수 있게 된다.\n만약 도착하지 못한다면 IMPOSSIBLE를 출력한다.\n기차의 출발 순서를 입력 받아, 기차를 달님 마을에 번호 순서대로 도착하게 하는 S, X작업 순서를 출력하는 프로그램을 작성하시오. \n# 입력 \n 첫째 줄에 기차의 대수인 N이 입력된다. ( 1 \u003c= N \u003c= 1,000 )\n둘째 줄에 출발하는 기차 번호가 공백으로 구분되어 차례대로 입력된다.\n \n# 출력 \n 순서대로 도착하기 위한 조작법을 출력한다.\n만약 불가능한 순서이면 \"IMPOSSIBLE\"을 출력한다.\n \n# 입력 예시 \n 4\n4 3 2 1  \n# 출력 예시 \n SSSSXXXX \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include\u003ccstdio\u003e\n#define USE_STACK\n#define STACK_PRINT_ERROR\n#ifdef USE_STACK\n/*\n    SSSSS   TTTTT   AAAAA   CCCCC   K  K    1       1\n    S         T     A   A   C       K K     1       1\n    SSSSS     T     AAAAA   C       KK      1       1\n        S     T     A   A   C       K K     1       1\n    SSSSS     T     A   A   CCCCC   K  K    1   .   1\n=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n                        by sunhokim.\n*/\nclass stack\n{\n private:\n     int len;\n     int index;\n     int *st;\n public:\n    //stack 1.1 by sunhokim\n    stack(int lens){\n        if(lens\u003e0){\n            st=new int[lens];\n            index=0;\n            len=lens;\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack length error---\\n\");\n            #endif\n        }\n    }\n    bool push(int n){\n        if(index\u003clen){\n            st[index]=n;\n            index++;\n            return true;\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack over error---\\n\");\n            #endif\n            return false;\n        }\n    }\n    int pop(){\n        if(index\u003e0){\n            index--;\n            return st[index];\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack min error---\\n\");\n            #endif\n        }\n    }\n    #ifndef STACK_MORE_SHORT\n    int getIndex(){\n        return index;\n    }\n    int getLen(){\n        return len;\n    }\n    #ifndef STACK_SHORT\n    int spop(){\n        if(index\u003e0){\n            return st[index-1];\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---stack min error---\\n\");\n            #endif\n            return 0;\n        }\n    }\n    int getVal(int idx){\n        if(idx\u003clen){\n            if(idx\u003c=index){\n                return st[idx];\n            }\n        }\n        else{\n            #ifdef STACK_PRINT_ERROR\n            printf(\"\\n---no val---\\n\");\n            #endif\n            return 0;\n        }\n    }\n    #endif\n    #endif\n};\n#endif\nint go[1024];\nint ai=0;\nvoid push2(int n){\n    go[ai]=n;\n    ai++;\n}\nint splash(stack \u0026st){\n    int max;\n    while(st.getIndex()!=0){\n        int n=st.pop();\n        if(n\u003emax){\n            max=n;\n        }\n        push2(1);\n    }\n    return max;\n}\nint main(){\n    int n,N,t=1;\n    scanf(\"%d\",\u0026N);\n    stack st(N);\n    bool sr=false;\n    for(int i=0;i\u003cN;i++){\n        scanf(\"%d\",\u0026n);\n        if(t==n){\n            push2(0);\n            push2(1);\n            if(st.getIndex()!=0){\n                t=splash(st);\n            }\n            t++;\n        }\n        else if(t\u003cn){\n            st.push(n);\n            push2(0);\n        }\n        else{\n            sr=true;\n            break;\n        }\n    }\n    if(sr==false){\n        for(int i=0;i\u003cai;i++){\n        if(go[i]==0){\n            printf(\"S\");\n        }\n        else{\n            printf(\"X\");\n        }\n    }\n    }\n    else{\n        printf(\"IMPOSSIBLE\");\n    }\n\n}\n\n/**************************************************************\n\t문제번호: 3140\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1212 kb\n****************************************************************/\n\n"},{"Number":"3129","Time":"2014/02/20","Title":"올바른 괄호 2","Code":"/**************************************************************\n# 문제 설명 \n 여는 괄호와 닫는 괄호의 개수만으로는 올바른 괄호 문자열을 판단할 수 없다.\n예를 들어, )()( 이런 문자열도 개수는 같지만 올바른 괄호 문자열이 아니다.\n어떤 괄호 문자열이 주어지면 올바른 괄호 문자열인지 판단하시오.\n \n# 입력 \n '('와 ')'로 이루어딘 괄호 문자열이 입력된다.(50,000글자 이하)\n \n# 출력 \n 올바른 괄호 문자열이면 \"good\", 올바른 괄호 문자열이 아니면 \"bad\"를 출력하시오.\n \n# 입력 예시 \n ))()(( \n# 출력 예시 \n bad \n# 도움말 \n stack을 이용하면 쉽게 판단할 수 있습니다.\n \n# 출처 \n  \n\n*************************************************************/\n#include\u003ccstdio\u003e\n#include\u003ccstring\u003e\nint stack[99999];\nint top=0;\nvoid push(int p){\n    stack[top]=p;\n    top++;\n}\nvoid pop(){\n    top--;\n}\nchar str[50001];\nint a=0;\nint main(){\n    scanf(\"%s\",\u0026str);\n    for(int i=0;i\u003cstrlen(str);i++){\n        if(str[i]=='('){\n            push(1);\n        }\n        if(str[i]==')'){\n            if(top\u003e0){\n                pop();\n            }\n            else{\n                a=1;\n                break;\n            }\n        }\n    }\n    if(top!=0){\n        a=1;\n    }\n    if(a==0){\n        printf(\"good\");\n    }\n    else{\n        printf(\"bad\");\n    }\n}\n\n/**************************************************************\n\t문제번호: 3129\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:4 ms\n\t메모리 사용량:1528 kb\n****************************************************************/\n\n"},{"Number":"3125","Time":"2014/02/20","Title":"문자열 제거","Code":"/**************************************************************\n# 문제 설명 \n 지훈이는 학원에서 문자열 1차원 배열을 학습하고 있다가 궁금한게 생겼다.\nAB[A]C[D[E]F]G 라는 문자열을 보다가 [괄호와 ]괄호 사이의 문자열을 없애고 싶어진 것이다.\n그런데 실력이 모자라 실패를 하고 있다.\n지훈이를 도와 [와 ]사이의 문자열을 제거하여 출력해보자.\nAB[A]C[D[E]F]G 문자열이 입력되면 [와 ]사이의 문자열을 제거하면 다음과 같다.\nABCG \n# 입력 \n 첫줄에 문자열이 입력된다.\n문자열의 길이는 200자를 넘지 않는다.(공백은 입력되지 않는다.)\n[괄호와 ]괄호는 꼭 쌍으로 입력되지 않으며, [괄호의 개수는 ]괄호의 개수보다 크거나 같다. \n# 출력 \n 처리조건에 의해 출력된 문자열만 출력한다. \n# 입력 예시 \n AB[A]C[D[E]F]G \n# 출력 예시 \n ABCG \n# 도움말 \n  \n# 출처 \n jin1sun \n\n*************************************************************/\n#include\u003ccstdio\u003e\n#include\u003ccstring\u003e\nint stack[99999];\nint top=0;\nvoid push(int p){\n    stack[top]=p;\n    top++;\n}\nvoid pop(){\n    top--;\n}\nchar str[50001];\nint main(){\n    scanf(\"%s\",\u0026str);\n    for(int i=0;i\u003cstrlen(str);i++){\n        if(str[i]=='['){\n            push(i);\n        }\n        if(str[i]==']'){\n\n            for(int j=i;j\u003e=stack[top-1];j--){\n                str[j]=' ';\n            }\n            pop();\n        }\n    }\n    for(int i=0;i\u003cstrlen(str);i++){\n            if(str[i]!=' '){\n                printf(\"%c\",str[i]);\n            }\n    }\n}\n\n/**************************************************************\n\t문제번호: 3125\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1520 kb\n****************************************************************/\n\n"},{"Number":"3002","Time":"2014/02/20","Title":"기억력 테스트 3","Code":"/**************************************************************\n# 문제 설명 \n 주현이 엄마의 훈련강도는 점점 강해지고 있다.\n이번에는 N개의 데이터를 차례대로 불러주고, M개의 질문을 하는데, 그 데이터를 몇 번째로 불렀는지를 묻고 있다. (정말 사악하다...)\n하지만 이번에는어려울 것을 예상해서 데이터를 부를때 오름차순으로 부르기로 했다.\n문제를 해결할 경우 주현이는 최신 장난감 \"또봇 W 쉴드온\"을 받을 수 있다.\n주현이를 도와줄 수 있는 프로그램을 만드시오.\n \n# 입력 \n 첫째줄에 N이 입력된다. (1 \u003c= N \u003c= 1,000,000)\n둘째 줄에 N개의 서로다른 숫자가 공백으로 구분되어 오름차순으로  입력된다. ( 데이터값의 범위 : 1 ~ 100,000,000)\n셋째줄에 질문의 수 M이 입력된다. ( 1 \u003c= M \u003c= 100,000)\n(단, 질문은 오름차순으로 묻지 않는다.)\n넷째 줄에 M개의 질문이 입력된다\n \n# 출력 \n M개의 질문에 대해 그 숫자가 있었으면 그 숫자의 위치를 출력, 없었으면 -1을 하나씩 차례대로 출력한다. \n# 입력 예시 \n 5\n2 23 55 87 100\n4\n5 2 100 55 \n# 출력 예시 \n -1 1 5 3  \n# 도움말 \n  데이터가 정렬되어 있다면 이진 탐색을 활용하면 됩니다. \n# 출처 \n 알고리즘(이진탐색) \n\n*************************************************************/\n#include\u003ccstdio\u003e\n#include\u003ciostream\u003e\nstruct tdata{\n    int index;\n    int data;\n};\ntdata ezin(int s,int *arr,int len){\n    tdata g={-1,-1};\n    int high=len,low=0,mid=(high+low)/2;\n    for(;;){\n        mid=(high+low)/2;\n        if(s\u003carr[mid]){\n            high=mid-1;\n        }\n        else if(s\u003earr[mid]){\n            low = mid+1;\n        }\n        else if(s==arr[mid]){\n            g.data=s;\n            g.index=mid+1;\n            break;\n        }\n        if(low==mid||mid==high){\n            break;\n        }\n    }\n    return g;\n}\nint main(){\n    int len,len2;\n    scanf(\"%d\",\u0026len);\n    int arr[len];\n    for(int i=0;i\u003clen;i++){\n            scanf(\"%d\",\u0026arr[i]);\n    }\n    //print(arr,len);\n    scanf(\"%d\",\u0026len2);\n    int s;\n    for(int i=0;i\u003clen2;i++){\n        scanf(\"%d\",\u0026s);\n        printf(\"%d \",ezin(s,arr,len).index);\n    }\n   // print(trap,len2);\n}\n\n/**************************************************************\n\t문제번호: 3002\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:388 ms\n\t메모리 사용량:5476 kb\n****************************************************************/\n\n"},{"Number":"1163","Time":"2014/01/16","Title":"당신의 사주를 봐 드립니다 2","Code":"/**************************************************************\n# 문제 설명 \n 태어난 해, 월, 일을 입력받아 사주팔자를 보는 프로그램을 작성하시오.\n\n사주를 보는 방법)\n세 수(년,월,일)가 주어지면,  (년 + 월 + 일)에 100의 자리 숫자가 짝수이면 \"대박\"을 출력, 그렇지 않으면 \"그럭저럭\"을 출력하세요.\n \n# 입력 \n 세 정수가 입력으로 주어진다. 순서대로 년도, 월, 일 이다.\n \n# 출력 \n 년도 + 월 + 일의 100의 자리가 숫자가 짝수이면 \"대박\"을 , 그렇지 않으면 \"그럭저럭\"을 출력하시오.\n \n# 입력 예시 \n 1502 2 10 \n# 출력 예시 \n 그럭저럭 \n# 도움말 \n 100의 자리 숫자만 알아내려면?\n1930에서 100의자리 숫자는 9이다.\n \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\n#include\u003cstring.h\u003e\nint main(){\n    int y,n,s;\n    int NUM;\n    char nmu[1024];\n    scanf(\"%d %d %d\",\u0026y,\u0026n,\u0026s);\n    NUM=y+n+s;\n    sprintf(nmu,\"%d\",NUM);\n    if((nmu[strlen(nmu)-3]-'0')%2==0){\n        printf(\"대박\");\n    }\n    else{\n        printf(\"그럭저럭\");\n    }\n\n}\n/**************************************************************\n\t문제번호: 1163\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1640","Time":"2014/01/16","Title":"악성 프로그램 삭제하기","Code":"/**************************************************************\n# 문제 설명 \n 현준이는 컴퓨터 인터넷이 느린 것을 알고, 제어판에 들어가 보니 여러 악성 프로그램이 설치 되어 있었다.\n현준이 컴퓨터 인터넷이 빨라지도록 도와주기 위해 제어판에 있는 프로그램을 입력하면 악성 프로그램과, 컴퓨터의 위험도를 출력하는 프로그램을 작성하시오. \n# 입력 \n 첫째 줄에 프로그램이 입력될 갯수  정수 n이 입력된다.(1\u003c=n\u003c=100)\n둘째 줄부터 n줄에 걸쳐 프로그램명인  문자열이 입력된다.(글자 수 : 50글자 이내) \n# 출력 \n 1. 악성 프로그램인지 아닌지 확인하는 방법 :\n  가. 프로그램명이 3글자 이하면 악성 프로그램이다.\n  나. 프로그램명에 tap이 들어가면 악성 프로그램이다.\n  다. 프로그램명에 xocure이 들어가면 악성 프로그램이다.\n2. 컴퓨터의 위험도 출력 방법 :\n  가. 입력된 프로그램명 중에서 악성 프로그램 수가 0~3개이면 safe,\n  나. 악성 프로그램 수가 4~6개이면 warning,\n  다. 악성 프로그램 수가 7개 이상이면 danger을 출력하시오. \n# 입력 예시 \n 8\nwindows tap\nhi\nmicrosoft office 2013\nxocure web player\nxecure safe\ngoclean\nalyac\nvon\n \n# 출력 예시 \n windows tap\nhi\nxocure web player\nvon\nwarning\n \n# 도움말 \n 문자열 처리 문제입니다.\n첫번째 n을 입력받을 때 아래와 같이 처리해야 정신적 스트레스를 줄일 수 있습니다.\nscanf(\"%d\\n\", \u0026n);\n프로그램 명에 공백이 있을 수 있으니 scanf보단 gets를 사용하는 것이 좋습니다.\n \n# 출처 \n hgss1004 \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n#include\u003cstring.h\u003e\nint main()\n{\n    int badPointer[1024],maxi=0,i=0,j=0,t=0;\n    char str[1024][1024],*temp,trash[1024];\n    scanf(\"%d\\n\",\u0026maxi);\n    for(i=0;i\u003cmaxi;i++){\n        gets(str[i]);\n    }\n    for(i=0;i\u003cmaxi;i++){\n        if(strlen(str[i])\u003c=3){\n            badPointer[t]=i;\n            t++;\n            continue;\n        }\n        else if(strstr(str[i],\"tap\")){\n             badPointer[t]=i;\n            t++;\n            continue;\n        }\n        else if(strstr(str[i],\"xocure\")){\n             badPointer[t]=i;\n            t++;\n            continue;\n        }\n    }\n        for(i=0;i\u003ct;i++){\n            printf(\"%s\\n\",str[badPointer[i]]);\n        }\n        if(t\u003c=3){\n            printf(\"safe\");\n        }\n        else if(t\u003c=6){\n            printf(\"warning\");\n        }\n        else if(t\u003e=7){\n            printf(\"danger\");\n        }\n\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1640\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:2004 kb\n****************************************************************/\n\n"},{"Number":"1714","Time":"2014/01/16","Title":"숫자 거꾸로 출력하기","Code":"/**************************************************************\n# 문제 설명 \n 현우는 숫자를 좋아한다. 항상 숫자를 가지고 장난을 하고 숫자로 무언가 만들기를 취미생활로 즐기고 있다.\n하루는 어떤 숫자를 쓰고, 그 수를 거꾸로 쓰기로 했다.\n어떤 수 N이 입력되면 그 수를 거꾸로 출력하는 프로그램을 작성하시오.\n예)\n입력 : 2571\n출력 : 1752\n\n입력 : 1200\n출력 : 0021\n\n\n \n# 입력 \n 입력되는 수 N은 0이상의 정수이다. \n# 출력 \n 입력된 수를 거꾸로 출력한다.\n \n# 입력 예시 \n 123456 \n# 출력 예시 \n 654321 \n# 도움말 \n  \n# 출처 \n 2012교내프로그래밍대회 \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n#include\u003cstring.h\u003e\nint main()\n{\n    char C[1024];\n    int i=0;\n    scanf(\"%s\",\u0026C);\n    for(i=strlen(C)-1;i\u003e=0;i--){\n        printf(\"%c\",C[i]);\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1714\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"4562","Time":"2014/01/16","Title":"숫자의 개수","Code":"/**************************************************************\n# 문제 설명 \n 문제2) 숫자의 개수(초등2)\n\n\n  세 개의 자연수 A, B, C가 주어질 때 A×B×C를 계산한 결과에 0부터 9까지 각각의 숫자가  몇 번씩 쓰여져 있는 지를 구하는 프로그램을 작성하시오.\n   \n  예를 들어 A=150, B=266, C=427이라면\n   \nA×B×C = 150×266×427 = 17037300\n   \n이 되고, 계산한 결과 17037300에는 0이 3번, 1이 1번, 3이 2번, 7이 2번 쓰여져 있다.\n   \n\n \n# 입력 \n 첫 째 줄에 A가, 둘째 줄에 B가, 셋째 줄에 C가 주어진다. A, B, C는 모두 100보다 같거나 크고, 1000보다 작은 자연수이다.\n \n# 출력 \n 첫째 줄에는 A×B×C의 결과에 0이 몇 번 쓰여졌는지를 출력한다. 마찬가지로 둘째 줄부터 열 번째 줄까지 A×B×C의 결과에 1부터 9까지의 숫자가 각각 몇 번 쓰여져 있는지 차례로 한 줄에 하나씩 출력한다.\n \n# 입력 예시 \n 150\n266\n427 \n# 출력 예시 \n 3\n1\n0\n2\n0\n0\n0\n2\n0\n0\n \n# 도움말 \n  \n# 출처 \n 2006 지역본선 초등 \n\n*************************************************************/\n#include \u003cstdio.h\u003e\n#include\u003cstring.h\u003e\nint main()\n{\n    int A,B,C;\n    int i;\n    char NUMC[1024];\n    int n[10];\n    memset(n,0,sizeof(n));\n    scanf(\"%d %d %d\",\u0026A,\u0026B,\u0026C);\n    sprintf(NUMC,\"%d\",A*B*C);\n    for(i=0;i\u003cstrlen(NUMC);i++){\n        n[NUMC[i]-'0']+=1;\n    }\n    for(i=0;i\u003c=9;i++){\n        printf(\"%d\\n\",n[i]);\n    }\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 4562\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1753","Time":"2014/01/09","Title":"코드 네임","Code":"/**************************************************************\n# 문제 설명 \n 어떤 회사에서는 이름을 사용하지 않고 코드네임이라는 것을 사용한다.\n이때 코드네임을 만드는 방법이 있는데 자신의 성을 제외한 이름만 영어로 바꾸어서 뒤집어 읽는것이라고 한다.\n이 때 n명의 사람의 영어 이름이 입력될 때 n명의 코드네임을 출력하시오. \n# 입력 \n 첫째줄에 n명이 입력된다.  (1\u003c=n\u003c=100)\n2번째줄부터 n명의 영어이름이 입력된다.(영어이름은 알파벳 소문자만 입력되고, 최대길이 100글자이내) \n# 출력 \n 각줄에 걸쳐 n명의 코드 네임을 출력하시오. \n# 입력 예시 \n 3\ntaehyeon\nhyeonmin\nsera\n \n# 출력 예시 \n noeyheat\nnimnoeyh\nares\n \n# 도움말 \n  \n# 출처 \n j960728 \n\n*************************************************************/\n#include\u003cstring.h\u003e\n#include\u003cstdio.h\u003e\nvoid mysubstr(char str[101], int start, int count)\n{\n    for(int i=start;i\u003cstart+count;i++){\n        printf(\"%c\",str[i]);\n    }\n}\nvoid rv(char str[101]){\n    int i=0;\n    for(i=strlen(str)-1;i\u003e=0;i--){\n        printf(\"%c\",str[i]);\n    }\n    printf(\"\\n\");\n}\nint main()\n{\n    int max=0;\n    char str[101][101];\n    scanf(\"%d\",\u0026max);\n    for(int i=0;i\u003cmax;i++){\n        scanf(\"%s\",\u0026str[i]);\n    }\n    for(int i=0;i\u003cmax;i++){\n        rv(str[i]);\n    }\n}\n\n/**************************************************************\n\t문제번호: 1753\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1610","Time":"2014/01/09","Title":"서브 스트링","Code":"/**************************************************************\n# 문제 설명 \n 서브 스트링 함수는 문자열 처리에 있어 아주 유용한 함수이다.(엑셀이나 VB에선 Mid함수)\n이 함수는 원본 문자열에서 특정위치에서 부터 몇 글자를 추출하는 함수이다.\n이 함수를 직접 구현해보자.\nchar *mysubstr(char *str, int start, int count)\n{\n    // 함수 처리부\n}\n\n \n# 입력 \n 첫째 줄에 문자열이 공백없이 입력된다.(문자열은 100글자 이하)\n둘째 줄에 문자열의 시작위치와 글자 개수가 입력된다.\n(첫글자는 시작위치가 0이다. 글자개수는 시작위치부터 출력할 글자 수를 의미한다.) \n# 출력 \n 결과를 출력한다. \n# 입력 예시 \n abcdefg\n2 3 \n# 출력 예시 \n cde \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nvoid mysubstr(char str[101], int start, int count)\n{\n    for(int i=start;i\u003cstart+count;i++){\n        printf(\"%c\",str[i]);\n    }\n}\nint main()\n{\n    char s[101]=\"dsd\";\n    int st;\n    int ed;\n    scanf(\"%s\",\u0026s);\n    scanf(\"%d %d\",\u0026st,\u0026ed);\n    mysubstr(s,st,ed);\n    return 0;\n}\n\n/**************************************************************\n\t문제번호: 1610\n\t아이디: ksunhokim\n\t사용언어: C\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1615","Time":"2014/01/07","Title":"셀프 넘버(Self-Number)","Code":"/**************************************************************\n# 문제 설명 \n 어떤 자연수 n이 있을 때, d(n)을 n의 각 자릿수 숫자들과 n 자신을 더한 숫자라고 정의하자.\n예를 들어 d(91) = 9 + 1 + 91 = 101 이 때, n을 d(n)의 제네레이터(generator)라고 한다.\n위의 예에서 91은 101의 제네레이터이다.\n어떤 숫자들은 하나 이상의 제네레이터를 가지고 있는데, 101의 제네레이터는 91 뿐 아니라 100도 있다.\n그런데 반대로, 제네레이터가 없는 숫자들도 있으며, 이런 숫자를 인도의 수학자 Kaprekar가 셀프 넘버(self-number)라 이름 붙였다.\n예를 들어 1,3,5,7,9,20,31 은 셀프 넘버 들이다. \n시작 값(a)과 마지막 값(b)가 입력되면 두 수 사이의 셀프 넘버들의 합을 출력하시오.\n \n# 입력 \n 시작 값(a)과 마지막 값(b)이 공백으로 분리되어 입력된다.( 1 \u003c= a \u003c= b \u003c= 5,000)\n \n# 출력 \n 두 수사이의 셀프넘버들의 합을 출력한다.\n \n# 입력 예시 \n 1 10 \n# 출력 예시 \n 25 \n# 도움말 \n 1부터 10사이의 셀프 넘버는 1, 3, 5, 7, 9이다. \n따라서 합은 25\n \n# 출처 \n 넥슨 입사 시험 \n\n*************************************************************/\n#include\u003cstdio.h\u003e\n#include\u003cstdlib.h\u003e\n\nint g(int n){\n\tint total=0;\n\tint m;\n\ttotal+=n;\n\twhile(n\u003e0){\n\t\tm=n%10;\n\t\tn=n/10;\n\t\ttotal+=m;\n\t}\n\treturn total;\n}\nint main()\n{\n\tint num=0;\n\tint i;\n\tint gs;\n\tint maxNUM=10;\n\tint start=1;\n\tscanf(\"%d %d\",\u0026start,\u0026maxNUM);\n\tbool selflist[maxNUM+1];\n\tfor(i=0;i\u003c=maxNUM;i++){\n\t\tselflist[i]=true;\n\t}\n\tfor(i=0;i\u003c=maxNUM;i++){\n\t\tgs=g(i);\n\t\tif(gs\u003c=maxNUM){\n\t\t\tselflist[gs]=false;\n\t\t}\n\t}\n\tfor(i=start;i\u003c=maxNUM;i++){\n\t\tif(selflist[i]!=0){\n\t\t\tnum+=i;\n\t\t}\n\t}\n\n\tprintf(\"%d\",num);\n\treturn 0;\n}\n\n/**************************************************************\n\t문제번호: 1615\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1711","Time":"2014/01/07","Title":"충돌 여부 확인","Code":"/**************************************************************\n# 문제 설명 \n 범진이는 닷지 게임을 만들기 위해 열공중이다. 닷지 게임은 아래와 같이 미사일을 피하는 게임이다.\n\n여기서 범진이는 아군 비행기와 붉은 점 미사일의 충돌 여부를 프로그래밍 해야 한다.\n아군 비행기는 사각형, 미사일은 한 점이며 (x, y)의 좌표가 입력되면 충돌여부를 결정하는 프로그램을 작성하시오. 단, 사각형 꼭지점이나 모서리에 점의 좌표가 일치하는 경우도 충돌한 것으로 본다.\n(※ 사각형의 좌표는 왼쪽 아래 꼭지점(x1, y1)과 오른쪽 위 꼭지점(x2, y2)의 좌표가 차례대로 입력된다.)\n\n예) \n\n\n\n.\n\n\n \n# 입력 \n 첫 줄에 사각형의 왼쪽 아래 좌표 (x1, y1)가 공백으로 구분되어 입력 되고,\n둘째 줄에 사각형의 오른쪽 위 좌표 (x2, y2)가 공백으로 구분되어 입력된다.\n셋째 줄에 점 미사일의 좌표 (x3, y3)가 공백으로 구분되어 입력된다.\n(모든 x, y의 값은 0보다 크다) \n# 출력 \n 충돌여부를 다음과 같이 출력하시오. \n사각형과 점이 충돌한다면 \"충돌\", 사각형과 점이 충돌하지 않는다면 \"비충돌\"을 출력하시오. \n# 입력 예시 \n 10 3\n15 8\n12 6 \n# 출력 예시 \n 충돌 \n# 도움말 \n  \n# 출처 \n 2012교내프로그래밍대회 \n\n*************************************************************/\n#include\u003cstdio.h\u003e\ntypedef struct point\n{\n\tint x;\n\tint y;\n}Point;\nint main()\n{\n\tint x,y;\n\tPoint rocket,bDownLeft,bDownRight,bUpLeft,bUpRight;\n\tscanf(\"%d %d\",\u0026x,\u0026y);\n\tbDownLeft.x=x;\n\tbDownLeft.y=y;\n\tscanf(\"%d %d\",\u0026x,\u0026y);\n\tbUpRight.x=x;\n\tbUpRight.y=y;\n\tscanf(\"%d %d\",\u0026x,\u0026y);\n\trocket.x=x;\n\trocket.y=y;\n\tbUpLeft.x=bDownLeft.x;\n\tbUpLeft.y=bUpRight.y;\n\tbDownRight.x=bUpRight.x;\n\tbDownRight.y=bDownLeft.y;\n\t//printf(\"(%d,%d),(%d,%d)(%d,%d),(%d,%d) \",bUpLeft.x,bUpLeft.y,bUpRight.x,bUpRight.y,bDownLeft.x,bDownLeft.y,bDownRight.x,bDownRight.y);\n\tif((x\u003e=bUpLeft.x\u0026\u0026x\u003c=bUpRight.x)\u0026\u0026(y\u003e=bDownLeft.y\u0026\u0026y\u003c=bUpLeft.y)){\n\t\tprintf(\"충돌\");\n\t}\n\telse{\n\t\tprintf(\"비충돌\");\n\t}\n\treturn 0;\n}\n\n/**************************************************************\n\t문제번호: 1711\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1416","Time":"2014/01/02","Title":"2진수 변환","Code":"/**************************************************************\n# 문제 설명 \n 어떤 10진수 n이 주어지면 2진수로 변환해서 출력하시오.\n\n예)\n10    -----\u003e  1010\n0    -----\u003e  0\n1    -----\u003e  1\n2    -----\u003e  10\n1024    -----\u003e  10000000000 \n# 입력 \n 10진수 정수 n이 입력된다.\n(n은 21억이하의 임의의 수이다.)\n \n# 출력 \n 2진수로 변환해서 출력한다.\n \n# 입력 예시 \n 7 \n# 출력 예시 \n 111 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint a;\n\tint ii=0;\n\tint v[100000]={0};\n\tscanf(\"%d\",\u0026a);\n\tif(a==0){\n\t\tprintf(\"0\");\n\t}\n\twhile(a\u003e0)\n    {\n\t\tv[ii]=a%2;\n\t\ta-=a%2;\n\t\ta/=2;\n\t\tii+=1;\n    }\n    for(int i=ii-1;i\u003e=0;i--){\n\t\tprintf(\"%d\",v[i]);\n    }\n}\n\n/**************************************************************\n\t문제번호: 1416\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1356 kb\n****************************************************************/\n\n"},{"Number":"1411","Time":"2014/01/02","Title":"빠진 카드","Code":"/**************************************************************\n# 문제 설명 \n 우리는 1부터 N까지의 숫자가 차례대로 적힌 N장의 카드 묶음을 가지고 있다.\n그런 데 이 카드 묶음을 옮기는 중 실수로 땅에 떨어뜨려 그 중 한 장을 잃어버렸다.\n여러 분은 땅에 떨어진 카드 묶음을 읽어서 빠진 하나의 카드 번호를 찾아 출력해야 한다. \n# 입력 \n 첫 줄에는 한 장을 잃어버리기 전 카드의 전체 장수 N이 주어져 있다. 단 . 3 \u003c= N \u003c= 50 이다.\n이어지는 N-1개의 각 줄에는 한 장이 빠진 카드 묶음의 카드 숫자가 하나씩 순서 없이 나열되어 있다. \n# 출력 \n 여러분은 주 어진 카드 묶음에서 빠진 하나의 카드를 찾아서 그 번호를 출력해야 한다. \n# 입력 예시 \n 10\n3\n4\n1\n10\n2\n6\n7\n5\n9 \n# 출력 예시 \n 8 \n# 도움말 \n  \n# 출처 \n 2013 지역본선 연습문제 \n\n*************************************************************/\n#include\u003cstdio.h\u003e\n#include\u003cstring.h\u003e\nint main(){\n\tint i=0;\n\tint d=0;\n\tint j=0;\n\tint da[50];\n\tint temp;\n\tscanf(\"%d\",\u0026d);\n\tfor(i=1;i\u003c=d;i++){\n\t\tda[i-1]=i;\n\t}\n\tfor(i=0;i\u003cd-1;i++){\n\t\tscanf(\"%d\",\u0026temp);\n\t\tfor(j=0;j\u003cd;j++){\n\t\t\tif(da[j]==temp){\n\t\t\t\tda[j]=0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i\u003cd;i++){\n\t\tif(da[i]!=0){\n\t\t\tprintf(\"%d\",da[i]);\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\n/**************************************************************\n\t문제번호: 1411\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1410","Time":"2014/01/02","Title":"올바른 괄호 1 (괄호 개수 세기)","Code":"/**************************************************************\n# 문제 설명 \n 프로그래밍을 할 때 가장 중요한 것 중 하나가 괄호의 개수를 맞추는 것이다.\n즉, 여는 괄호가 있으면 항상 닫는 괄호가 있고, 닫는 괄호가 있으면 여는 괄호도 있어야 한다.\n올바른 괄호를 확인하기 위해 가장 기본적인 방법 중 하나는 여는 괄호와 닫는 괄호의 개수를 세는 것이다.\n소괄호로 이루어진 문자열을 주어지면 괄호의 개수를 출력하는 프로그램을 작성하시오. \n# 입력 \n 괄호로 이루어진 문자열이 입력된다. (길이 100,000 이하) \n# 출력 \n 여는 괄호의 개수와 닫힌 괄호의 개수를 출력한다.\n \n# 입력 예시 \n ((())()(())) \n# 출력 예시 \n 6 6 \n# 도움말 \n  \n# 출처 \n SoulDomination \n\n*************************************************************/\n#include\u003cstdio.h\u003e\n#include\u003cstring.h\u003e\nint main(){\n\tchar c[100000];\n\tint i=0;\n\tint b=0;\n\tint d=0;\n\tscanf(\"%s\",c);\n\tfor(i=0;i\u003cstrlen(c);i++){\n\t\tif(c[i]==')'){\n\t\t\td+=1;\n\t\t}\n\t\tif(c[i]=='('){\n\t\t\tb+=1;\n\t\t}\n\t}\n\tprintf(\"%d %d\",b,d);\n}\n\n/**************************************************************\n\t문제번호: 1410\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:390 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1378","Time":"2014/01/02","Title":"수열의 합","Code":"/**************************************************************\n# 문제 설명 \n 동렬이는 수학 문제를 풀다 다음과 같은 수열을 보았다.\n$S_n = (1) + (1 + 2) + (1 + 2 + 3) + (1 + 2 + 3 + 4) + ... + (1 +  ... + n)$\n임의의 정수 $n$이 주어질 때 이 수열의 합 $S_n$을 구하는 프로그램을 작성하시오. \n# 입력 \n $n$이 입력된다. ($n \u003c= 50$) \n# 출력 \n 수열의 합 $S_n$의 값을 출력한다. \n# 입력 예시 \n 5 \n# 출력 예시 \n 35 \n# 도움말 \n  \n# 출처 \n salia \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint j;\n\tint d;\n\tint num=0;\n\tscanf(\"%d\",\u0026d);\n\tfor(i=0;i\u003c=d;i++){\n\t\tfor(j=0;j\u003c=i;j++){\n\t\t\tnum+=j;\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1378\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1378","Time":"2014/01/02","Title":"수열의 합","Code":"/**************************************************************\n# 문제 설명 \n 동렬이는 수학 문제를 풀다 다음과 같은 수열을 보았다.\n$S_n = (1) + (1 + 2) + (1 + 2 + 3) + (1 + 2 + 3 + 4) + ... + (1 +  ... + n)$\n임의의 정수 $n$이 주어질 때 이 수열의 합 $S_n$을 구하는 프로그램을 작성하시오. \n# 입력 \n $n$이 입력된다. ($n \u003c= 50$) \n# 출력 \n 수열의 합 $S_n$의 값을 출력한다. \n# 입력 예시 \n 5 \n# 출력 예시 \n 35 \n# 도움말 \n  \n# 출처 \n salia \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint j;\n\tint d;\n\tint num=0;\n\tscanf(\"%d\",\u0026d);\n\tfor(i=0;i\u003c=d;i++){\n\t\tfor(j=0;j\u003c=i;j++){\n\t\t\tnum+=j;\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1378\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1378","Time":"2014/01/02","Title":"수열의 합","Code":"/**************************************************************\n# 문제 설명 \n 동렬이는 수학 문제를 풀다 다음과 같은 수열을 보았다.\n$S_n = (1) + (1 + 2) + (1 + 2 + 3) + (1 + 2 + 3 + 4) + ... + (1 +  ... + n)$\n임의의 정수 $n$이 주어질 때 이 수열의 합 $S_n$을 구하는 프로그램을 작성하시오. \n# 입력 \n $n$이 입력된다. ($n \u003c= 50$) \n# 출력 \n 수열의 합 $S_n$의 값을 출력한다. \n# 입력 예시 \n 5 \n# 출력 예시 \n 35 \n# 도움말 \n  \n# 출처 \n salia \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint j;\n\tint d;\n\tint num=0;\n\tscanf(\"%d\",\u0026d);\n\tfor(i=0;i\u003c=d;i++){\n\t\tfor(j=0;j\u003c=i;j++){\n\t\t\tnum+=j;\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1378\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1358","Time":"2014/01/02","Title":"삼각형 출력하기 5","Code":"/**************************************************************\n# 문제 설명 \n 어떤 수 n을 입력받으면 다음과 같은 삼각형을 출력한다.\n\n여기서 입력되는 n은 반드시 홀수이다.\n\n \n# 입력 \n 3부터 99 까지의 홀수 중 하나가 입력된다.\n \n# 출력 \n Sample Output 같은 삼각형을 출력한다.\n \n# 입력 예시 \n 5 \n# 출력 예시 \n   *\n ***\n***** \n# 도움말 \n  ※ 불필요한 공백을 출력하면 표현 에러를 유발합니다.\n.은 공백을 말합니다.\n..*\n.***\n***** \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint j=0;\n\tint d=0;\n\tscanf(\"%d\",\u0026d);\n\tint s=d;\n\tfor(i=0;i\u003c=(d-1)/2;i++){\n\t\tfor(j=0;j\u003c(d-1)/2-i;j++){\n\t\t\tprintf(\" \");\n\t\t}\n\t\tfor(j=0;j\u003ci*2+1;j++){\n\t\t\tprintf(\"*\");\n\t\t}\n\t\tif(i!=(d-1)/2){\n\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}\n\n/**************************************************************\n\t문제번호: 1358\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1355","Time":"2014/01/02","Title":"삼각형 출력하기 3","Code":"/**************************************************************\n# 문제 설명 \n 길이 n이 입력되면 다음과 같은 역삼각형을 출력한다.\n\n예)\nn이 5이면\n*****\n ****\n  ***\n   **\n    *\n\n \n# 입력 \n 길이 n이 입력된다.\n \n# 출력 \n 역삼각형을 출력한다.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n ***\n **\n  * \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint j=0;\n\tint d=0;\n\tscanf(\"%d\",\u0026d);\n\tfor(i=d;i\u003e0;i--){\n\t\tfor(j=0;j\u003cd-i;j++){\n\t\t\tprintf(\" \");\n\t\t}\n\t\tfor(j=i;j\u003e0;j--){\n\t\t\tprintf(\"*\");\n\t\t}\n\t\tif(i!=1){\n\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}\n\n/**************************************************************\n\t문제번호: 1355\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1353","Time":"2014/01/02","Title":"삼각형 출력하기 1","Code":"/**************************************************************\n# 문제 설명 \n n이 입력되면 다음과 같은 삼각형을 출력하시오.\n\n예)\nn 이 5 이면\n*\n**\n***\n****\n*****\n \n# 입력 \n 길이 n이 입력된다.\n \n# 출력 \n 삼각형을 출력한다.\n \n# 입력 예시 \n 3 \n# 출력 예시 \n *\n**\n*** \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint j=0;\n\tint d=0;\n\tscanf(\"%d\",\u0026d);\n\tfor(i=1;i\u003c=d;i++){\n\t\tfor(j=0;j\u003ci;j++){\n\t\t\tprintf(\"*\");\n\t\t}\n\t\tif(i!=d){\n\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}\n\n/**************************************************************\n\t문제번호: 1353\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1675","Time":"2014/01/02","Title":"씨저의 암호 1","Code":"/**************************************************************\n# 문제 설명 \n 암호학에서 씨저 암호(Caesar cipher)는 가장 오래된 암호이고 가장 대표적인 대치(substitution) 암호로서 평문 문자를 다른 문자로 일대일 대응시켜 암호문을 만들어 내는 방식이다.\n\n씨저 암호는 알파벳을 3글자씩 밀려서 쓰면서 문장을 만들었다.\n실제 씨저는 부하인 브루투스에게 암살되기 전에 키케로에게 다음과 같은 암호문을 보냈다고 한다.\n\nqhyhu wuxvw euxwxv\n===\u003e never trust brutus    (절대 부루투스를 믿지마라)\n\n원리는 간단하다. 3작은 알파벳으로 치환하면 된다.\n암호 - A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n평문 - X Y Z A B C D E F G H I J K L M N O P Q R S T U V W \n\n씨저의 암호문이 주어지면 평문으로 복원하는 프로그램을 작성하시오.\n\n \n# 입력 \n 공백이 있는 영어 문자열이 주어진다.(최대 200글자)\n\n\n \n# 출력 \n 평문으로 복원하시오.\n \n# 입력 예시 \n qhyhu wuxvw euxwxv \n# 출력 예시 \n never trust brutus \n# 도움말 \n \n \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tchar chr;\n\twhile(scanf(\"%c\",\u0026chr)!=EOF){\n\t\tif(chr!='a'\u0026\u0026chr!='b'\u0026\u0026chr!='c'\u0026\u0026chr!=' '){\n\t\t\tchr-=3;\n\t\t}\n\t\telse if(chr=='a'||chr=='b'||chr=='c'){\n\t\t\tchr+=23;\n\t\t}\n\t\tprintf(\"%c\",chr);\n\t}\n}\n\n/**************************************************************\n\t문제번호: 1675\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1275","Time":"2014/01/02","Title":"k 제곱 구하기","Code":"/**************************************************************\n# 문제 설명 \n 어떤 수 n과 k가 있다.\nn과 k의 관계는 다음과 같다.\nnk\nnk는 n을 k번 곱한 것을 말한다.\n입력으로 n과 k가 주어지면 결과를 출력한다.\n\n예)\n52 = 25\n24 = 16\n \n# 입력 \n 공백을 기준으로 n과 k가 주어진다. (n은 0이 아닌 정수, k\u003e=0) \n# 출력 \n nk의 결과를 출력한다.\n \n# 입력 예시 \n 3 3 \n# 출력 예시 \n 27 \n# 도움말 \n ※ 어떤 수의 0승은 1입니다. \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint d=0;\n\tint num=1;\n\tscanf(\"%d %d\",\u0026i,\u0026d);\n\tfor(int j=0;j\u003cd;j++){\n\t\tnum*=i;\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1275\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1271","Time":"2014/01/02","Title":"최대값 구하기","Code":"/**************************************************************\n# 문제 설명 \n 입력의 개수 n이 입력되고 n개의  데이터가 입력된다.\n이 n개의 데이터 중 최대값을 출력한다.\n\n \n# 입력 \n 첫째줄에 정수의 개수 N이 주어진다. (n\u003c=1000)\n둘째줄에 N개의 정수가 공백으로 분리되어 주어진다.  ( 0 \u003c= 각각의 데이터 \u003c=1000000 )\n \n# 출력 \n N개의 정수 중 최대값을 찾아 출력한다.\n \n# 입력 예시 \n 5\n3 1 29 31 21 \n# 출력 예시 \n 31 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint d[1000];\n\tint da=0;\n\tint MAX=0;\n\tint i=0;\n\tscanf(\"%d\",\u0026da);\n\tfor(i=0;i\u003cda;i++){\n\t\tscanf(\"%d\",\u0026d[i]);\n\t}\n\tfor(i=0;i\u003cda;i++){\n\t\tif(MAX\u003cd[i]){\n\t\t\tMAX=d[i];\n\t\t}\n\t}\n\tprintf(\"%d\",MAX);\n}\n\n/**************************************************************\n\t문제번호: 1271\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1270","Time":"2014/01/02","Title":"1의 개수는? 1","Code":"/**************************************************************\n# 문제 설명 \n 구글 입사 시험으로 1 ~ 1,000,000까지 1의 개수를 묻는 문제가 나온적이 있다.\n우리는 이 문제를 풀기에는 아직 힘이 든다.\n우리는 이 문제를 조금 쉽게 바꾸어 풀려고한다.\n어떤 수 n이 주어지면 1부터 n까지의 수 중 맨 마지막 자리에 1이 몇 번 들어 있는지 알아내는 프로그램을 작성하시오.\n\n \n# 입력 \n n이 입력된다. ( 1 \u003c= n \u003c= 1,000,000 ) \n# 출력 \n 맨 마지막 자리에 1이 몇 번 들어 있는지 출력한다. \n# 입력 예시 \n 35 \n# 출력 예시 \n 4 \n# 도움말 \n 맨 마지막에 1이 나오는 경우는 1, 11, 21, 31  이므로 4번이다. \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\n#include\u003cstring.h\u003e\nint main(){\n\tint i=0;\n\tint num=0;\n\tint j=0;\n\tint da=0;\n\tscanf(\"%d\",\u0026da);\n\tfor(i=0;i\u003c=da;i++){\n\t\tif(i%10==1){\n\t\t\tnum+=1;\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1270\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:4 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1268","Time":"2014/01/02","Title":"n개의 수 중 짝수의 개수","Code":"/**************************************************************\n# 문제 설명 \n 수의 개수 n이 주어지고, 그 다음 줄에 무작위로 n개의 자연수가 입력된다.\n그 n개의 수 중에서 짝수의 개수를 출력하시오.\n \n# 입력 \n n은 자연수, 그 다음 줄에 n개의 자연수들이 입력으로 들어온다.\n \n# 출력 \n n개의 자연수들 중 짝수의 개수를 출력한다.\n \n# 입력 예시 \n 5\n3 5 7 15 2 \n# 출력 예시 \n 1 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint num=0;\n\tint da=0;\n\tscanf(\"%d\",\u0026da);\n\tint d[da];\n\tfor(i=0;i\u003cda;i++){\n\t\tscanf(\"%d\",\u0026d[i]);\n\t}\n\tfor(i=0;i\u003cda;i++){\n\t\tif(d[i]%2==0){\n\t\t\tnum+=1;\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1268\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1084 kb\n****************************************************************/\n\n"},{"Number":"1261","Time":"2014/01/02","Title":"First Special Judge (Test)","Code":"/**************************************************************\n# 문제 설명 \n 10개의 수가 입력된다.\n10개의 수 중 5의 배수를 하나만 출력한다.\n만약 5의 배수가 없다면 0을 출력한다. \n# 입력 \n 10개의 자연수가 입력된다 \n# 출력 \n 10개의 수 중 5의 배수가 있으면 그 중 하나만 출력하고, 없다면 0을 출력한다.\n \n# 입력 예시 \n 1 2 3 4 5 6 7 8 9 10 \n# 출력 예시 \n 5 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint num=0;\n\tint d[10];\n\tfor(i=0;i\u003c10;i++){\n\t\tscanf(\"%d\",\u0026d[i]);\n\t}\n\tfor(i=0;i\u003c10;i++){\n\t\tif(d[i]%5==0){\n\t\t\tif(num==0){\n\t\t\t\tnum=d[i];\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1261\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1260","Time":"2014/01/02","Title":"3의 배수의 합","Code":"/**************************************************************\n# 문제 설명 \n 어떤 수 a, b가 주어진다.\na와 b의 관계는 a \u003c= b 이다.\na에서 b까지의 수 중 3의 배수만 더하여 출력하시오. \n# 입력 \n 입력으로 두 자연수 a,  b가 주어진다. (a\u003c= b) \n# 출력 \n a~b까지의 수 중 3의 배수의 합을 출력한다. \n# 입력 예시 \n 3 7 \n# 출력 예시 \n 9 \n# 도움말 \n 3에서 7사이의 3의 배수는 3 , 6 이다.\n따라서 3+6=9 \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint d=0;\n\tint d2=0;\n\tint num=0;\n\tscanf(\"%d %d\",\u0026d,\u0026d2);\n\tfor(i=d;i\u003c=d2;i++){\n\t\tif(i%3==0){\n\t\t\tnum+=i;\n\t\t}\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1260\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1258","Time":"2014/01/02","Title":"1부터 n까지 합 구하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 n이 입력으로 들어오면 1부터 n까지의 합을 구하시오.\n \n# 입력 \n 입력으로 자연수 n이 입력된다. \n# 출력 \n 1부터 n까지의 합을 출력한다.\n \n# 입력 예시 \n 100 \n# 출력 예시 \n 5050 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint d=0;\n\tint num=0;\n\tscanf(\"%d\",\u0026d);\n\tfor(i=0;i\u003c=d;i++){\n\t\tnum+=i;\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1258\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"},{"Number":"1258","Time":"2014/01/02","Title":"1부터 n까지 합 구하기","Code":"/**************************************************************\n# 문제 설명 \n 정수 n이 입력으로 들어오면 1부터 n까지의 합을 구하시오.\n \n# 입력 \n 입력으로 자연수 n이 입력된다. \n# 출력 \n 1부터 n까지의 합을 출력한다.\n \n# 입력 예시 \n 100 \n# 출력 예시 \n 5050 \n# 도움말 \n  \n# 출처 \n  \n\n*************************************************************/\n#include\u003cstdio.h\u003e\nint main(){\n\tint i=0;\n\tint d=0;\n\tint num=0;\n\tscanf(\"%d\",\u0026d);\n\tfor(i=0;i\u003c=d;i++){\n\t\tnum+=i;\n\t}\n\tprintf(\"%d\",num);\n}\n\n/**************************************************************\n\t문제번호: 1258\n\t아이디: ksunhokim\n\t사용언어: C++\n\t결과: 정확한 풀이\n\t수행 시간:0 ms\n\t메모리 사용량:1092 kb\n****************************************************************/\n\n"}]