/**************************************************************
# 문제 설명 
 우리가 일상 생활에서 사용하는 수학식은 대부분 중위 표기법이다.
중위 표기법은 어떠한 이항 연산에 대해 연산 대상 사이에 연산자를 표기하는 방식이다.
예를 들면
$ 3 + 5 * 7 $
$ (6 + 9) * 8 $
등이 있다.
하지만 이런 중위 표기법은 연산자 우선 순위에 따라 괄호를 해야 한다는 단점이 있다.
이에 반해 후위 표기법은 두 피연산자를 먼저 쓰고 그 뒤에 연산자를 표기하는 방식이다.
위의 중위 표현을 예로 들면
$ 3$ $5$ $7$ $* + $
$ 6$ $9$ $+ 8 * $
이다.
후위 표기법은 연산자의 순서가 곧 계산 순서이므로 괄호가 필요 없다는 장점이 있다.
후위 표기법으로 된 식을 입력 받아 계산 결과를 출력하는 프로그램을 작성하시오. 
# 입력 
 후위 표기법으로 된 식이 입력된다.
주어지는 식은 자연수와 덧셈, 뺄셈, 곱셈만으로 이루어져 있으며, 각 자연수와 연산자 사이는 띄어 쓰기 되어 있다.
전체 식의 길이는 공백 문자 포함 200자 이하이다.
식에 포함된 자연수 및 식의 계산 결과는 $2^{30}$을 넘지 않는다. 
# 출력 
 식의 계산결과를 출력한다.
 
# 입력 예시 
 1 2 3 * + 4 5 - 6 * +  
# 출력 예시 
 1 
# 도움말 
   1 2 3 * + 4 5 - 6 * +
= 1 + 2 * 3 + (4 - 5) * 6
= 1 
# 출처 
 SoulDomination 

*************************************************************/
#include <iostream>
#include <stack>
#include <stdio.h>
#include <string.h>
using namespace std;
stack<int> st;
int pop()
{
    int a=st.top();
    st.pop();
    return a;
}
int main()
{
    char str[200];
    gets(str);
    char* ptr;
    ptr = strtok(str," ");
    while(ptr!=0)
    {
        if(ptr[0]=='*')
        {
            st.push(pop()*pop());
        }
        else if(ptr[0]=='-')
        {
            int a=pop();
            int b=pop();
            st.push(b-a);
        }
        else if(ptr[0]=='+')
        {
            st.push(pop()+pop());
        }
        else
        {
            int i;
            sscanf(ptr,"%d",&i);
            st.push(i);
        }
        ptr=strtok(0," ");
    }
    cout<<st.top();
}

/**************************************************************
	문제번호: 3127
	아이디: ksunhokim
	사용언어: C++
	결과: 정확한 풀이
	수행 시간:0 ms
	메모리 사용량:1708 kb
****************************************************************/

