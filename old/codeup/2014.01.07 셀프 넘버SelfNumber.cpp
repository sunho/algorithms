/**************************************************************
# 문제 설명 
 어떤 자연수 n이 있을 때, d(n)을 n의 각 자릿수 숫자들과 n 자신을 더한 숫자라고 정의하자.
예를 들어 d(91) = 9 + 1 + 91 = 101 이 때, n을 d(n)의 제네레이터(generator)라고 한다.
위의 예에서 91은 101의 제네레이터이다.
어떤 숫자들은 하나 이상의 제네레이터를 가지고 있는데, 101의 제네레이터는 91 뿐 아니라 100도 있다.
그런데 반대로, 제네레이터가 없는 숫자들도 있으며, 이런 숫자를 인도의 수학자 Kaprekar가 셀프 넘버(self-number)라 이름 붙였다.
예를 들어 1,3,5,7,9,20,31 은 셀프 넘버 들이다. 
시작 값(a)과 마지막 값(b)가 입력되면 두 수 사이의 셀프 넘버들의 합을 출력하시오.
 
# 입력 
 시작 값(a)과 마지막 값(b)이 공백으로 분리되어 입력된다.( 1 <= a <= b <= 5,000)
 
# 출력 
 두 수사이의 셀프넘버들의 합을 출력한다.
 
# 입력 예시 
 1 10 
# 출력 예시 
 25 
# 도움말 
 1부터 10사이의 셀프 넘버는 1, 3, 5, 7, 9이다. 
따라서 합은 25
 
# 출처 
 넥슨 입사 시험 

*************************************************************/
#include<stdio.h>
#include<stdlib.h>

int g(int n){
	int total=0;
	int m;
	total+=n;
	while(n>0){
		m=n%10;
		n=n/10;
		total+=m;
	}
	return total;
}
int main()
{
	int num=0;
	int i;
	int gs;
	int maxNUM=10;
	int start=1;
	scanf("%d %d",&start,&maxNUM);
	bool selflist[maxNUM+1];
	for(i=0;i<=maxNUM;i++){
		selflist[i]=true;
	}
	for(i=0;i<=maxNUM;i++){
		gs=g(i);
		if(gs<=maxNUM){
			selflist[gs]=false;
		}
	}
	for(i=start;i<=maxNUM;i++){
		if(selflist[i]!=0){
			num+=i;
		}
	}

	printf("%d",num);
	return 0;
}

/**************************************************************
	문제번호: 1615
	아이디: ksunhokim
	사용언어: C++
	결과: 정확한 풀이
	수행 시간:0 ms
	메모리 사용량:1084 kb
****************************************************************/

